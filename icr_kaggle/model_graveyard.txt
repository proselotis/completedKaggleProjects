# model graveyard non-neutralized


non_neut_v2_no_EH_FD = {
    #trial 304
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|BQ|DU', 'AB|BC|DU', 'AB|CR|DU', 'AB|CS|DU', 'AB|EE|FL', 'AB|DU|EE', 'DL|DU|EE', 'CD|CR|DU', 'AB|EE|GL', 'AB|BQ|GL', 'AB|BN|DU', 'AB|CC|DU', 'BQ|CR|DU', 'CR|DU|EL', 'DU|EL|EU', 'AB|BQ|FL', 'BQ|DY|GL', 'CR|DU|EU', 'AB|DU|EL', 'AB|AF|CR', 'AB|DE|FL', 'AB|DA|DU', 'AB|DE|DU', 'CD|DL|DU', 'BQ|CD|GL', 'AB|DA|FL', 'AB|EL|FL', 'AB|AF|BQ', 'BQ|DA|FL', 'CC|CD|DU', 'BQ|DA|DU', 'BQ|DA|GL', 'AB|AY|DU', 'CR|DA|DU', 'BQ|CD|CR', 'AB|AF|DU', 'AB|DU|FR', 'AB|BQ|GF', 'AB|DE|GL', 'AB|FR|GL', 'CR|DU|GH', 'BQ|CR|DN', 'BQ|DU|EU', 'BQ|CR|GF', 'CR|DU|FR', 'AB|BC|GL', 'CD|CR|GL', 'BQ|DL|DU', 'AB|EL|GL', 'AB|AF|FL', 'BC|CR|DU', 'AB|CR|FL', 'DU|DY|EL', 'AB|AF|GL', 'CC|DA|DU', 'AB|DU|FL', 'BQ|EB|GL', 'AB|BQ|CU', 'CC|CR|DU', 'BQ|CR|EB', 'BQ|EU|GL', 'DA|DU|EE', 'BQ|CR|GL', 'AB|CR|GL', 'AB|CR|CS', 'AB|CR|EE', 'BP|CR|GL', 'BQ|CR|EU', 'AM|DA|DU', 'AB|DU', 'CR|DU', 'AB|GL', 'DU|EU', 'BQ|GL', 'AB|FL', 'AB|EE', 'AB|BQ', 'AB|CR', 'BQ|CR', 'DU|EE', 'DU|EB', 'BQ|DU', 'BQ|DA', 'CR|GL', 'DL|DU', 'CD|GL', 'AB|AF', 'AB|BC', 'BC|CC', 'DA|DU', 'AF|GL', 'AB|EL', 'CD|DU', 'DI|DU', 'AB|CS', 'BQ|GF', 'AX|GL', 'BQ|DY', 'BQ|DL', 'DU|EL', 'CD|CR', 'AF|FL', 'DA|GL', 'CR|FL', 'CR|EB', 'AB|DA', 'DA|FL', 'AF|DL', 'DU|EG', 'DE|GL', 'AY|DU', 'AX|DU', 'BQ|FL', 'AB|DE', 'BQ|FI', 'AF|BQ', 'EL|EU', 'DU|EP', 'BQ|CD', 'CR|DA', 'CC|GL', 'AB|EU', 'CC|DU', 'AF|DU', 'AB|BN', 'AB|EB', 'BN|GL', 'CC|CD', 'AF|CR', 'CR|EL', 'AB|GF', 'CD|DL', 'CR|EU', 'EE|FL', 'BQ|CC', 'CC|DH', 'AF|CD', 'CC|DL', 'EB|GF', 'DI|EB', 'AF|CC', 'AB|CC', 'CD|EE', 'BQ|EE', 'CD|FL', 'CR|DE', 'BQ|EB', 'AB|FR', 'DY|EL', 'EU|GL', 'EE|GL', 'AF|EB', 'BC|DU', 'DH|GL', 'EB|FI', 'EB|GL', 'DA|EE', 'DE|DU', 'DY|EU', 'AF|EE', 'DY|GL', 'AB|CD', 'AF|DN', 'DE|FL', 'DU|DY', 'AF|BN', 'DE|FR', 'DU|FL', 'DE|EE', 'CC|DA', 'AB|CH', 'EU|FL', 'DL|FL', 'CD|EL', 'CC|DI', 'DI|GL', 'AX|FL', 'BC|FL', 'CD|GF', 'BC|GL', 'BQ|DE', 'DL|EB', 'CR|FI', 'CC|EB', 'CC|FL', 'AF|DI', 'EL|GL', 'BQ|DN', 'AX|DA', 'BC|CR', 'CD|DY', 'AB|AY', 'CR|FR', 'DH|DU', 'AF|EU', 'AF|DE', 'AB|CU', 'CC|CR', 'CR|EE', 'DL|EL', 'AF|GF', 'AB|DY', 'CR|GH', 'DL|GL', 'BQ|EU', 'CU|DA', 'CR|GF', 'BQ|DH', 'DA|DY', 'DA|DL', 'CR|DL', 'AF|CH', 'AB|FI', 'AF|DA', 'DA|EB', 'DI|DY', 'DA|FR', 'CU|DI', 'DU|FI', 'AX|EU', 'FC|FL', 'BP|CR', 'BQ|CB', 'AM|CR', 'BQ|FE', 'DA|DH', 'BP|GL', 'AM|DA', 'DU|GL', 'DU|FC', 'EB|FL'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 295,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05128444594339399, 
        'max_depth': 3,
        'colsample_bytree': 0.31277408786687955,
        'subsample': 0.6148154988119622,
        'lambda': 3,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.998039811109169
    },    
    "final_features" : ['AY_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CB_trans', 'CC_trans', 'CF_trans', 'CH_trans', 'CS_trans', 'DA_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EL_trans', 'FI_trans', 'GE_trans', 'GL_trans', 'CD * CR * DU_trans', 'AB * CC * DU_trans', 'BQ * CR * DU_trans', 'DU * EL * EU_trans', 'BQ * DY * GL_trans', 'CR * DU * EU_trans', 'AB * AF * CR_trans', 'BQ * CD * GL_trans', 'AB * AF * BQ_trans', 'AB * AY * DU_trans', 'BQ * CR * GF_trans', 'BQ * DL * DU_trans', 'AB * EL * GL_trans', 'BC * CR * DU_trans', 'CC * DA * DU_trans', 'AB * DU * FL_trans', 'BQ * EB * GL_trans', 'BP * CR * GL_trans', 'AB * DU_trans', 'AB * GL_trans', 'AB * BQ_trans', 'AB * CR_trans', 'DU * EE_trans', 'DL * DU_trans', 'CD * GL_trans', 'AB * BC_trans', 'DA * DU_trans', 'AF * GL_trans', 'CD * DU_trans', 'BQ * DY_trans', 'BQ * DL_trans', 'CR * EB_trans', 'DA * FL_trans', 'DU * EG_trans', 'AX * DU_trans', 'CR * DA_trans', 'AF * CR_trans', 'EE * FL_trans', 'DI * EB_trans', 'CD * FL_trans', 'AB * FR_trans', 'DH * GL_trans', 'EB * FI_trans', 'DY * EU_trans', 'DY * GL_trans', 'DE * FL_trans', 'AF * BN_trans', 'EU * FL_trans', 'DI * GL_trans', 'BQ * DE_trans', 'DL * EB_trans', 'BC * CR_trans', 'AB * DY_trans', 'DA * EB_trans', 'DA * FR_trans', 'AX * EU_trans', 'AM * CR_trans', 'BQ * FE_trans', 'AM * DA_trans']
    
}

july_9th = {
    # V4 CV: .21 - .22 LB: .19
    "interactions" : True,
    "custom_interactions_ind" : False,
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : False,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements" : [313,509],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 145,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.08417474441819862, 
        'max_depth':3,
        'colsample_bytree': 0.23866463997136664,
        'subsample': 0.6742965701284285,
        'lambda': 2,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.661736904289415
    },
    "final_features" : ['AB_trans', 'AF_trans', 'AH_trans', 'AM_trans', 'AY_trans', 'BC_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CL_trans', 'CR_trans', 'CS_trans', 'CU', 'DA_trans', 'DF_trans', 'DH', 'DI_trans', 'DL_trans', 'DN', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EP_trans', 'FC_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GI_trans', 'GL', 'AB * GL__trans', 'DF + DU__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans']
}


###############################################################################################################################################################################

test_non_neut_54_noAB_CR = {
        # V54  best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['BQ|DU', 'DA|DU', 'BQ|GL', 'DU|EU', 'BQ|DA', 'BC|CC', 'AF|BQ', 'DL|DU', 'CD|FL', 'AF|DL', 'DU|EB', 'AF|GL', 'DI|GL', 'BQ|BQ', 'BQ|FL', 'EB|GL', 'DU|EE', 'CD|DU', 'BQ|FI', 'EU|EU', 'BQ|DL', 'DU|FI', 'EL|EU', 'BQ|DY', 'DI|DL', 'DA|DU|EE', 'BQ|DA|DU', 'BQ|DI|GL', 'BQ|DL|GL', 'BQ|BQ|DA', 'DU|EU|EU', 'AM|DA|DU', 'DA|DU|EU', 'DA|DU|EL', 'DU|EL|EU', 'AF|DL|DU', 'DA|EU|EU', 'DL|EU|GL', 'AF|EL|GL', 'BC|DA|DU', 'BQ|GL|GL', 'BC|DL|DU', 'DA|DI|DU', 'AF|EH|GL', 'DY|EL|EU', 'AF|BQ|EE', 'BQ|EB|FI', 'BQ|BQ|FI', 'CD|DL|DU', 'AF|EE|GL'],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : False,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 233,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07560533558860598, 
        'max_depth':3,
        'colsample_bytree': 0.36242590813895204,
        'subsample': 0.7155091137824828,
        'lambda': 8,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.919560905679438
    },    
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CS_trans', 'CW_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FS_trans', 'GF_trans', 'GL_trans', 'BQ * DU_trans', 'DA * DU_trans', 'BQ * GL_trans', 'DU * EU_trans', 'BQ * DA_trans', 'AF * BQ_trans', 'CD * FL_trans', 'DU * EB_trans', 'BQ * BQ_trans', 'BQ * FL_trans', 'EB * GL_trans', 'DU * EE_trans', 'CD * DU_trans', 'BQ * FI_trans', 'EU * EU_trans', 'BQ * DL_trans', 'EL * EU_trans', 'BQ * DY_trans', 'BQ * DI * GL_trans', 'BQ * DL * GL_trans', 'BQ * BQ * DA_trans', 'DU * EU * EU_trans', 'DA * EU * EU_trans', 'AF * EL * GL_trans', 'BC * DA * DU_trans', 'BC * DL * DU_trans', 'AF * EH * GL_trans', 'DY * EL * EU_trans', 'AF * BQ * EE_trans', 'BQ * EB * FI_trans', 'BQ * BQ * FI_trans']
}




test_non_neut_54_noAB_CR_rerun = {
        # V54  best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['BQ|DU', 'DA|DU', 'BQ|GL', 'DU|EU', 'BQ|DA', 'BC|CC', 'AF|BQ', 'DL|DU', 'CD|FL', 'AF|DL', 'DU|EB', 'AF|GL', 'DI|GL', 'BQ|BQ', 'BQ|FL', 'EB|GL', 'DU|EE', 'CD|DU', 'BQ|FI', 'EU|EU', 'BQ|DL', 'DU|FI', 'EL|EU', 'BQ|DY', 'DI|DL', 'DA|DU|EE', 'BQ|DA|DU', 'BQ|DI|GL', 'BQ|DL|GL', 'BQ|BQ|DA', 'DU|EU|EU', 'AM|DA|DU', 'DA|DU|EU', 'DA|DU|EL', 'DU|EL|EU', 'AF|DL|DU', 'DA|EU|EU', 'DL|EU|GL', 'AF|EL|GL', 'BC|DA|DU', 'BQ|GL|GL', 'BC|DL|DU', 'DA|DI|DU', 'AF|EH|GL', 'DY|EL|EU', 'AF|BQ|EE', 'BQ|EB|FI', 'BQ|BQ|FI', 'CD|DL|DU', 'AF|EE|GL'],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : False,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 239,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.08657207586633751, 
        'max_depth':2,
        'colsample_bytree': 0.23230496832464229,
        'subsample': 0.6558266010799289,
        'lambda': 3,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.8193914049400695
    },    
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CS_trans', 'CW_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FS_trans', 'GF_trans', 'GL_trans', 'BQ * DU_trans', 'DA * DU_trans', 'BQ * GL_trans', 'DU * EU_trans', 'BQ * DA_trans', 'AF * BQ_trans', 'CD * FL_trans', 'DU * EB_trans', 'BQ * BQ_trans', 'BQ * FL_trans', 'EB * GL_trans', 'DU * EE_trans', 'CD * DU_trans', 'BQ * FI_trans', 'EU * EU_trans', 'BQ * DL_trans', 'EL * EU_trans', 'BQ * DY_trans', 'BQ * DI * GL_trans', 'BQ * DL * GL_trans', 'BQ * BQ * DA_trans', 'DU * EU * EU_trans', 'DA * EU * EU_trans', 'AF * EL * GL_trans', 'BC * DA * DU_trans', 'BC * DL * DU_trans', 'AF * EH * GL_trans', 'DY * EL * EU_trans', 'AF * BQ * EE_trans', 'BQ * EB * FI_trans', 'BQ * BQ * FI_trans']
}

non_neut_6_noGF_CR_path_1 = {
        # V54  best trial 
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 246,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07350118894196049, 
        'max_depth':3,
        'colsample_bytree': 0.7975625925081858,
        'subsample': 0.7997705116338681,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.818791469135989
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AY_trans', 'BP_trans', 'BQ_trans', 'CC_trans', 'CH_trans', 'DA_trans', 'DE_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'EU_trans', 'FR_trans']
}
######################################################################################################################################################################################


non_neut_v16_no_GF_CR_rerun = {
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.5,
    ## Model details
    "xgboost_boosting_rounds" : 175,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06974388488970566, 
        'max_depth':3,
        'colsample_bytree': 0.5392538444161625,
        'subsample': 0.5990421353106629,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.608329214497284
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'BC_trans', 'BQ_trans', 'CC_trans', 'CH_trans', 'DA_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FR_trans', 'GL_trans']
}


################################################################################################################################################################################################

non_neut_v24_noBD_DI_path_1 = {
        
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" :100 ,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 219,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07815315846202937, 
        'max_depth': 3,
        'colsample_bytree': 0.5521583500546181,
        'subsample': 0.6429660179244977,
        'lambda': 5,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.440546310468502
    },    
    "final_features" : ['CB_trans', 'AX_trans', 'CC_trans', 'FR_trans', 'FI_trans', 'AF_trans', 'GB_trans', 'DN_trans', 'EB_trans', 'AM_trans', 'BC_trans', 'EP_trans', 'GF_trans', 'DH_trans', 'CD_trans', 'EL_trans', 'BR_trans', 'FE_trans', 'EE_trans', 'AZ_trans', 'DF_trans', 'GL_trans', 'DY_trans', 'GH_trans', 'AB_trans', 'DV_trans', 'AY_trans', 'DA_trans', 'EG_trans', 'GI_trans', 'DU_trans', 'DL_trans', 'BP_trans', 'CH_trans', 'AR_trans', 'EU_trans', 'DE_trans', 'FS_trans', 'CW_trans', 'FL_trans', 'BZ_trans', 'EH_trans', 'CL_trans', 'BQ_trans']
}

neut_v48_noEP_AR_path_1_a = {
        
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : True,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" :75 ,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 190,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07128611306476826, 
        'max_depth': 3,
        'colsample_bytree': 0.5378751831528407,
        'subsample': 0.642431453699252,
        'lambda': 5,
        'min_child_weight':10 ,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.229659303471315
    },    
    "final_features" : ['CB_trans', 'AX_trans', 'CC_trans', 'FI_trans', 'AF_trans', 'GB_trans', 'DN_trans', 'EB_trans', 'AM_trans', 'BC_trans', 'DH_trans', 'CD_trans', 'BR_trans', 'CS_trans', 'FE_trans', 'EE_trans', 'AZ_trans', 'DY_trans', 'GH_trans', 'AB_trans', 'DA_trans', 'FC_trans', 'EG_trans', 'DI_trans', 'BD_trans', 'DU_trans', 'DL_trans', 'BP_trans', 'CH_trans', 'EU_trans', 'DE_trans', 'CU_trans', 'FL_trans', 'CL_trans', 'BN_trans', 'FD_trans', 'BQ_trans', 'CF_trans']
}
non_neut_v20_noBZ_GE_path_1_rerun = {
        # V54  best trial 
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 268,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06161249452586506, 
        'max_depth': 3,
        'colsample_bytree': 0.5241059942634554,
        'subsample': 0.6291827027624224,
        'lambda': 3,
        'min_child_weight':10 ,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.210292915061499
    },    
    "final_features" : ['AH_trans', 'CB_trans', 'CC_trans', 'FI_trans', 'DN_trans', 'EB_trans', 'AM_trans', 'BC_trans', 'EP_trans', 'DH_trans', 'CD_trans', 'EL_trans', 'BR_trans', 'BQ_trans', 'FE_trans', 'BN_trans', 'DF_trans', 'DY_trans', 'AB_trans', 'DA_trans', 'EG_trans', 'GI_trans', 'DI_trans', 'DU_trans', 'DL_trans', 'BP_trans', 'CH_trans', 'AR_trans', 'EU_trans', 'DE_trans', 'FS_trans', 'CU_trans', 'FL_trans', 'EH_trans', 'CL_trans', 'DV_trans', 'FR_trans']

}
non_neut_v23_noBZ_GE_path_1_rerun_2 = {
    #trial 260
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 211,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06893991602306959, 
        'max_depth': 3,
        'colsample_bytree': 0.4974336400073785,
        'subsample': 0.635560873445653,
        'lambda': 1,
        'min_child_weight':10 ,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.912539047303744
    },    
    "final_features" : ['CC_trans', 'FI_trans', 'DN_trans', 'EB_trans', 'AM_trans', 'BC_trans', 'EP_trans', 'CD_trans', 'EL_trans', 'BQ_trans', 'FE_trans', 'DY_trans', 'AB_trans', 'DA_trans', 'EG_trans', 'DI_trans', 'DU_trans', 'DL_trans', 'CH_trans', 'AR_trans', 'EU_trans', 'DE_trans', 'FS_trans', 'CU_trans', 'FR_trans']
}


non_neut_v26_no_CS_FD = {
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 250,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.056963320890946724, 
        'max_depth': 3,
        'colsample_bytree': 0.4500875604928447,
        'subsample': 0.6071431735478595,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.925350562548958
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AR_trans', 'BC_trans', 'BN_trans', 'BP_trans', 'BQ_trans', 'BZ_trans', 'CC_trans', 'CD_trans', 'CH_trans', 'CL_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FC_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GF_trans', 'GH_trans', 'GL_trans']
}
non_neut_v27_no_CS_FD = {
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 244,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06039157555219336, 
        'max_depth': 3,
        'colsample_bytree': 0.4421228329827881,
        'subsample': 0.5893905382994036,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.700201904886501
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AR_trans', 'BC_trans', 'BN_trans', 'BP_trans', 'BQ_trans', 'BZ_trans', 'CC_trans', 'CD_trans', 'CH_trans', 'CL_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FC_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GH_trans', 'GL_trans']
}
non_neut_v28_no_CS_FD = {
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 226,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07358044988930712, 
        'max_depth': 3,
        'colsample_bytree': 0.45140872840480334,
        'subsample': 0.6293495391426384,
        'lambda': 2,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.872631019199653
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AR_trans', 'BC_trans', 'BN_trans', 'BP_trans', 'BQ_trans', 'BZ_trans', 'CC_trans', 'CD_trans', 'CH_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FC_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GH_trans', 'GL_trans']
}

non_neut_vunk_no_BD_DI = {
    # These hp are not for these variabels, can be better 
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 247,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06667892370669, 
        'max_depth': 3,
        'colsample_bytree': 0.4315249502868007,
        'subsample': 0.5354317154978775,
        'lambda': 2,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.124252433953502
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'BZ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CH_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'FS_trans', 'GB_trans', 'GH_trans', 'GI_trans', 'GL_trans']
}

non_neut_v7_no_CD_EH = {
    # Trial 1961
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|DU|EL', 'AB|EE|FL', 'AB|CR|DU', 'AB|CR|FL', 'AB|BQ|CR', 'DA|DL|DU', 'DU|EL|EU', 'AB|BQ|DU', 'AB|DU|EE', 'BQ|DA|DU', 'BQ|CR|FL', 'AX|DA|DU', 'AB|EL|GL', 'CR|DU|EU', 'AB|BQ|GL', 'AB|EL|EU', 'AB|FR|GL', 'AF|CR|DU', 'BQ|DL|DU', 'CR|DU|EL', 'AB|DA|DU', 'AB|DU|FD', 'BQ|DY|GL', 'DA|DU|EE', 'AB|CS|DU', 'BQ|CR|DU', 'AB|CC|DU', 'DA|DU|EL', 'AB|DN|FL', 'AX|BQ|GL', 'AB|EB|FL', 'DA|DU|FE', 'AB|CR|GL', 'AB|AF|BQ', 'DE|DL|DU', 'AB|BQ|FL', 'DL|DU|EE', 'DU|DY|EL', 'BQ|EE|GL', 'AB|CS|GL', 'AB|DA|FD', 'BC|DA|DU', 'BQ|DU|EU', 'DH|DU|EE', 'AB|BC|GL', 'BQ|EU|GL', 'DU|DY|EU', 'BQ|CR|EB', 'CR|DU|FD', 'CR|EU|FL', 'CR|CS|DU', 'CR|DU|EE', 'AB|DL|DU', 'AB|BQ|FD', 'CR|DU|GH', 'AB|AF|DU', 'AB|BN|FL', 'AB|DU|FR', 'CR|EB|GF', 'AB|EE|GL', 'AF|CR|DL', 'BQ|DU|EE', 'AF|BQ|DU', 'AB|EL|FL', 'AB|BC|DU', 'DL|DU|EL', 'CR|DU|FI', 'CC|DH|DU', 'AX|DU|FD', 'AB|DI|DU', 'BQ|DA|GL', 'BQ|DU|FI', 'AB|DE|GL', 'AB|CR|EL', 'DA|DU|GH', 'AF|CR|GL', 'AB|BN|DU', 'BQ|DU|GL', 'AB|EL|FD', 'AB|BQ|CS', 'CR|DA|DU', 'AB|CS|FL', 'AB|BN|GL', 'AB|BQ|GF', 'BQ|EB|GF', 'AB|CR|CS', 'CC|DU|EU', 'CR|DU|FR', 'CR|DL|DU', 'AB|DE|DU', 'AB|FD|GL', 'AB|DU', 'AB|FL', 'CR|DU', 'BQ|GL', 'DU|EU', 'AB|GL', 'DA|DU', 'BQ|DU', 'AB|FD', 'AB|EL', 'AB|CR', 'BQ|CR', 'AB|EE', 'AF|CR', 'AB|AF', 'CR|GL', 'CR|EU', 'CR|FD', 'BQ|DY', 'AB|BQ', 'DI|DU', 'CR|FL', 'DL|DU', 'DU|EB', 'DU|EL', 'DU|EE', 'BQ|DA', 'BQ|FL', 'EL|EU', 'AB|EB', 'AB|CS', 'EB|GL', 'AF|EB', 'AF|DU', 'AB|DA', 'BQ|EB', 'EL|GL', 'AB|FR', 'AX|DA', 'AF|DL', 'BQ|FI', 'CC|DU', 'BC|DU', 'AX|DU', 'AX|GL', 'EU|FL', 'EB|GF', 'DU|EP', 'EB|FI', 'DA|GL', 'DY|GL', 'CR|EB', 'DH|DU', 'DA|DL', 'DA|EE', 'AF|BQ', 'BQ|DL', 'BP|CR', 'BC|CC', 'DA|EL', 'DA|FD', 'AB|EU', 'BQ|CC', 'DY|EL', 'DU|GL', 'DA|FE', 'AB|AY', 'BQ|DN', 'AB|GF', 'AF|GL', 'EU|GL', 'EE|FL', 'AF|EU', 'CR|EL', 'AM|DU', 'DU|FI', 'BN|GL', 'DE|FR', 'DA|EU', 'DH|EE', 'DL|EL', 'EE|GL', 'AB|DI', 'DH|FL', 'DU|EG', 'BQ|DH', 'BQ|GF', 'BC|DA', 'CR|DL', 'AB|DE', 'DA|EB', 'CR|DA', 'CC|DH', 'AF|FL', 'DA|FL', 'DU|FD', 'AF|FD', 'DU|FC', 'CC|EU', 'AF|CC', 'CU|DA', 'AB|BC', 'AF|DN', 'AB|FI', 'CR|EE', 'CR|DN', 'BQ|DE', 'DI|EE', 'DI|GL', 'AF|EE', 'AB|CC', 'CC|DI', 'DU|DY', 'BQ|EE', 'DE|GL', 'DL|EE', 'CC|DL', 'DE|DU', 'EB|FE', 'FD|FR', 'DA|DE', 'CC|EE', 'DU|FR', 'DI|FL', 'CR|DI', 'CR|DE', 'EL|FL', 'AB|DN', 'CC|FD', 'AM|DA', 'DH|DI', 'AB|BN', 'DI|EB', 'BQ|EU', 'FD|GL', 'BQ|EL', 'CC|GL', 'BQ|DI', 'AB|EP', 'EE|EU', 'AF|CH', 'BC|FL', 'AF|FI', 'DA|GH', 'BQ|CB', 'DH|GL', 'AB|CH', 'AB|DL', 'BN|CR', 'DI|FD', 'CR|GH', 'BN|FL', 'CC|EB', 'DL|FL', 'CC|FI', 'DU|FL'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 277,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05373627840414988, 
        'max_depth': 3,
        'colsample_bytree': 0.15944292612151964,
        'subsample': 0.6919525662224585,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.739229890073297
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'AZ_trans', 'BP_trans', 'BQ_trans', 'CF_trans', 'CH_trans', 'DA_trans', 'DN_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'FD_trans', 'AB * BQ * CR_trans', 'DA * DL * DU_trans', 'AB * DU * FD_trans', 'BQ * DY * GL_trans', 'BQ * CR * DU_trans', 'AB * CC * DU_trans', 'DA * DU * EL_trans', 'AB * DN * FL_trans', 'DE * DL * DU_trans', 'AB * CS * GL_trans', 'BC * DA * DU_trans', 'CR * CS * DU_trans', 'CR * DU * EE_trans', 'AB * DU * FR_trans', 'AF * CR * DL_trans', 'AB * EL * FL_trans', 'AB * BC * DU_trans', 'AB * DI * DU_trans', 'BQ * DA * GL_trans', 'AB * CS * FL_trans', 'BQ * EB * GF_trans', 'CC * DU * EU_trans', 'AB * FD * GL_trans', 'AB * DU_trans', 'BQ * GL_trans', 'AB * GL_trans', 'DA * DU_trans', 'AB * FD_trans', 'BQ * CR_trans', 'CR * GL_trans', 'BQ * DY_trans', 'AB * BQ_trans', 'DU * EE_trans', 'EU * FL_trans', 'EB * FI_trans', 'DY * GL_trans', 'CR * EB_trans', 'BQ * DL_trans', 'DY * EL_trans', 'AF * GL_trans', 'EE * FL_trans', 'DH * EE_trans', 'AB * DI_trans', 'DU * EG_trans', 'BC * DA_trans', 'CR * DA_trans', 'DA * FL_trans', 'AB * BC_trans', 'CR * DN_trans', 'BQ * DE_trans', 'AF * EE_trans', 'CC * EE_trans', 'DI * FL_trans', 'AM * DA_trans', 'DI * EB_trans', 'FD * GL_trans', 'AB * EP_trans', 'DH * GL_trans', 'BN * FL_trans', 'CC * FI_trans']
    
}

non_neut_v9_no_DY_CC = {
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|BQ|GL', 'AB|EE|FL', 'BQ|DA|DU', 'AB|DU|EL', 'BQ|CR|GF', 'AB|CR|DU', 'AB|FD|GL', 'BQ|DA|GL', 'AB|CR|EH', 'BQ|EE|GL', 'AB|CR|FL', 'DE|DL|DU', 'AB|CR|GL', 'AB|BQ|FL', 'AX|BQ|GL', 'AB|AF|GL', 'AB|DU|EE', 'BQ|DU|EU', 'DH|DI|DU', 'AB|DU|FD', 'AB|DU|FR', 'AB|BC|DU', 'BQ|CR|EH', 'AB|DA|DU', 'AB|DU', 'DU|EU', 'CR|DU', 'AB|GL', 'BQ|DU', 'AB|FD', 'CR|GL', 'DA|DU', 'AB|FL', 'BQ|GL', 'CR|FL', 'AB|EE', 'BQ|CR', 'AB|BQ', 'CR|EH', 'BQ|DA', 'AF|GL', 'BQ|DL', 'DU|EL', 'AB|FR', 'DE|DU', 'AB|EL', 'BQ|DE', 'BQ|FL', 'CR|DA', 'DU|EE', 'AB|CR', 'AB|EH', 'AX|GL', 'CD|DU', 'BQ|EB', 'AF|FL', 'AF|DL', 'AB|AF', 'BQ|GF', 'CD|DL', 'DA|GL', 'DA|EE', 'BQ|FI', 'AB|EU', 'AF|DU', 'AF|EB', 'DL|DU', 'EE|FL', 'EL|GL', 'DL|EH', 'CD|CR', 'DE|FR', 'CR|DE', 'AM|DU', 'AX|DU', 'DU|GL', 'DA|EH', 'CR|EU', 'EU|GL', 'BQ|EU', 'BQ|DN', 'DL|EL', 'EE|GL', 'CR|EB', 'DE|DL', 'CD|GL', 'DH|DI', 'AF|EE', 'DA|FL', 'DH|EE', 'BQ|EE', 'AB|CS', 'AB|EB', 'BC|DU', 'CR|FD', 'DE|FL', 'DL|FD', 'EB|GL', 'DA|EB', 'DE|EE', 'AB|BC', 'EB|GF', 'EB|FE', 'DH|DU', 'BN|GL', 'AB|DI', 'AF|CR', 'EH|GL', 'AF|BN', 'BC|FL', 'DE|GL', 'FD|GL', 'FE|GL', 'DL|FL', 'AF|BQ', 'DU|EG', 'DA|FD', 'AB|DE', 'AF|EH', 'AF|CD', 'BC|DA', 'DI|DU', 'AF|DA', 'DI|EB', 'BQ|EH', 'DU|FD', 'DU|FI', 'EE|EH', 'DI|GL', 'BQ|CD', 'CD|EH', 'AB|DL', 'CR|FR', 'EL|FL', 'BQ|DI', 'EL|EU', 'CB|EE', 'DL|GL', 'AB|BN', 'AB|CU', 'CR|DL', 'DH|FL', 'AB|DA', 'CD|DA', 'CU|GL', 'DA|EU', 'CR|GH', 'DL|EB', 'EH|EU', 'CU|DA', 'EH|FI', 'EB|FL', 'CD|GI', 'EU|FD', 'DA|DL', 'CD|FI', 'AB|GF', 'DI|DL', 'DH|GL', 'DA|FE', 'DU|EP'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 277,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06470751032809664, 
        'max_depth': 2,
        'colsample_bytree': 0.15470239773370303,
        'subsample': 0.7022590729178149,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.7171439177410575
    },    
    "final_features" : ['AM_trans', 'AZ_trans', 'BD_trans', 'BQ_trans', 'DA_trans', 'DE_trans', 'DL_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'FD_trans', 'FI_trans', 'AB * DU * EL_trans', 'BQ * CR * GF_trans', 'AB * FD * GL_trans', 'BQ * DA * GL_trans', 'BQ * EE * GL_trans', 'AB * CR * GL_trans', 'AB * BQ * FL_trans', 'AB * AF * GL_trans', 'AB * DU * FD_trans', 'AB * DU * FR_trans', 'AB * BC * DU_trans', 'DU * EU_trans', 'AB * GL_trans', 'CR * GL_trans', 'DA * DU_trans', 'BQ * GL_trans', 'AB * BQ_trans', 'BQ * DL_trans', 'AB * FR_trans', 'CR * DA_trans', 'AX * GL_trans', 'CD * DU_trans', 'AB * AF_trans', 'BQ * GF_trans', 'CD * DL_trans', 'AB * EU_trans', 'DL * DU_trans', 'EE * FL_trans', 'DE * FR_trans', 'DA * EH_trans', 'EE * GL_trans', 'CR * EB_trans', 'CD * GL_trans', 'DH * DI_trans', 'AF * EE_trans', 'DA * FL_trans', 'BQ * EE_trans', 'CR * FD_trans', 'AB * DI_trans', 'FD * GL_trans', 'FE * GL_trans', 'AF * EH_trans', 'DI * EB_trans', 'EE * EH_trans', 'DI * GL_trans', 'BQ * CD_trans', 'AB * DL_trans', 'EL * FL_trans', 'BQ * DI_trans', 'EL * EU_trans', 'CD * DA_trans', 'EB * FL_trans', 'EU * FD_trans', 'DA * DL_trans', 'DI * DL_trans', 'DH * GL_trans']
    
}
non_neut_v10_no_BQ = {
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|DU|EL', 'DL|DU|EE', 'AB|CR|FL', 'AB|CR|DU', 'CR|DU|EH', 'AB|AY|DU', 'CR|DA|DU', 'AF|DU|EE', 'AX|DA|DU', 'CR|DU|GH', 'AB|AF|DU', 'DL|DU|EU', 'CD|CR|DU', 'AB|DU|EE', 'AB|FR|GL', 'CC|CD|DU', 'AB|EH|FL', 'AB|EB|GL', 'CD|DU|EE', 'DL|DU|EL', 'BC|CC|FL', 'CR|DU|EL', 'AB|CC|GL', 'AB|CS|DU', 'AB|DA|DU', 'CR|DI|DU', 'AB|BC|DU', 'CR|DU|FS', 'AB|CR|GL', 'CR|EL|FL', 'DA|DU|EE', 'DI|DL|DU', 'CR|FL|GH', 'AB|EH|EL', 'CR|DA|EH', 'DA|DL|DU', 'CC|DA|DU', 'AF|DL|DU', 'CR|DU|EB', 'CR|DU|FE', 'CD|DL|DU', 'DA|DU|EL', 'CC|CR|DU', 'DU|EE|EU', 'CR|DU|FD', 'AB|EU|GL', 'AB|CR|EH', 'AM|DA|DU', 'DU|EL|EU', 'AB|EL|GL', 'AF|DU|EH', 'AB|EE|FL', 'AB|DE|DU', 'AB|DU|FD', 'AF|DU|EL', 'AB|DU|EH', 'AB|DU|FR', 'AB|CC|DU', 'BC|DL|DU', 'DU|EB|EE', 'CF|CR|DU', 'CR|DL|DU', 'AF|CR|FL', 'CR|DU|DY', 'AB|DU|EB', 'DH|EB|GL', 'AB|AF|EH', 'BC|DU|EU', 'DI|DU|EE', 'AB|CH|FL', 'CD|CR|FD', 'AB|EE|EL', 'AX|CR|FL', 'AB|DU|GF', 'AB|AF|CR', 'AB|DU|EU', 'AB|EH|FR', 'AM|CR|DU', 'DA|DI|DU', 'AB|EE|GL', 'CR|CS|DU', 'AB|CR|EE', 'AB|EH|GL', 'BC|CC|DU', 'CD|CR|FL', 'AM|DU|EU', 'AB|EE|EH', 'DU|EE|EH', 'CR|DA|FL', 'AB|CR|EL', 'DL|EE|FI', 'AF|CR|EH', 'AB|DU', 'CR|DU', 'CR|FL', 'AB|GL', 'AB|FL', 'AB|EH', 'AB|CR', 'AB|EL', 'DA|DU', 'CR|EH', 'DU|GL', 'DU|EE', 'AF|DU', 'DU|EU', 'DL|EE', 'AB|AF', 'DL|DU', 'CR|GL', 'AB|FD', 'AF|CR', 'AB|EB', 'EB|GL', 'EE|FL', 'DU|EP', 'AF|EE', 'BC|CC', 'AF|BN', 'CD|CR', 'AB|CS', 'DA|EB', 'DI|DL', 'AB|DA', 'DU|EB', 'DI|EB', 'CD|FL', 'EL|EU', 'AF|DL', 'CD|DU', 'AF|EH', 'EU|GL', 'CR|DA', 'EE|GF', 'AF|FL', 'EE|EU', 'DU|EL', 'AB|EE', 'AB|FR', 'CC|EH', 'DI|DU', 'CD|GL', 'CD|DL', 'CR|DL', 'CR|EL', 'DA|GL', 'CR|GH', 'CR|FD', 'AX|DU', 'CR|EB', 'CR|EU', 'BC|DL', 'DA|FL', 'DI|EE', 'BC|FL', 'CC|DL', 'AX|GL', 'DE|DU', 'CC|EB', 'AF|DE', 'DU|FI', 'CC|CD', 'DU|EH', 'CC|CR', 'AF|EU', 'DA|EE', 'AB|GF', 'BN|GL', 'AY|DU', 'AX|DA', 'DE|FR', 'CC|EU', 'DL|EU', 'AB|BC', 'EL|GL', 'EB|FI', 'CC|FL', 'FC|FL', 'DA|EH', 'EB|GF', 'BP|CR', 'AF|CC', 'EU|FL', 'CD|EE', 'AB|EU', 'AB|CC', 'CR|DI', 'BC|DU', 'CD|EL', 'EB|FL', 'AX|FL', 'AM|DA', 'DL|EL', 'DU|DY', 'AF|DI', 'DH|EB', 'BN|FL', 'AF|EB', 'EB|EU', 'AB|DE', 'CC|DA', 'DA|DL', 'AF|FD', 'BP|CC', 'DA|EL', 'DI|GL', 'DH|FL', 'CR|DE', 'CR|DH', 'CC|DU', 'DI|FL', 'AF|GL', 'AB|DH', 'CC|EE', 'DH|EE', 'AF|CH', 'DL|EB', 'CC|DH', 'AB|DL', 'DE|EU', 'AM|CR', 'EE|EH', 'DL|EH', 'DA|DY', 'CU|DA', 'DL|FL', 'EE|GL', 'CR|FE', 'AB|BP', 'DU|FR', 'AM|EH', 'FI|FL', 'DA|FD', 'AF|DY', 'CR|EE', 'BP|EH', 'AF|DA', 'BN|GF', 'AF|CD', 'DY|GL', 'CD|EH', 'CR|FR', 'DH|DI', 'DE|EE', 'EB|FE', 'AM|DU', 'DA|FR', 'DL|GL', 'DU|FD', 'DA|DI', 'CR|CS', 'EE|EL', 'DA|EU', 'DU|EG', 'BC|EU', 'EE|FR', 'AF|DH', 'BC|EB', 'DE|FL', 'DH|EU', 'DY|EL', 'EH|FI', 'CF|CR', 'EH|GL', 'CD|DH', 'CR|GF', 'AM|FL', 'AX|EH', 'BC|FD', 'BN|EE', 'EE|FD', 'AF|FI', 'DE|DL', 'DA|FE', 'AM|GL', 'DH|DU', 'BN|DA', 'DU|FC'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 191,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05608005804516165, 
        'max_depth': 5,
        'colsample_bytree': 0.35114385092210976,
        'subsample': 0.7497238646017331,
        'lambda': 9,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.730063998637511
    },    
    "final_features" : ['AF_trans', 'BP_trans', 'CH_trans', 'CU_trans', 'DA_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DY_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'GH_trans', 'DL * DU * EU_trans', 'CD * CR * DU_trans', 'CC * CD * DU_trans', 'AB * EB * GL_trans', 'CD * DU * EE_trans', 'AB * CC * GL_trans', 'DA * DL * DU_trans', 'CR * DU * FE_trans', 'AB * EL * GL_trans', 'AB * DE * DU_trans', 'AB * DU * FD_trans', 'AB * DU * FR_trans', 'AB * CC * DU_trans', 'CR * DL * DU_trans', 'AB * AF * EH_trans', 'CD * CR * FD_trans', 'AX * CR * FL_trans', 'AB * DU * EU_trans', 'AB * EH * GL_trans', 'AB * CR_trans', 'DA * DU_trans', 'CR * GL_trans', 'AB * FD_trans', 'AF * EE_trans', 'BC * CC_trans', 'CD * DU_trans', 'CR * DA_trans', 'CD * GL_trans', 'BC * DL_trans', 'CC * EU_trans', 'AB * BC_trans', 'DA * EH_trans', 'BN * FL_trans', 'CC * DU_trans', 'CC * EE_trans', 'DH * EE_trans', 'AM * CR_trans', 'DY * GL_trans', 'CR * CS_trans', 'DU * EG_trans', 'BC * EU_trans', 'BC * EB_trans', 'DY * EL_trans', 'CR * GF_trans', 'EE * FD_trans']
    
}


non_neut_v12_no_CD = {
    #trial 339
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['BQ|CR|DU', 'AB|DU|EL', 'AB|BQ|EH', 'CC|CR|DU', 'DL|DU|EE', 'AB|CR|FL', 'AB|BQ|GL', 'BQ|DA|DU', 'AB|BQ|CR', 'AX|DA|DU', 'AB|AF|DU', 'AB|CR|DU', 'CR|DU|EH', 'DL|DU|EU', 'AB|DU|EE', 'BQ|DU|EU', 'AB|CS|DU', 'AB|BQ|DU', 'BQ|EU|GL', 'BQ|DH|GL', 'CC|DA|DU', 'AB|CR|GL', 'BQ|CR|EH', 'AB|BQ|EL', 'BQ|CR|GL', 'AB|EB|GL', 'CR|DU|EL', 'AB|BQ|FL', 'CR|DA|DU', 'AF|BQ|CR', 'AB|BQ|FI', 'AB|DA|DU', 'CR|DU|GH', 'CR|DU|EB', 'AB|EE|FL', 'AM|DA|DU', 'AB|BQ|FR', 'DL|DU|EL', 'AB|CC|DU', 'BQ|CR|GF', 'CF|CR|DU', 'CR|EB|GL', 'CR|DU|FE', 'DI|DL|DU', 'AB|EH|FL', 'CR|DA|FL', 'BQ|DU|EE', 'BQ|DY|GL', 'BQ|DA|GL', 'AB|DU|FD', 'AB|DU|FR', 'AB|BC|DU', 'AB|DE|DU', 'AB|DU|EH', 'DU|EB|EE', 'AB|CR|EH', 'AM|CR|DU', 'BQ|DL|GL', 'BQ|EL|GL', 'CR|DU|FS', 'CR|DL|DU', 'CU|DA|DU', 'DA|DU|DY', 'AB|EE|GL', 'CR|DE|DU', 'AB|DU|EB', 'AB|EH|GL', 'AB|CR|FD', 'AB|EL|GL', 'AX|CR|FL', 'BQ|DU|DY', 'BQ|CR|EB', 'AB|EE|EH', 'AF|CR|FL', 'BQ|EB|GL', 'CR|DU|EU', 'BQ|DA|FL', 'AB|CR|EL', 'BQ|CR|FL', 'DU|EL|EU', 'DU|DY|EL', 'CR|EB|FL', 'CR|DU|EE', 'AB|CR|CS', 'AB|DU', 'CR|FL', 'CR|DU', 'AB|BQ', 'AB|FL', 'BQ|CR', 'AB|CR', 'AB|GL', 'BQ|DU', 'BQ|GL', 'AB|EH', 'BQ|DY', 'DU|EU', 'DA|DU', 'DL|EE', 'CR|EH', 'CR|GL', 'AB|AF', 'DU|GL', 'AF|BQ', 'BQ|FI', 'DU|EE', 'AB|EL', 'AF|DU', 'BQ|DA', 'AB|FD', 'BQ|GF', 'AB|DA', 'AB|EE', 'AB|CS', 'DL|DU', 'BQ|FL', 'EU|GL', 'AX|DU', 'CC|CR', 'DA|EB', 'DA|FL', 'DI|DL', 'EB|GL', 'AB|EB', 'EE|FL', 'DU|EH', 'AF|EE', 'AF|CR', 'BC|CC', 'EE|EU', 'DI|EB', 'DU|EP', 'DU|EL', 'AF|EH', 'BQ|DH', 'CR|EU', 'CR|DA', 'CR|EL', 'CR|EB', 'DA|EH', 'AF|DL', 'BQ|DN', 'BC|FL', 'CR|FD', 'AX|DA', 'DU|EB', 'AX|GL', 'AF|BN', 'BQ|EB', 'DA|GL', 'DA|EE', 'AF|EU', 'DI|DU', 'DL|EU', 'AB|BC', 'EB|FI', 'CR|DE', 'BQ|EH', 'DU|FI', 'BQ|DE', 'AF|FL', 'CC|DU', 'CR|DL', 'DE|DU', 'EE|GL', 'DL|EH', 'BQ|EU', 'AF|DI', 'CC|DI', 'AF|CC', 'BQ|CC', 'CR|GH', 'BC|DU', 'AB|FR', 'CR|DI', 'CC|DH', 'DI|GL', 'DA|EL', 'BQ|DL', 'AX|FL', 'CC|FL', 'EH|EU', 'EL|EU', 'AF|EB', 'CC|DA', 'DU|DY', 'DH|EB', 'AB|GF', 'CR|CS', 'DL|FL', 'CR|DH', 'DA|FD', 'AB|DE', 'AF|FD', 'AM|DA', 'EL|GL', 'EB|GF', 'EE|EH', 'AB|DN', 'DU|FR', 'DE|FR', 'EB|EU', 'CR|FE', 'AB|CC', 'AF|DE', 'AF|GL', 'DL|GL', 'DA|DL', 'EU|FL', 'AX|EE', 'AF|FE', 'AB|DL', 'AM|DU', 'EH|FI', 'BQ|EE', 'DL|EB', 'EH|GL', 'CC|EH', 'DE|EU', 'DE|EH', 'DY|GL', 'AF|DA', 'AM|CR', 'CF|CR', 'CU|DA', 'AB|CH', 'AX|CR', 'DH|EE', 'EH|FR', 'AF|DN', 'AF|FI', 'CR|EE', 'DE|EE', 'CR|GF', 'DU|EG', 'CR|FR', 'BQ|FD', 'BC|CR', 'BP|CR', 'AF|CH', 'DA|DY', 'AB|AY', 'DH|DU', 'DH|EH', 'BQ|FE', 'DU|FC'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 283,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05640412085335893, 
        'max_depth': 3,
        'colsample_bytree': 0.447122174280575,
        'subsample': 0.6024449432448786,
        'lambda': 2,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.988438398618655
    },    
    "final_features" : ['CH_trans', 'DI_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'FD_trans', 'CR * DU * FE_trans', 'BQ * DY * GL_trans', 'AB * DU * FD_trans', 'AB * DU * FR_trans', 'BQ * EL * GL_trans', 'CR * DL * DU_trans', 'CU * DA * DU_trans', 'AB * EE * GL_trans', 'AB * CR * FD_trans', 'BQ * DU * DY_trans', 'AB * CR_trans', 'BQ * DY_trans', 'DA * DU_trans', 'CR * GL_trans', 'AB * FD_trans', 'AX * DU_trans', 'AF * EE_trans', 'BC * CC_trans', 'AB * BC_trans', 'EB * FI_trans', 'DL * EH_trans', 'BQ * DL_trans', 'CC * DA_trans', 'CR * CS_trans', 'EE * EH_trans', 'AB * DN_trans', 'DY * GL_trans', 'AM * CR_trans', 'DH * EE_trans', 'DU * EG_trans', 'BQ * FD_trans', 'BC * CR_trans']
    
}

non_neut_v13_no_DU = {
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|CR|GL', 'AB|BQ|GL', 'BQ|CR|FL', 'AB|EE|GL', 'AB|FR|GL', 'AB|EL|GL', 'BQ|DY|GL', 'CD|CR|GL', 'BQ|CD|CR', 'AB|BQ|FD', 'BQ|DN|GL', 'AB|EE|EH', 'AB|EB|GL', 'AB|AF|BQ', 'CR|EU|GL', 'BQ|CR|GL', 'BQ|DA|GL', 'AF|BQ|GL', 'AB|AF|CR', 'AX|BQ|GL', 'BQ|DA|FL', 'AB|AY|GL', 'CD|CR|FL', 'BP|CR|FD', 'AB|EH|GL', 'BQ|EU|GL', 'BQ|EB|GF', 'BQ|CR|GF', 'AB|EE|FL', 'AF|CR|FL', 'AB|CS|GL', 'AB|BQ|CR', 'AB|CR|EH', 'AZ|CR|GL', 'AB|DE|GL', 'BP|BQ|CR', 'CR|EB|FL', 'AX|EU|GL', 'AB|BQ|FI', 'CR|DI|GL', 'CD|DY|GL', 'AB|BC|GL', 'AB|DA|GL', 'AX|DY|GL', 'BQ|DL|GL', 'AB|EL|FL', 'BQ|EL|GL', 'BQ|EE|GL', 'AB|BQ|FL', 'CD|EB|GL', 'AB|EH|FL', 'AB|AF|EH', 'BQ|DI|GL', 'AB|DN|GL', 'AB|DI|EH', 'BQ|CD|GL', 'DL|EB|GL', 'CD|CR|EH', 'CR|GH|GL', 'AB|BQ|CS', 'BQ|CD|FL', 'AF|CR|GL', 'AB|CC|GL', 'AB|CR|FL', 'AB|BQ|EH', 'BQ|CR|EH', 'CR|EB|GL', 'AF|AX|GL', 'AM|BQ|GL', 'AB|BC|FL', 'CR|EE|GL', 'BQ|DA|FD', 'CR|DE|GL', 'AB|AF|GL', 'AB|GL', 'AB|EH', 'BQ|GL', 'CR|GL', 'AB|FD', 'AB|BQ', 'AB|AF', 'CR|FL', 'AB|CR', 'CR|FD', 'AB|EE', 'BQ|FL', 'BQ|GF', 'CD|CR', 'CR|EH', 'AB|EL', 'BQ|CR', 'CD|FL', 'EU|GL', 'BN|GL', 'BQ|DA', 'BQ|EB', 'EB|GL', 'CD|GL', 'DY|GL', 'BQ|FI', 'EE|FL', 'AF|FL', 'DA|FD', 'AB|FL', 'AF|CR', 'AF|GL', 'CR|EB', 'AF|CD', 'DH|EB', 'AB|FR', 'CR|EU', 'BQ|DY', 'EH|GL', 'AF|EH', 'BC|CC', 'CC|EB', 'AF|BQ', 'AF|EE', 'DL|FL', 'EB|FL', 'AF|DL', 'EE|EH', 'AX|GL', 'BQ|CD', 'DA|FL', 'CR|DA', 'DA|GL', 'CR|FR', 'EB|GF', 'EE|GL', 'BP|CR', 'BQ|DN', 'BQ|DL', 'AB|DE', 'CR|DL', 'AF|DH', 'CR|GF', 'AB|GF', 'AF|FD', 'DI|EB', 'AB|CS', 'CD|DL', 'FL|GL', 'AM|CR', 'EB|FI', 'DA|EB', 'AB|DA', 'EL|GL', 'BQ|EE', 'BQ|CC', 'DI|GL', 'DL|GL', 'EL|FL', 'EU|FD', 'CC|GL', 'EB|EU', 'EL|EU', 'AB|CC', 'BQ|EH', 'BP|EH', 'AF|EB', 'EU|FL', 'CC|DH', 'CC|FL', 'CD|FD', 'CC|EH', 'AF|EU', 'AB|DN', 'DE|GL', 'DN|EB', 'AF|FI', 'AB|BC', 'DL|EH', 'AF|FR', 'DH|FL', 'CD|EH', 'CD|CU', 'BN|CR', 'EH|EU', 'CR|GH', 'AF|BN', 'DE|FL', 'DI|EH', 'DE|FR', 'CR|EE', 'CC|DE', 'BQ|EU', 'FC|FL', 'DE|EE', 'CR|DE', 'AB|AY', 'BQ|DE', 'BC|FL', 'CR|DH', 'DA|EH', 'EG|EH', 'BP|GL', 'BN|FL', 'DA|DL', 'EH|FL', 'AM|FL', 'BC|CR', 'AM|GL', 'CD|DY', 'AB|EB', 'EB|EE', 'EH|FI', 'AF|DA', 'DI|FL', 'AB|EP', 'AX|FL', 'EP|FL', 'EH|FR', 'DA|EE', 'AB|DY', 'EE|EU', 'DE|EB', 'FD|FL', 'EL|FI', 'CU|FL', 'CD|EE', 'AB|CU', 'BQ|FD', 'DE|FD', 'CR|DN', 'CC|FD', 'AF|DY', 'BQ|CU', 'AB|CH', 'DY|EL', 'AF|DE', 'AB|CD'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 222,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.057096908070604316, 
        'max_depth': 4,
        'colsample_bytree': 0.16718694366055842,
        'subsample': 0.739329218139796,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.899865884640117
    },    
    "final_features" : ['AB_trans', 'AM_trans', 'BP_trans', 'CH_trans', 'DN_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'FD_trans', 'FI_trans', 'AB * FR * GL_trans', 'BQ * DY * GL_trans', 'AB * EB * GL_trans', 'AB * AY * GL_trans', 'AB * EH * GL_trans', 'BQ * EB * GF_trans', 'AB * CS * GL_trans', 'AB * BQ * CR_trans', 'CR * EB * FL_trans', 'AX * DY * GL_trans', 'AB * EL * FL_trans', 'BQ * EL * GL_trans', 'CD * EB * GL_trans', 'AB * DN * GL_trans', 'AB * CC * GL_trans', 'AF * AX * GL_trans', 'AB * BC * FL_trans', 'AB * AF * GL_trans', 'AB * GL_trans', 'CR * GL_trans', 'AB * FD_trans', 'AB * BQ_trans', 'CD * FL_trans', 'CD * GL_trans', 'DY * GL_trans', 'EE * FL_trans', 'AF * CR_trans', 'BQ * DY_trans', 'EH * GL_trans', 'BC * CC_trans', 'AF * EE_trans', 'DL * FL_trans', 'EE * EH_trans', 'BQ * CD_trans', 'DA * FL_trans', 'CR * DA_trans', 'BQ * DL_trans', 'DI * EB_trans', 'FL * GL_trans', 'AM * CR_trans', 'EB * FI_trans', 'DI * GL_trans', 'EU * FD_trans', 'EL * EU_trans', 'CD * FD_trans', 'AB * BC_trans', 'DL * EH_trans', 'DE * FL_trans', 'DI * EH_trans', 'BQ * DE_trans', 'DA * EH_trans', 'EG * EH_trans', 'BN * FL_trans', 'BC * CR_trans', 'AB * EB_trans', 'EB * EE_trans', 'EH * FI_trans', 'DI * FL_trans', 'AB * EP_trans', 'AB * DY_trans', 'EL * FI_trans', 'CU * FL_trans', 'BQ * FD_trans', 'CR * DN_trans', 'AF * DE_trans', 'AB * CD_trans']
    
}

non_neut_v9_no_DY_CC = {
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['AB|BQ|GL', 'AB|EE|FL', 'BQ|DA|DU', 'AB|DU|EL', 'BQ|CR|GF', 'AB|CR|DU', 'AB|FD|GL', 'BQ|DA|GL', 'AB|CR|EH', 'BQ|EE|GL', 'AB|CR|FL', 'DE|DL|DU', 'AB|CR|GL', 'AB|BQ|FL', 'AX|BQ|GL', 'AB|AF|GL', 'AB|DU|EE', 'BQ|DU|EU', 'DH|DI|DU', 'AB|DU|FD', 'AB|DU|FR', 'AB|BC|DU', 'BQ|CR|EH', 'AB|DA|DU', 'AB|DU', 'DU|EU', 'CR|DU', 'AB|GL', 'BQ|DU', 'AB|FD', 'CR|GL', 'DA|DU', 'AB|FL', 'BQ|GL', 'CR|FL', 'AB|EE', 'BQ|CR', 'AB|BQ', 'CR|EH', 'BQ|DA', 'AF|GL', 'BQ|DL', 'DU|EL', 'AB|FR', 'DE|DU', 'AB|EL', 'BQ|DE', 'BQ|FL', 'CR|DA', 'DU|EE', 'AB|CR', 'AB|EH', 'AX|GL', 'CD|DU', 'BQ|EB', 'AF|FL', 'AF|DL', 'AB|AF', 'BQ|GF', 'CD|DL', 'DA|GL', 'DA|EE', 'BQ|FI', 'AB|EU', 'AF|DU', 'AF|EB', 'DL|DU', 'EE|FL', 'EL|GL', 'DL|EH', 'CD|CR', 'DE|FR', 'CR|DE', 'AM|DU', 'AX|DU', 'DU|GL', 'DA|EH', 'CR|EU', 'EU|GL', 'BQ|EU', 'BQ|DN', 'DL|EL', 'EE|GL', 'CR|EB', 'DE|DL', 'CD|GL', 'DH|DI', 'AF|EE', 'DA|FL', 'DH|EE', 'BQ|EE', 'AB|CS', 'AB|EB', 'BC|DU', 'CR|FD', 'DE|FL', 'DL|FD', 'EB|GL', 'DA|EB', 'DE|EE', 'AB|BC', 'EB|GF', 'EB|FE', 'DH|DU', 'BN|GL', 'AB|DI', 'AF|CR', 'EH|GL', 'AF|BN', 'BC|FL', 'DE|GL', 'FD|GL', 'FE|GL', 'DL|FL', 'AF|BQ', 'DU|EG', 'DA|FD', 'AB|DE', 'AF|EH', 'AF|CD', 'BC|DA', 'DI|DU', 'AF|DA', 'DI|EB', 'BQ|EH', 'DU|FD', 'DU|FI', 'EE|EH', 'DI|GL', 'BQ|CD', 'CD|EH', 'AB|DL', 'CR|FR', 'EL|FL', 'BQ|DI', 'EL|EU', 'CB|EE', 'DL|GL', 'AB|BN', 'AB|CU', 'CR|DL', 'DH|FL', 'AB|DA', 'CD|DA', 'CU|GL', 'DA|EU', 'CR|GH', 'DL|EB', 'EH|EU', 'CU|DA', 'EH|FI', 'EB|FL', 'CD|GI', 'EU|FD', 'DA|DL', 'CD|FI', 'AB|GF', 'DI|DL', 'DH|GL', 'DA|FE', 'DU|EP'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 265,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.0636761253502488, 
        'max_depth': 2,
        'colsample_bytree': 0.1671110833988575,
        'subsample': 0.7499004357928506,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.710996892994328
    },    
    "final_features" : ['AM_trans', 'AZ_trans', 'BD_trans', 'BQ_trans', 'DA_trans', 'DE_trans', 'DL_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'FD_trans', 'FI_trans', 'AB * DU * EL_trans', 'BQ * CR * GF_trans', 'AB * FD * GL_trans', 'BQ * DA * GL_trans', 'BQ * EE * GL_trans', 'AB * CR * GL_trans', 'AB * BQ * FL_trans', 'AB * AF * GL_trans', 'AB * DU * FD_trans', 'AB * DU * FR_trans', 'AB * BC * DU_trans', 'DU * EU_trans', 'AB * GL_trans', 'CR * GL_trans', 'DA * DU_trans', 'BQ * GL_trans', 'AB * BQ_trans', 'BQ * DL_trans', 'AB * FR_trans', 'CR * DA_trans', 'AX * GL_trans', 'CD * DU_trans', 'AB * AF_trans', 'BQ * GF_trans', 'CD * DL_trans', 'AB * EU_trans', 'DL * DU_trans', 'EE * FL_trans', 'DE * FR_trans', 'DA * EH_trans', 'EE * GL_trans', 'CR * EB_trans', 'CD * GL_trans', 'DH * DI_trans', 'AF * EE_trans', 'DA * FL_trans', 'BQ * EE_trans', 'CR * FD_trans', 'AB * DI_trans', 'FD * GL_trans', 'FE * GL_trans', 'AF * EH_trans', 'DI * EB_trans', 'EE * EH_trans', 'DI * GL_trans', 'BQ * CD_trans', 'AB * DL_trans', 'EL * FL_trans', 'BQ * DI_trans', 'EL * EU_trans', 'CD * DA_trans', 'EB * FL_trans', 'EU * FD_trans', 'DA * DL_trans', 'DI * DL_trans', 'DH * GL_trans']
    
}




test_non_neut_52_noAB = {
        # V52 no AB, best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['CR|DU', 'BQ|GL', 'BQ|CR', 'DA|DU', 'BQ|DU', 'BQ|DY', 'CR|EU', 'DU|EE', 'CR|DA', 'DU|EU', 'AF|CR', 'AF|BQ', 'CR|FL', 'DU|FI', 'BQ|DA', 'BQ|FI', 'CD|GL', 'CR|GL', 'EU|GL', 'DU|EB', 'DU|GL', 'AF|DL', 'CR|FD', 'CR|EH', 'BQ|DL', 'CR|DU|EU', 'BQ|CR|DU', 'AF|CR|DU', 'BQ|DA|DU', 'AF|CR|EU', 'CR|DU|EH', 'CR|DU|EL', 'BQ|DU|EU', 'AF|BQ|CR', 'CR|DA|DU', 'DA|DU|EU', 'CR|DU|GH', 'BQ|DN|GL', 'CR|CR|DU', 'AF|BQ|DL', 'DL|DU|EE', 'BQ|BQ|FI', 'CR|DU|FR', 'CR|DU|EE', 'AF|BQ|GL', 'BC|CR|DU', 'BQ|CD|GL', 'BQ|DA|GL', 'DA|DU|DY', 'BQ|DA|FL'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 250,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05571878615432789, 
        'max_depth':3,
        'colsample_bytree': 0.228722601813939,
        'subsample': 0.6979069689408814,
        'lambda': 1,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.8211037331183855
    },
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AY_trans', 'AZ_trans', 'BD_trans', 'BQ_trans', 'BR_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'CW_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EL_trans', 'EU_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GH_trans', 'GL_trans', 'CR * DU_trans', 'BQ * GL_trans', 'BQ * CR_trans', 'DA * DU_trans', 'BQ * DU_trans', 'BQ * DY_trans', 'CR * EU_trans', 'DU * EE_trans', 'CR * DA_trans', 'DU * EU_trans', 'AF * CR_trans', 'AF * BQ_trans', 'CR * FL_trans', 'BQ * FI_trans', 'CD * GL_trans', 'CR * GL_trans', 'EU * GL_trans', 'DU * EB_trans', 'CR * FD_trans', 'CR * EH_trans', 'BQ * DL_trans', 'CR * DU * EU_trans', 'BQ * CR * DU_trans', 'AF * CR * DU_trans', 'BQ * DA * DU_trans', 'AF * CR * EU_trans', 'CR * DU * EL_trans', 'BQ * DU * EU_trans', 'AF * BQ * CR_trans', 'CR * DA * DU_trans', 'DA * DU * EU_trans', 'CR * DU * GH_trans', 'BQ * DN * GL_trans', 'BQ * BQ * FI_trans', 'CR * DU * FR_trans', 'BC * CR * DU_trans', 'BQ * DA * GL_trans', 'BQ * DA * FL_trans']
}


test_non_neut_56_noAB_CR_BQ = {
        # V56 best trial (but kinda scuffed)
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['DU|EU', 'DA|DU', 'DI|EB', 'DI|GL', 'AX|GL', 'EU|EU', 'DU|EE', 'DI|DU', 'AF|DL', 'AF|DU', 'DA|FL', 'EB|GF', 'DI|DL', 'CC|DH', 'CC|DU', 'EB|FI', 'BC|CC', 'BN|GL', 'AF|BN', 'CC|CD', 'CD|DU', 'CD|GL', 'DU|EH', 'EE|FL', 'DU|EP', 'DU|EU|EU', 'AF|DU|EH', 'DA|DU|EL', 'DL|DU|EE', 'CC|DH|DU', 'CC|DU|EU', 'DA|EB|GF', 'CC|DI|GL', 'DL|DU|EU', 'AX|DA|DU', 'AF|DL|DU', 'CC|DI|DU', 'DI|DL|EE', 'DA|DL|DU', 'DH|DI|DU', 'AX|DA|FL', 'EB|EU|GF', 'AF|AF|FD', 'CD|DY|GL', 'CU|DI|GL', 'CU|DI|EB', 'AX|DA|GL', 'EB|EE|FL', 'DA|DH|EL', 'CD|DU|EE'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 223,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05291026940400329, 
        'max_depth': 3,
        'colsample_bytree': 0.19650060032915306,
        'subsample': 0.697277554300713,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.782776529103406
    },
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'BZ_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DE_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'EP_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL_trans', 'CR * GL_trans', 'BQ * CR_trans', 'BQ * GL_trans', 'BQ * BQ_trans', 'BQ * DY_trans', 'AF * GL_trans', 'CD * FL_trans', 'BQ * DL_trans', 'EB * GL_trans', 'DA * GL_trans', 'BQ * FI_trans', 'CD * CR_trans', 'BQ * FL_trans', 'AF * CR_trans', 'EH * GL_trans', 'EU * EU_trans', 'CR * EH_trans', 'CD * GL_trans', 'EB * GF_trans', 'BC * CC_trans', 'BQ * CD_trans', 'BQ * CR * GL_trans', 'BQ * CR * FL_trans', 'CD * CR * FL_trans', 'CR * CR * GL_trans', 'CR * EH * GL_trans', 'BQ * DL * GL_trans', 'CR * EL * FL_trans', 'BQ * BQ * EB_trans', 'DY * EB * GL_trans', 'AF * CR * GL_trans', 'CR * DH * GL_trans', 'BQ * BQ * DY_trans', 'AF * FD * GL_trans', 'BQ * CR * DL_trans', 'CR * EU * GL_trans', 'DH * EB * GF_trans', 'BQ * CR * GF_trans', 'BQ * BQ * CR_trans', 'EL * EU * EU_trans', 'BP * CR * GL_trans', 'BQ * EE * GL_trans', 'DA * EE * GL_trans']
}


test_non_neut_57_noAB_CR_BQ_DU = {
        # V57 best trial ## had to use a seprate notebook for this one: https://www.kaggle.com/code/proselotis/fork-of-icr-hyperparameter-tuning-optuna-0e0d47?scriptVersionId=136422546
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['DA|FL', 'EB|GL', 'DE|FR', 'EU|EU', 'AX|GL', 'AF|GL', 'AF|DL', 'DA|GL', 'DL|EB', 'CD|FL', 'DI|FL', 'DI|GL', 'BC|FL', 'EE|FL', 'AF|CC', 'CD|DL', 'EB|FI', 'DA|EB', 'BN|GL', 'DL|FL', 'AF|FL', 'AF|BC', 'BC|CC', 'CC|DI', 'CC|EH', 'AF|DL|GL', 'AF|DE|GL', 'CD|DL|FL', 'EB|FL|GF', 'DA|EB|FL', 'AF|AX|GL', 'CU|EB|GL', 'DI|FD|FR', 'DE|FR|FR', 'AX|DA|GL', 'DA|FE|FL', 'AF|BC|FL', 'DL|EE|FL', 'AF|DL|FL', 'DA|EL|FL', 'DY|EL|FL', 'AF|DI|FL', 'DA|DI|GL', 'EL|EU|EU', 'DA|EB|GL', 'DY|EB|GL', 'DA|DY|GL', 'BC|CC|FL', 'CC|DI|FL', 'AF|AX|DE'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 181,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07785869864590639, 
        'max_depth': 3,
        'colsample_bytree': 0.3129646416114814,
        'subsample': 0.4120567003860856,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.84059529335558
    },
    "final_features" : ['AF_trans', 'BD_trans', 'BN_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DE_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'FD_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GE_trans', 'GI_trans', 'GL_trans', 'DA * FL_trans', 'EU * EU_trans', 'DL * EB_trans', 'CD * FL_trans', 'EE * FL_trans', 'EB * FI_trans', 'BN * GL_trans', 'AF * FL_trans', 'AF * BC_trans', 'BC * CC_trans', 'CC * EH_trans', 'AF * DL * GL_trans', 'AF * DE * GL_trans', 'CD * DL * FL_trans', 'EB * FL * GF_trans', 'DA * EB * FL_trans', 'AF * AX * GL_trans', 'DI * FD * FR_trans', 'DE * FR * FR_trans', 'DA * FE * FL_trans', 'AF * BC * FL_trans', 'DA * EL * FL_trans', 'DY * EL * FL_trans', 'AF * DI * FL_trans', 'EL * EU * EU_trans', 'DA * DY * GL_trans', 'BC * CC * FL_trans', 'CC * DI * FL_trans']
}


test_non_neut_58_noAB_CR_DU = {
        # V56 best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['BQ|GL', 'DA|FL', 'CD|FL', 'BQ|DY', 'BQ|FL', 'BQ|BQ', 'AX|GL', 'CC|DH', 'BQ|FI', 'DA|EH', 'BQ|EB', 'DE|FR', 'EL|GL', 'BC|CC', 'EU|EU', 'BQ|CC', 'BQ|DN', 'BQ|DA', 'DA|GL', 'EH|GL', 'EB|GF', 'EE|FL', 'DY|GL', 'AF|BQ', 'BQ|EH', 'DF|EL|GL', 'BQ|BQ|FI', 'BQ|DY|GL', 'DE|EE|GL', 'EB|FE|GF', 'BQ|CD|FL', 'BD|DF|EL', 'BQ|DL|EB', 'DH|EB|GF', 'CD|DY|FL', 'BQ|BQ|DY', 'BQ|BR|FL', 'AZ|DA|FL', 'BQ|BQ|FL', 'BC|DA|GL', 'CD|DA|FL', 'CD|DE|GL', 'BQ|BQ|DN', 'AF|BQ|DN', 'DH|DI|GL', 'DL|EE|FL', 'AF|BQ|DY', 'EB|EU|GF', 'BP|CC|DA', 'AF|CD|FL'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 231,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07983391999911707, 
        'max_depth':2,
        'colsample_bytree': 0.3467499528333166,
        'subsample': 0.7397695376396625,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.99915943762431
    },
    "final_features" : ['AF_trans', 'AM_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BQ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CS_trans', 'CU_trans', 'DE_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EP_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GI_trans', 'GL_trans', 'BQ * GL_trans', 'DA * FL_trans', 'CD * FL_trans', 'BQ * DY_trans', 'BQ * FL_trans', 'CC * DH_trans', 'BQ * FI_trans', 'DA * EH_trans', 'BQ * EB_trans', 'DE * FR_trans', 'BC * CC_trans', 'EU * EU_trans', 'BQ * CC_trans', 'BQ * DN_trans', 'BQ * DA_trans', 'DA * GL_trans', 'EH * GL_trans', 'EB * GF_trans', 'EE * FL_trans', 'DY * GL_trans', 'BQ * EH_trans', 'DF * EL * GL_trans', 'BQ * BQ * FI_trans', 'BQ * DY * GL_trans', 'DE * EE * GL_trans', 'BQ * CD * FL_trans', 'BQ * DL * EB_trans', 'DH * EB * GF_trans', 'CD * DY * FL_trans', 'BQ * BQ * DY_trans', 'BQ * BR * FL_trans', 'AZ * DA * FL_trans', 'BC * DA * GL_trans', 'BQ * BQ * DN_trans', 'AF * BQ * DN_trans', 'DH * DI * GL_trans', 'AF * BQ * DY_trans', 'EB * EU * GF_trans', 'BP * CC * DA_trans', 'AF * CD * FL_trans']
}

test_non_neut_59_noAB_BQ_DU = {
        # V59 best trial (kinda scuffed)
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['CR|EH', 'EU|EU', 'CR|GL', 'CR|FL', 'EE|FL', 'EH|GL', 'DA|EH', 'DA|FL', 'AF|GL', 'DL|EB', 'AF|FL', 'EU|FL', 'EB|FL', 'AF|EB', 'DL|FL', 'CD|FL', 'BP|CC', 'EU|FD', 'BC|CC', 'EB|GL', 'DA|FD', 'DI|GL', 'AF|DL', 'CC|EB', 'CD|EH', 'BC|DA|FL', 'CR|CR|EH', 'CR|EH|GL', 'CR|CR|GL', 'CC|DL|EB', 'AF|EB|FL', 'EE|EU|FL', 'DY|EE|FL', 'CD|DE|GL', 'CR|DE|GL', 'CR|EH|EH', 'AF|DL|FL', 'DA|EB|FL', 'CR|CR|FL', 'CR|EU|FL', 'CB|EE|FL', 'AF|GL|GL', 'CD|DE|EH', 'AF|DL|EB', 'AM|CC|GL', 'CC|DL|FL', 'AF|AF|FL', 'DL|EB|FL', 'CR|EU|EU', 'CU|DE|EP'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 243,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05726551633864513, 
        'max_depth': 3,
        'colsample_bytree': 0.2001345404482842,
        'subsample': 0.507000741560853,
        'lambda': 5,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.842234321151803
    },
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BP_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CR_trans', 'CS_trans', 'CW_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EP_trans', 'FC_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL_trans', 'CR * EH_trans', 'EU * EU_trans', 'CR * GL_trans', 'EE * FL_trans', 'EH * GL_trans', 'DA * FL_trans', 'AF * FL_trans', 'EU * FL_trans', 'DL * FL_trans', 'CD * FL_trans', 'EU * FD_trans', 'BC * CC_trans', 'EB * GL_trans', 'DI * GL_trans', 'CC * EB_trans', 'CD * EH_trans', 'BC * DA * FL_trans', 'CR * CR * EH_trans', 'CR * EH * GL_trans', 'CR * CR * GL_trans', 'EE * EU * FL_trans', 'DY * EE * FL_trans', 'CR * DE * GL_trans', 'AF * DL * FL_trans', 'DA * EB * FL_trans', 'CR * EU * FL_trans', 'CB * EE * FL_trans', 'CD * DE * EH_trans', 'AM * CC * GL_trans', 'CC * DL * FL_trans', 'CR * EU * EU_trans', 'CU * DE * EP_trans']
}

july_2nd = {
     # # best from V31
     "interactions" : True,
     "custom_interactions_ind" : False,
     "custom_interactions": [],
     "neutralize" : False,
     "feature_transformation" : True,
     "GMM_features" : False,
     "quantiles" : 100,
     ## Neutralizer details
     "proportion" :1.0,
     ## Model details
     "xgboost_boosting_rounds" : 295,
     "xgb_params" :{
        'objective': 'binary:logistic',
         'eval_metric': 'logloss',
         'learning_rate': 0.10439256923913036, 
         'max_depth':7,
         'colsample_bytree': 0.12821313443060736,
         'subsample': 0.7059516968443532,
         'gamma': 2.5209507036596763,
         'lambda': 1,
         'alpha': 0.07847606603718943,
         'min_child_weight': 10,
         'seed': mainCFG.seed,
         'scale_pos_weight': 509 / 108
     },
     "final_features" : ['AB_trans', 'AF_trans', 'AH_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AY_trans', 'AZ', 'BC_trans', 'BD_trans', 'BN', 'BP_trans', 'BQ_trans', 'BR_trans', 'BZ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CL_trans', 'CR_trans', 'CS_trans', 'CW', 'DA_trans', 'DE_trans', 'DF_trans', 'DI_trans', 'DL_trans', 'DN', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL', 'EP_trans', 'EU_trans', 'FC_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'FS_trans', 'GB_trans', 'GE_trans', 'GF_trans', 'GH', 'GI_trans', 'GL', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans']
 }
test_non_neut_60_noAB_BQ = {
        # V56 best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['DA|DU', 'CR|DU', 'DU|EU', 'CR|GL', 'CC|DU', 'EU|EU', 'DU|EL', 'AF|GL', 'CD|GL', 'AF|DU', 'CD|FL', 'EE|FL', 'DI|EB', 'AF|DL', 'DU|DU', 'DU|EE', 'BC|CC', 'EB|GL', 'DU|EB', 'CC|CD', 'AM|DU', 'DE|DU', 'DA|FL', 'CR|DL', 'BC|FL', 'DU|EU|EU', 'DU|EL|EU', 'AM|DA|DU', 'CR|CR|DU', 'CR|EB|GL', 'BC|DA|DU', 'CR|EH|GL', 'DA|DU|EL', 'CD|EE|GL', 'CC|DA|DU', 'CD|DY|FL', 'DA|DU|DU', 'DA|DU|FL', 'CC|DH|DU', 'CR|CS|GL', 'DU|DY|EL', 'CD|GL|GL', 'AF|CD|GL', 'AF|DY|GL', 'AF|EL|GL', 'DA|DU|GH', 'AF|CR|DU', 'CD|EL|FL', 'AF|EU|EU', 'CC|DI|DU'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "removed" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 222,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06077969079296655, 
        'max_depth':3,
        'colsample_bytree': 0.2891529236551674,
        'subsample': 0.6075705292905222,
        'lambda': 6,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.762187007483279
    },
    
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BP_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'CW_trans', 'DA_trans', 'DE_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EP_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GI_trans', 'GL_trans', 'DA * DU_trans', 'DU * EU_trans', 'CR * GL_trans', 'CC * DU_trans', 'EU * EU_trans', 'DU * EL_trans', 'AF * GL_trans', 'CD * GL_trans', 'AF * DU_trans', 'CD * FL_trans', 'EE * FL_trans', 'DI * EB_trans', 'AF * DL_trans', 'DU * EE_trans', 'BC * CC_trans', 'EB * GL_trans', 'CC * CD_trans', 'AM * DU_trans', 'DE * DU_trans', 'DA * FL_trans', 'CR * DL_trans', 'BC * FL_trans', 'DU * EU * EU_trans', 'DU * EL * EU_trans', 'AM * DA * DU_trans', 'CR * CR * DU_trans', 'BC * DA * DU_trans', 'CR * EH * GL_trans', 'DA * DU * EL_trans', 'CD * EE * GL_trans', 'CC * DA * DU_trans', 'CD * DY * FL_trans', 'DA * DU * DU_trans', 'DA * DU * FL_trans', 'CR * CS * GL_trans', 'DU * DY * EL_trans', 'CD * GL * GL_trans', 'AF * CD * GL_trans', 'AF * DY * GL_trans', 'AF * EL * GL_trans', 'AF * CR * DU_trans', 'CD * EL * FL_trans', 'AF * EU * EU_trans', 'CC * DI * DU_trans']
}

test_non_neut_61_noAB_DU = {
        # V56 best trial 
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['CR|FL', 'CR|GL', 'BQ|CR', 'BQ|GL', 'BQ|BQ', 'BQ|DY', 'AF|GL', 'CD|FL', 'BQ|DL', 'EB|GL', 'DA|GL', 'BQ|FI', 'CD|CR', 'BQ|FL', 'AF|CR', 'EH|GL', 'EU|EU', 'CR|EH', 'CD|GL', 'BQ|EE', 'EB|GF', 'BC|CC', 'BQ|CD', 'CR|EU', 'DA|EH', 'BQ|CR|GL', 'BQ|CR|FL', 'CD|CR|FL', 'CR|CR|GL', 'CR|EH|GL', 'CR|FL|GH', 'BQ|DL|GL', 'CR|EL|FL', 'BQ|BQ|EB', 'DY|EB|GL', 'AF|CR|GL', 'BQ|GL|GL', 'CR|DH|GL', 'CR|DE|FL', 'BQ|BQ|DY', 'AF|FD|GL', 'BQ|CR|DL', 'CR|EU|GL', 'DH|EB|GF', 'BQ|CR|GF', 'BQ|BQ|CR', 'EL|EU|EU', 'BP|CR|GL', 'BQ|EE|GL', 'DA|EE|GL'],
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "removed" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 223,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06388794238752886, 
        'max_depth': 3,
        'colsample_bytree': 0.2990372663393242,
        'subsample': 0.7484349126499383,
        'lambda': 1,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.574552592871487
    },
    "final_features" : ['AF_trans', 'AM_trans', 'AR_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'BZ_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DE_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EL_trans', 'EP_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL_trans', 'CR * GL_trans', 'BQ * CR_trans', 'BQ * GL_trans', 'BQ * BQ_trans', 'BQ * DY_trans', 'AF * GL_trans', 'CD * FL_trans', 'BQ * DL_trans', 'EB * GL_trans', 'DA * GL_trans', 'BQ * FI_trans', 'CD * CR_trans', 'BQ * FL_trans', 'AF * CR_trans', 'EH * GL_trans', 'EU * EU_trans', 'CR * EH_trans', 'CD * GL_trans', 'EB * GF_trans', 'BC * CC_trans', 'BQ * CD_trans', 'BQ * CR * GL_trans', 'BQ * CR * FL_trans', 'CD * CR * FL_trans', 'CR * CR * GL_trans', 'CR * EH * GL_trans', 'BQ * DL * GL_trans', 'CR * EL * FL_trans', 'BQ * BQ * EB_trans', 'DY * EB * GL_trans', 'AF * CR * GL_trans', 'CR * DH * GL_trans', 'BQ * BQ * DY_trans', 'AF * FD * GL_trans', 'BQ * CR * DL_trans', 'CR * EU * GL_trans', 'DH * EB * GF_trans', 'BQ * CR * GF_trans', 'BQ * BQ * CR_trans', 'EL * EU * EU_trans', 'BP * CR * GL_trans', 'BQ * EE * GL_trans', 'DA * EE * GL_trans']
}

june_30th = {
    # V4 CV: .2304 LB: .19
    "interactions" : False,
    "custom_interactions_ind" : False,
    "neutralize" : False,
    "feature_transformation" :True,
    "GMM_features" : False,
    "removed" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 228,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.11463574295407804, 
        'max_depth':2,
        'colsample_bytree': 0.7149069394490468,
        'subsample': 0.8763911061620443,
        'gamma': 1.524807074915116,
        'lambda': 21,
        'alpha' : 0.00015193608956199733,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 509 / 108, # suggested 509 negative examples to 108 positive examples
    },
    "final_features" : ['AB_trans', 'AF_trans', 'AH_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AY_trans', 'AZ', 'BC_trans', 'BD_trans', 'BN', 'BP_trans', 'BQ_trans', 'BR_trans', 'BZ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CL_trans', 'CR_trans', 'CS_trans', 'CW', 'DA_trans', 'DE_trans', 'DF_trans', 'DI_trans', 'DL_trans', 'DN', 'DU_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL', 'EP_trans', 'EU_trans', 'FC_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'FS_trans', 'GB_trans', 'GE_trans', 'GF_trans', 'GH', 'GI_trans', 'GL', 'EJ']
}
test_neut_11 = {
    # # best from V11
    "interactions" : True,
    "custom_interactions_ind" : False,
    "neutralize" : True,
    "feature_transformation" :True,
    "GMM_features" : False,
    "removed" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 246,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.08606842471264504, 
        'max_depth':3,
        'colsample_bytree': 0.42473703165519455,
        'subsample': 0.3647821412616388,
        'lambda': 10,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.5155448465496173
    },
    "final_features" : ['AM_trans', 'AX_trans', 'AY_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CU', 'DA_trans', 'DH', 'DU_trans', 'DV_trans', 'EG_trans', 'EH_trans', 'EP_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FR_trans', 'DF + DU__trans', 'AB + FR__trans', 'BQ * DN__trans', 'BC + DU__trans', 'AB * EL__trans']
}

non_neut_v18_noBP_CR_path_2_rerun = {
        # V54  best trial 
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation" :True,
    "all_feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 1.0,
    ## Model details
    "xgboost_boosting_rounds" : 244,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06673015365513302, 
        'max_depth':3,
        'colsample_bytree': 0.583968876335355,
        'subsample': 0.6231566716867983,
        'lambda': 1,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.400880979519432
    },    
    "final_features" : ['AB_trans', 'AH_trans', 'AM_trans', 'AR_trans', 'AX_trans', 'AY_trans', 'BC_trans', 'BD_trans', 'BQ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CH_trans', 'CL_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EL_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'FS_trans']
}



# Model Graveyard Neutralized



july_8th = {
    # # V36 reliable, trial 815, CV: .21362 LB: .25
    "interactions" : True,
    "custom_interactions_ind" : False,
    "neutralize" : True,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.5,
    ## Model details
    "xgboost_boosting_rounds" : 130,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05429448182951299, 
        'max_depth':3,
        'colsample_bytree': 0.6954243280239198,
        'subsample': 0.7499408879456607,
        'lambda': 1,
        'gamma': 1.6978553102963179,
        'alpha': 0.00010432835552378522,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.844833690939653
    },
    "final_features" : ['AM_trans','AX_trans','AY_trans','BR_trans','CC_trans','CD_trans','DA_trans','DU_trans','DV_trans','EG_trans','EH_trans','EP_trans','EU_trans','FD_trans','FI_trans','FR_trans','DF + DU__trans','AB + FR__trans','BQ * DN__trans','BC + DU__trans','AB * EL__trans']
}



test_neut_15 = {
    # # best from V15
    "interactions" : True,
    "custom_interactions_ind" : False,
    "neutralize" : True,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.1,
    ## Model details
    "xgboost_boosting_rounds" : 195,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06906398981586323, 
        'max_depth':3,
        'colsample_bytree': 0.40176381765869523,
        'subsample': 0.32266202621087,
        'lambda': 5,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.196419454778595
    },
    "final_features" : ['AM_trans', 'AX_trans', 'AY_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CU', 'DA_trans', 'DH', 'DU_trans', 'DV_trans', 'EG_trans', 'EH_trans', 'EP_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FR_trans', 'DF + DU__trans', 'AB + FR__trans', 'BQ * DN__trans', 'BC + DU__trans', 'AB * EL__trans']
}


test_neut_16 = {
    # # best from V16
    "interactions" : True,
    "custom_interactions_ind" : False,
    "neutralize" : True,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.15,
    ## Model details
    "xgboost_boosting_rounds" : 166,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.0698814563438834, 
        'max_depth':3,
        'colsample_bytree': 0.42265629939756244,
        'subsample': 0.3525809633741791,
        'lambda': 3,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.642519761272037
    },
    "final_features" : ['AM_trans', 'AX_trans', 'AY_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CU', 'DA_trans', 'DH', 'DU_trans', 'DV_trans', 'EG_trans', 'EH_trans', 'EP_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FR_trans', 'DF + DU__trans', 'AB + FR__trans', 'BQ * DN__trans', 'BC + DU__trans', 'AB * EL__trans']
}


july_6th = {
    # # best from V31
    "interactions" : True,
    "custom_interactions_ind" : False,
    "custom_interactions": [],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" :1.0,
    ## Model details
    "xgboost_boosting_rounds" : 286,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07187324655388294, 
        'max_depth':4,
        'colsample_bytree': 0.2155938147770513,
        'subsample': 0.6896338344617292,
        'gamma': 1.9688015371449468,
        'lambda': 8,
        'alpha': 2.834608728568929e-05,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.909040013957557
    },
    "final_features" : ['AM_trans', 'AX_trans', 'AY_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'DA_trans', 'DU_trans', 'DV_trans', 'EG_trans', 'EH_trans', 'EP_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'FR_trans', 'DF + DU__trans', 'AB + FR__trans', 'BQ * DN__trans', 'BC + DU__trans', 'AB * EL__trans']
}

test_neut_21 = {
    # # best from V21
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DV_trans|DV_trans', 'DU_trans|DU_trans', 'AR_trans|AR_trans', 'AY_trans|AY_trans', 'GE_trans|GE_trans', 'AY_trans|DU_trans', 'BZ_trans|BZ_trans', 'DU_trans|EH_trans', 'DU_trans|DV_trans', 'DU_trans|FD_trans', 'DA_trans|DU_trans', 'AH_trans|AH_trans', 'AY_trans|BQ_trans', 'AR_trans|FR_trans', 'AR_trans|AY_trans', 'DU_trans|FR_trans', 'CF_trans|DV_trans', 'DU_trans|EL', 'DV_trans|FR_trans', 'DV_trans|GE_trans', 'AY_trans|EP_trans', 'EH_trans|EH_trans', 'EL|EL', 'AR_trans|EH_trans', 'BZ_trans|DV_trans', 'DU_trans|DV_trans|DV_trans', 'AY_trans|DU_trans|DU_trans', 'AY_trans|AY_trans|DU_trans', 'CF_trans|DV_trans|DV_trans', 'DU_trans|DU_trans|EL', 'AY_trans|AY_trans|CD_trans', 'DA_trans|DU_trans|DU_trans', 'DV_trans|DV_trans|GE_trans', 'AR_trans|AR_trans|EH_trans', 'DU_trans|DU_trans|DV_trans', 'AB_trans|DV_trans|DV_trans', 'DU_trans|EB_trans|EL', 'CC_trans|DV_trans|DV_trans', 'AF_trans|EP_trans|EU_trans', 'CD_trans|DU_trans|EH_trans', 'DA_trans|DV_trans|DV_trans', 'AR_trans|AR_trans|EB_trans', 'AY_trans|AY_trans|EU_trans', 'AZ|DV_trans|DV_trans', 'DV_trans|DV_trans|EB_trans', 'DV_trans|DV_trans|FL_trans', 'DU_trans|EB_trans|FD_trans', 'EP_trans|EP_trans|EU_trans', 'GE_trans|GE_trans|GE_trans', 'DV_trans|DV_trans|EU_trans'],
    "neutralize" : True,
    "feature_transformation" :True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 163,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06757242608789707 , 
        'max_depth': 3,
        'colsample_bytree': 0.2983250842524347,
        'subsample': 0.3641437407021774,
        'lambda':  1,
        'min_child_weight': 17,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.042969689056674
    },
    "final_features" : ['AM_trans', 'BP_trans', 'CC_trans', 'CD_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'EE_trans', 'EH_trans', 'EU_trans', 'FD_trans', 'FI_trans', 'GE_trans', 'GF_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DV * DV_trans', 'DU * DU_trans', 'AY * AY_trans', 'AY * DU_trans', 'BZ * BZ_trans', 'DU * EH_trans', 'DU * FD_trans', 'AY * BQ_trans', 'AY * EP_trans', 'BZ * DV_trans', 'DU * DU * DV_trans', 'AB * DV * DV_trans', 'AY * AY * EU_trans', 'DV * DV * EB_trans', 'DV * DV * FL_trans', 'DU * EB * FD_trans']
}

test_neut_22 = {
    # # best from V22
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DV_trans|DV_trans', 'AY_trans|AY_trans', 'DU_trans|EH_trans', 'DU_trans|DU_trans', 'DU_trans|FD_trans', 'AR_trans|DV_trans', 'DV_trans|EP_trans', 'EL_trans|EP_trans', 'EP_trans|GE_trans', 'EP_trans|EU_trans', 'DU_trans|DV_trans', 'FR_trans|FR_trans', 'AR_trans|AR_trans', 'EL_trans|GE_trans', 'AY_trans|DV_trans', 'EL_trans|GL_trans', 'BZ_trans|BZ_trans', 'CW_trans|DV_trans', 'CW_trans|EL_trans', 'EL_trans|EU_trans', 'DV_trans|EL_trans', 'AR_trans|FR_trans', 'DF_trans|FR_trans', 'EB_trans|FR_trans', 'DV_trans|EH_trans', 'AR_trans|DV_trans|DV_trans', 'DU_trans|DV_trans|DV_trans', 'CW_trans|EL_trans|EP_trans', 'DV_trans|DV_trans|EH_trans', 'DV_trans|DV_trans|DV_trans', 'EP_trans|GE_trans|GL_trans', 'AF_trans|DV_trans|DV_trans', 'DL_trans|DV_trans|DV_trans', 'EL_trans|EP_trans|GL_trans', 'DU_trans|DU_trans|DU_trans', 'AY_trans|AY_trans|DA_trans', 'BZ_trans|DV_trans|DV_trans', 'CL_trans|DV_trans|DV_trans', 'AR_trans|EP_trans|EU_trans', 'BN_trans|DV_trans|DV_trans', 'DE_trans|DV_trans|DV_trans', 'DV_trans|DV_trans|EP_trans', 'CW_trans|DV_trans|DV_trans', 'GL_trans|GL_trans|GL_trans', 'DU_trans|DU_trans|GL_trans', 'DU_trans|DU_trans|EP_trans', 'BC_trans|DV_trans|DV_trans', 'AR_trans|AR_trans|EP_trans', 'FL_trans|FR_trans|FR_trans', 'CC_trans|DV_trans|DV_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 131,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.0667318478701172 , 
        'max_depth': 2,
        'colsample_bytree': 0.38677107162318297 ,
        'subsample': 0.5112892195551355,
        'lambda': 1 ,
        'min_child_weight': 21,
        'seed': mainCFG.seed,
        'scale_pos_weight': 1.8110391703259745
    },
    "final_features" : ['AB_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'AZ_trans', 'BC_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BQ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CL_trans', 'DA_trans', 'DF_trans', 'DH_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'EB_trans', 'EE_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FD_trans', 'FE_trans', 'FI_trans', 'FL_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GI_trans', 'GL_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DV * DV_trans', 'AY * AY_trans', 'DU * DU_trans', 'DU * FD_trans', 'AR * DV_trans', 'DV * EP_trans', 'EP * GE_trans', 'EP * EU_trans', 'DU * DV_trans', 'FR * FR_trans', 'AY * DV_trans', 'EL * GL_trans', 'BZ * BZ_trans', 'CW * EL_trans', 'EL * EU_trans', 'DV * EL_trans', 'AR * FR_trans', 'DF * FR_trans', 'EB * FR_trans', 'DV * EH_trans', 'DU * DV * DV_trans', 'CW * EL * EP_trans', 'DV * DV * DV_trans', 'EP * GE * GL_trans', 'AF * DV * DV_trans', 'AY * AY * DA_trans', 'CL * DV * DV_trans', 'BN * DV * DV_trans', 'DE * DV * DV_trans', 'DV * DV * EP_trans', 'CW * DV * DV_trans', 'GL * GL * GL_trans', 'DU * DU * GL_trans', 'DU * DU * EP_trans', 'BC * DV * DV_trans', 'FL * FR * FR_trans']
}

test_neut_23 = {
    # # best from V23
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DV_trans|DV_trans', 'DU_trans|DU_trans', 'AY_trans|AY_trans', 'BZ_trans|BZ_trans', 'AY_trans|DV_trans', 'DU_trans|DV_trans', 'GE_trans|GE_trans', 'EL_trans|EP_trans', 'DU_trans|FD_trans', 'AY_trans|DU_trans', 'DV_trans|FL_trans', 'DU_trans|EH_trans', 'AH_trans|AH_trans', 'EP_trans|EP_trans', 'EL_trans|GE_trans', 'EU_trans|GE_trans', 'AB_trans|DU_trans', 'DU_trans|EP_trans', 'CR_trans|DU_trans', 'AR_trans|AR_trans', 'BQ_trans|DV_trans', 'DV_trans|GH_trans', 'BZ_trans|EL_trans', 'CR_trans|DV_trans', 'AY_trans|EP_trans', 'DU_trans|DV_trans|DV_trans', 'AY_trans|DV_trans|DV_trans', 'GE_trans|GE_trans|GE_trans', 'DV_trans|DV_trans|FL_trans', 'DV_trans|DV_trans|GL_trans', 'BZ_trans|BZ_trans|EL_trans', 'DV_trans|DV_trans|DV_trans', 'BQ_trans|DV_trans|DV_trans', 'DV_trans|DV_trans|GF_trans', 'CR_trans|DV_trans|DV_trans', 'BZ_trans|DV_trans|DV_trans', 'CC_trans|DV_trans|DV_trans', 'DV_trans|DV_trans|GH_trans', 'CR_trans|DU_trans|DU_trans', 'DV_trans|DV_trans|EG_trans', 'DA_trans|DV_trans|DV_trans', 'AY_trans|DU_trans|DV_trans', 'AY_trans|AY_trans|DV_trans', 'EB_trans|EL_trans|EP_trans', 'AR_trans|DV_trans|DV_trans', 'DV_trans|DV_trans|EP_trans', 'DU_trans|EH_trans|EP_trans', 'DU_trans|EL_trans|FD_trans', 'AH_trans|AH_trans|BQ_trans', 'EL_trans|GE_trans|GE_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .1,
    ## Model details
    "xgboost_boosting_rounds" :246 ,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.02404344122478351 , 
        'max_depth':3 ,
        'colsample_bytree': 0.2500125101281379 ,
        'subsample': 0.322344770183771,
        'lambda':  3,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.0260687753072593
    },
    "final_features" : ['BP_trans', 'CD_trans', 'CR_trans', 'DL_trans', 'DN_trans', 'EE_trans', 'EH_trans', 'FI_trans', 'GF_trans', 'GL_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DV * DV_trans', 'DU * DU_trans', 'AY * AY_trans', 'BZ * BZ_trans', 'DU * DV_trans', 'AY * DU_trans', 'DV * FL_trans', 'AB * DU_trans', 'BZ * EL_trans', 'DV * DV * FL_trans', 'BZ * BZ * EL_trans', 'DV * DV * DV_trans', 'BQ * DV * DV_trans', 'DV * DV * GH_trans', 'CR * DU * DU_trans', 'DV * DV * EG_trans', 'EL * GE * GE_trans']
}

test_neut_25 = {
    # # best from V25
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DU_trans|DU_trans', 'BZ_trans|BZ_trans', 'AR_trans|AR_trans', 'AY_trans|AY_trans', 'DU_trans|FD_trans', 'AY_trans|GE_trans', 'GE_trans|GE_trans', 'AY_trans|DU_trans', 'EL_trans|GE_trans', 'AY_trans|CL_trans', 'AY_trans|EP_trans', 'DF_trans|DF_trans', 'DE_trans|DU_trans', 'DU_trans|EH_trans', 'FD_trans|FD_trans', 'EP_trans|GE_trans', 'EP_trans|EP_trans', 'FD_trans|FL_trans', 'AR_trans|FR_trans', 'AB_trans|DU_trans', 'EH_trans|FL_trans', 'BZ_trans|FL_trans', 'AY_trans|EL_trans', 'AF_trans|AR_trans', 'AH_trans|AH_trans', 'AY_trans|DU_trans|DU_trans', 'AF_trans|AR_trans|AR_trans', 'AY_trans|AY_trans|GE_trans', 'AY_trans|AY_trans|DU_trans', 'BQ_trans|GE_trans|GE_trans', 'DE_trans|DU_trans|DU_trans', 'AY_trans|CL_trans|CL_trans', 'AY_trans|EL_trans|GE_trans', 'EL_trans|GE_trans|GL_trans', 'AR_trans|AR_trans|CL_trans', 'EU_trans|GE_trans|GE_trans', 'AR_trans|BQ_trans|FD_trans', 'AY_trans|GE_trans|GE_trans', 'BZ_trans|BZ_trans|EU_trans', 'BC_trans|BZ_trans|BZ_trans', 'CC_trans|DU_trans|DU_trans', 'AB_trans|DU_trans|DU_trans', 'DA_trans|GE_trans|GE_trans', 'FL_trans|FR_trans|FR_trans', 'BZ_trans|BZ_trans|GH_trans', 'AY_trans|AY_trans|EP_trans', 'AY_trans|DU_trans|GE_trans', 'AR_trans|AR_trans|BQ_trans', 'EB_trans|EL_trans|GE_trans', 'AY_trans|CL_trans|FL_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 210,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04406062218116645 , 
        'max_depth': 3,
        'colsample_bytree': 0.2500662141756624 ,
        'subsample': 0.3077730474061595,
        'lambda': 3 ,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.3513823137343546
    },
    "final_features" : ['AB_trans', 'AM_trans', 'BP_trans', 'BQ_trans', 'CC_trans', 'CD_trans', 'CR_trans', 'CS_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'EE_trans', 'EH_trans', 'FI_trans', 'FL_trans', 'GF_trans', 'GH_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DU * DU_trans', 'DU * FD_trans', 'DE * DU_trans', 'DU * EH_trans', 'FD * FD_trans', 'AB * DU_trans', 'BZ * FL_trans', 'AY * AY * GE_trans', 'AY * GE * GE_trans', 'BZ * BZ * EU_trans', 'CC * DU * DU_trans', 'AB * DU * DU_trans', 'AY * DU * GE_trans', 'AY * CL * FL_trans']
}

test_neut_26 = {
    # # best from V26
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DU_trans|DU_trans', 'AY_trans|AY_trans', 'FR_trans|FR_trans', 'EL_trans|GE_trans', 'AR_trans|FR_trans', 'DU_trans|FD_trans', 'AR_trans|AR_trans', 'BZ_trans|BZ_trans', 'EL_trans|GL_trans', 'EP_trans|FR_trans', 'AY_trans|CL_trans', 'GE_trans|GE_trans', 'AY_trans|DU_trans', 'AY_trans|GE_trans', 'AY_trans|EP_trans', 'AY_trans|EU_trans', 'AY_trans|EL_trans', 'GE_trans|GL_trans', 'EL_trans|EU_trans', 'AY_trans|BQ_trans', 'DU_trans|FR_trans', 'EL_trans|EP_trans', 'AH_trans|AH_trans', 'AM_trans|AY_trans', 'BN_trans|FR_trans', 'EL_trans|GE_trans|GL_trans', 'EP_trans|FR_trans|FR_trans', 'AY_trans|EL_trans|GE_trans', 'AY_trans|AY_trans|EU_trans', 'AF_trans|AR_trans|AR_trans', 'CW_trans|EL_trans|GE_trans', 'AY_trans|AY_trans|DU_trans', 'AY_trans|AY_trans|AY_trans', 'AY_trans|EL_trans|GL_trans', 'FL_trans|FR_trans|FR_trans', 'AY_trans|AY_trans|CW_trans', 'GE_trans|GE_trans|GL_trans', 'BZ_trans|BZ_trans|EU_trans', 'EH_trans|EP_trans|FL_trans', 'FD_trans|GE_trans|GE_trans', 'DU_trans|DU_trans|FR_trans', 'EB_trans|EP_trans|EP_trans', 'DU_trans|DU_trans|DU_trans', 'BN_trans|BN_trans|FR_trans', 'AY_trans|BN_trans|EL_trans', 'AY_trans|AY_trans|EL_trans', 'AY_trans|DU_trans|DU_trans', 'GL_trans|GL_trans|GL_trans', 'AH_trans|AH_trans|GE_trans', 'DU_trans|DU_trans|EU_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 108,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06966188495812932 , 
        'max_depth': 3,
        'colsample_bytree': 0.41934747508362635 ,
        'subsample': 0.4667377429937912,
        'lambda':  2,
        'min_child_weight': 19,
        'seed': mainCFG.seed,
        'scale_pos_weight': 1.6229338129388922
    },
    "final_features" : ['AB_trans', 'AM_trans', 'AY_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'CD_trans', 'EE_trans', 'EH_trans', 'EL_trans', 'FD_trans', 'FI_trans', 'FL_trans', 'GH_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DU * DU_trans', 'FR * FR_trans', 'DU * FD_trans', 'BZ * BZ_trans', 'AY * CL_trans', 'AY * DU_trans', 'AY * EP_trans', 'GE * GL_trans', 'AY * BQ_trans', 'AY * AY * DU_trans', 'AY * AY * AY_trans', 'FL * FR * FR_trans', 'EH * EP * FL_trans', 'AY * AY * EL_trans', 'DU * DU * EU_trans']
}

test_neut_27 = {
    # # best from V27
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DU_trans|EH_trans', 'DU_trans|FD_trans', 'FD_trans|FL_trans', 'AH_trans|GE_trans', 'AR_trans|AY_trans', 'AY_trans|GE_trans', 'DF_trans|FR_trans', 'AB_trans|DU_trans', 'AH_trans|BQ_trans', 'AR_trans|FR_trans', 'AY_trans|FR_trans', 'CC_trans|DU_trans', 'AR_trans|BZ_trans', 'EL_trans|EU_trans', 'EL_trans|GE_trans', 'AR_trans|DI_trans', 'AY_trans|EH_trans', 'AH_trans|AR_trans', 'EL_trans|GL_trans', 'DF_trans|GE_trans', 'EU_trans|FR_trans', 'AH_trans|DU_trans', 'AH_trans|BZ_trans', 'AY_trans|DU_trans', 'AH_trans|FD_trans', 'EB_trans|EL_trans', 'AF_trans|BZ_trans', 'AB_trans|FL_trans', 'AR_trans|BN_trans', 'AY_trans|BZ_trans', 'AR_trans|FD_trans', 'DU_trans|EE_trans', 'BQ_trans|GE_trans', 'BQ_trans|FI_trans', 'DF_trans|EH_trans', 'AB_trans|FR_trans', 'AB_trans|GE_trans', 'FR_trans|GE_trans', 'AH_trans|EH_trans', 'AY_trans|CL_trans', 'BZ_trans|EB_trans', 'DU_trans|FL_trans', 'AR_trans|AX_trans', 'AB_trans|AH_trans', 'EU_trans|GE_trans', 'BZ_trans|GE_trans', 'BQ_trans|FR_trans', 'AY_trans|EB_trans', 'AR_trans|EU_trans', 'BZ_trans|FD_trans', 'AY_trans|BQ_trans', 'AY_trans|FL_trans', 'AB_trans|FD_trans', 'EH_trans|FL_trans', 'AR_trans|BQ_trans', 'DE_trans|DU_trans', 'AY_trans|DF_trans', 'GE_trans|GL_trans', 'DU_trans|FR_trans', 'CR_trans|DU_trans', 'EB_trans|GE_trans', 'BN_trans|BZ_trans', 'DF_trans|EL_trans', 'BZ_trans|DU_trans', 'BZ_trans|FR_trans', 'DF_trans|FD_trans', 'AH_trans|FR_trans', 'BN_trans|EL_trans', 'AR_trans|BP_trans', 'AM_trans|GE_trans', 'DH_trans|GE_trans', 'AY_trans|GI_trans', 'BZ_trans|FL_trans', 'BQ_trans|CR_trans', 'AB_trans|AR_trans', 'AY_trans|CF_trans', 'BZ_trans|EU_trans', 'AY_trans|BN_trans', 'DA_trans|DU_trans', 'DU_trans|GL_trans', 'DU_trans|EL_trans', 'AY_trans|CD_trans', 'FL_trans|FR_trans', 'AF_trans|AR_trans', 'AY_trans|BP_trans', 'AR_trans|CD_trans', 'DU_trans|FI_trans', 'AY_trans|FD_trans', 'BP_trans|FR_trans', 'AM_trans|AY_trans', 'BN_trans|FD_trans', 'AY_trans|FS_trans', 'AY_trans|CW_trans', 'CD_trans|FR_trans', 'BZ_trans|CW_trans', 'AR_trans|FL_trans', 'AR_trans|BC_trans', 'AR_trans|DU_trans', 'DU_trans|EB_trans', 'AY_trans|GH_trans', 'AX_trans|DU_trans', 'FD_trans|FI_trans', 'AF_trans|FR_trans', 'CD_trans|DU_trans', 'AH_trans|FL_trans', 'EB_trans|FR_trans', 'AY_trans|DY_trans', 'BN_trans|GE_trans', 'BZ_trans|CL_trans', 'CW_trans|FR_trans', 'AY_trans|EU_trans', 'DE_trans|FL_trans', 'DU_trans|EG_trans', 'BQ_trans|DU_trans', 'BP_trans|DF_trans', 'AR_trans|FI_trans', 'AR_trans|DA_trans', 'CC_trans|EH_trans', 'BN_trans|BQ_trans', 'AY_trans|CC_trans', 'BQ_trans|EL_trans', 'DU_trans|GI_trans', 'BZ_trans|CF_trans', 'BQ_trans|BZ_trans', 'AH_trans|AY_trans', 'AR_trans|EH_trans', 'CW_trans|GE_trans', 'DU_trans|GH_trans', 'CD_trans|FL_trans', 'AY_trans|FI_trans', 'EH_trans|FR_trans', 'CL_trans|FD_trans', 'CC_trans|GE_trans', 'BQ_trans|CC_trans', 'BZ_trans|CC_trans', 'AR_trans|FC_trans', 'DF_trans|DU_trans', 'AR_trans|EB_trans', 'AY_trans|CS_trans', 'AR_trans|DH_trans', 'BC_trans|BZ_trans', 'AM_trans|CD_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 206,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.03860332402154219 , 
        'max_depth': 3,
        'colsample_bytree': 0.3430662199434824 ,
        'subsample': 0.30099431630037693,
        'lambda': 4 ,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.8849793573032994
    },
    "final_features" : ['AH_trans', 'BP_trans', 'DN_trans', 'EE_trans', 'FI_trans', 'FL_trans', 'GF_trans', 'GH_trans', 'GL_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'DU * FD_trans', 'AB * DU_trans', 'AH * BQ_trans', 'BQ * GE_trans', 'BQ * FI_trans', 'DU * FL_trans', 'AB * AH_trans', 'BZ * FD_trans', 'AY * FL_trans', 'DE * DU_trans', 'BZ * FL_trans', 'AR * CD_trans', 'AM * AY_trans', 'AR * DU_trans', 'AX * DU_trans', 'AH * FL_trans', 'BQ * DU_trans', 'BN * BQ_trans', 'BQ * EL_trans', 'BQ * BZ_trans', 'DU * GH_trans', 'CC * GE_trans', 'DF * DU_trans', 'AR * EB_trans', 'AY * CS_trans']
}

test_neut_28 = {
    # # best from V28
    "interactions" : True,
    "custom_interactions_ind" : True,
    "custom_interactions": ['BZ_trans|EL_trans|GL_trans', 'AR_trans|EU_trans|FR_trans', 'EL_trans|GL_trans', 'EU_trans|FR_trans', 'FD_trans|FL_trans', 'GE_trans|GL_trans', 'AR_trans|FR_trans', 'EL_trans|EU_trans', 'DU_trans|EH_trans', 'AH_trans|DU_trans', 'EL_trans|GE_trans', 'FR_trans|GE_trans', 'AR_trans|BR_trans', 'DU_trans|FD_trans', 'FL_trans|GL_trans', 'AY_trans|DU_trans', 'AY_trans|GE_trans', 'FL_trans|FR_trans', 'AB_trans|DU_trans', 'AH_trans|BQ_trans', 'AR_trans|BN_trans', 'CC_trans|DU_trans', 'DF_trans|FR_trans', 'AR_trans|BZ_trans', 'FR_trans|GL_trans', 'EH_trans|FL_trans', 'AY_trans|EB_trans', 'AY_trans|CR_trans', 'AH_trans|BN_trans', 'AY_trans|BQ_trans', 'AY_trans|FL_trans', 'AY_trans|FR_trans', 'BC_trans|FR_trans', 'BZ_trans|GL_trans', 'AH_trans|EL_trans', 'DU_trans|FR_trans', 'DF_trans|EH_trans', 'BZ_trans|EB_trans', 'DU_trans|EL_trans', 'EL_trans|FR_trans', 'BR_trans|GE_trans', 'AY_trans|CL_trans', 'AY_trans|FS_trans', 'CF_trans|FR_trans', 'AR_trans|EU_trans', 'AR_trans|EH_trans', 'AH_trans|FR_trans', 'AR_trans|FD_trans', 'AH_trans|EH_trans', 'BN_trans|BZ_trans', 'AB_trans|FR_trans', 'BN_trans|FR_trans', 'AY_trans|BZ_trans', 'EU_trans|FL_trans', 'FL_trans|GE_trans', 'EU_trans|GE_trans', 'AY_trans|CW_trans', 'AR_trans|BC_trans', 'AH_trans|EU_trans', 'DU_trans|EE_trans', 'BQ_trans|FR_trans', 'BZ_trans|FD_trans', 'AH_trans|FD_trans', 'DU_trans|FL_trans', 'CR_trans|FR_trans', 'BQ_trans|DU_trans', 'AR_trans|AY_trans', 'AY_trans|DF_trans', 'AY_trans|EH_trans', 'AF_trans|FR_trans', 'EU_trans|GL_trans', 'EB_trans|EL_trans', 'EE_trans|FR_trans', 'AR_trans|DA_trans', 'EB_trans|FR_trans', 'CW_trans|GE_trans', 'CD_trans|FR_trans', 'AY_trans|EL_trans', 'AY_trans|EU_trans', 'AH_trans|AY_trans', 'AY_trans|BN_trans', 'AB_trans|AR_trans', 'BC_trans|GE_trans', 'DU_trans|FI_trans', 'AY_trans|BP_trans', 'BR_trans|DU_trans', 'BP_trans|DF_trans', 'BZ_trans|GE_trans', 'AY_trans|BC_trans', 'AY_trans|CD_trans', 'AY_trans|FD_trans', 'DU_trans|GL_trans', 'BZ_trans|EU_trans', 'AB_trans|FD_trans', 'BP_trans|FR_trans', 'AM_trans|AY_trans', 'AB_trans|FL_trans', 'CW_trans|FR_trans', 'DF_trans|DU_trans', 'AY_trans|GL_trans', 'AR_trans|DU_trans', 'BZ_trans|CF_trans', 'AR_trans|BQ_trans', 'AR_trans|FI_trans', 'AR_trans|CD_trans', 'AM_trans|CD_trans', 'AY_trans|CS_trans', 'BZ_trans|CR_trans', 'DU_trans|GE_trans', 'AY_trans|GH_trans', 'AY_trans|EE_trans', 'CL_trans|GE_trans', 'BQ_trans|GE_trans', 'BZ_trans|DA_trans', 'AY_trans|FC_trans', 'AY_trans|DE_trans', 'AF_trans|AY_trans', 'AX_trans|DU_trans', 'BQ_trans|BZ_trans', 'BZ_trans|EH_trans', 'CR_trans|DU_trans', 'BN_trans|DU_trans', 'AM_trans|BZ_trans', 'BC_trans|DU_trans', 'DU_trans|EU_trans', 'EH_trans|GL_trans', 'CC_trans|FR_trans', 'DH_trans|GE_trans', 'AM_trans|FR_trans', 'AF_trans|BZ_trans', 'AH_trans|CR_trans', 'BR_trans|EU_trans', 'AZ_trans|FR_trans', 'BZ_trans|FR_trans', 'AH_trans|FI_trans', 'BQ_trans|CR_trans', 'BR_trans|EB_trans', 'AR_trans|BP_trans', 'AH_trans|EB_trans', 'CC_trans|GE_trans', 'AY_trans|CC_trans', 'DE_trans|DU_trans', 'EE_trans|GE_trans', 'FE_trans|FR_trans', 'AB_trans|BR_trans', 'BZ_trans|CD_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 140,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04968227591039538 , 
        'max_depth': 3,
        'colsample_bytree': 0.5007884604867008 ,
        'subsample': 0.4937678073296033,
        'lambda':  6,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.7371581592963734
    },
    "final_features" : ['AB_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DI_trans', 'DN_trans', 'EG_trans', 'FD_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GH_trans', 'AB * GL__trans', 'DF + DU__trans', 'BQ + FE__trans', 'AB + FR__trans', 'AB + DL__trans', 'AB + BQ__trans', 'CR * GL__trans', 'BQ * DN__trans', 'BC + DU__trans', 'BQ + EB__trans', 'AB * EL__trans', 'CC + CR__trans', 'BZ * EL * GL_trans', 'AR * EU * FR_trans', 'AR * FR_trans', 'DU * EH_trans', 'DU * FD_trans', 'AB * DU_trans', 'AH * BQ_trans', 'AY * BQ_trans', 'BC * FR_trans', 'DU * EL_trans', 'EL * FR_trans', 'FL * GE_trans', 'AY * CW_trans', 'AR * BC_trans', 'DU * FL_trans', 'AY * BN_trans', 'AB * AR_trans', 'AY * BP_trans', 'BP * DF_trans', 'BZ * GE_trans', 'AB * FD_trans', 'AR * DU_trans', 'AR * CD_trans', 'BQ * GE_trans', 'AY * FC_trans', 'CR * DU_trans', 'EH * GL_trans', 'BR * EU_trans', 'BQ * CR_trans', 'BR * EB_trans', 'AH * EB_trans', 'CC * GE_trans', 'AY * CC_trans', 'DE * DU_trans', 'EE * GE_trans']
}

test_neut_31 = {
    # # best from V31
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['AY_trans|EL_trans|GE_trans', 'CW_trans|EL_trans|GE_trans', 'EL_trans|EP_trans|GE_trans', 'AY_trans|DU_trans|EP_trans', 'EL_trans|EP_trans|FS_trans', 'AY_trans|EP_trans|GE_trans', 'BZ_trans|EL_trans|EP_trans', 'AB_trans|AY_trans|DU_trans', 'DU_trans|EL_trans|GE_trans', 'BC_trans|DU_trans|EH_trans', 'AY_trans|EB_trans|EP_trans', 'EB_trans|EL_trans|GE_trans', 'AY_trans|DU_trans|FD_trans', 'EL_trans|EP_trans', 'EL_trans|GE_trans', 'DU_trans|EP_trans', 'DU_trans|EH_trans', 'AY_trans|EP_trans', 'AR_trans|BZ_trans', 'BZ_trans|DU_trans', 'EP_trans|GE_trans', 'AY_trans|EL_trans', 'DU_trans|FD_trans', 'AB_trans|DU_trans', 'AY_trans|CL_trans', 'AY_trans|DU_trans', 'AH_trans|BN_trans', 'AR_trans|DU_trans', 'AR_trans|AY_trans', 'AR_trans|EP_trans', 'AH_trans|EP_trans', 'AY_trans|GE_trans', 'EL_trans|EU_trans', 'AH_trans|EU_trans', 'AY_trans|BQ_trans', 'AY_trans|EU_trans', 'DU_trans|EL_trans', 'AB_trans|AH_trans', 'DA_trans|DU_trans', 'DE_trans|DU_trans', 'BC_trans|DU_trans', 'AH_trans|AY_trans', 'EP_trans|EU_trans', 'CW_trans|GE_trans', 'BQ_trans|EU_trans', 'AF_trans|AY_trans', 'BN_trans|BZ_trans', 'EU_trans|GE_trans', 'AM_trans|GE_trans', 'DN_trans|DU_trans', 'CW_trans|EL_trans', 'AH_trans|FD_trans', 'EB_trans|EL_trans', 'AR_trans|DI_trans', 'AF_trans|BZ_trans', 'AY_trans|CC_trans', 'AF_trans|AH_trans', 'BZ_trans|GE_trans', 'CW_trans|FS_trans', 'AH_trans|BQ_trans', 'BQ_trans|DU_trans', 'BZ_trans|EB_trans', 'AY_trans|FL_trans', 'BQ_trans|DY_trans', 'CD_trans|DU_trans', 'EP_trans|FS_trans', 'AH_trans|DU_trans', 'DU_trans|EU_trans', 'DU_trans|FS_trans', 'AH_trans|GE_trans', 'CC_trans|DU_trans', 'AX_trans|DU_trans', 'AR_trans|FR_trans', 'AY_trans|EG_trans', 'AY_trans|EH_trans', 'AR_trans|FL_trans', 'BZ_trans|EP_trans', 'DU_trans|FR_trans', 'AR_trans|CD_trans', 'BQ_trans|BZ_trans', 'EB_trans|GE_trans', 'CL_trans|EP_trans', 'BZ_trans|EL_trans', 'DU_trans|EG_trans', 'AR_trans|FD_trans', 'AR_trans|CR_trans', 'AR_trans|FS_trans', 'CD_trans|CL_trans', 'DU_trans|FL_trans', 'BZ_trans|FL_trans', 'DU_trans|FI_trans', 'DU_trans|EE_trans', 'BZ_trans|GH_trans', 'AR_trans|GE_trans', 'FL_trans|GE_trans', 'EH_trans|FL_trans', 'AB_trans|EH_trans', 'BZ_trans|CD_trans', 'AF_trans|CL_trans', 'AR_trans|BQ_trans', 'BZ_trans|CR_trans', 'CR_trans|GE_trans', 'AH_trans|BZ_trans', 'BZ_trans|FS_trans', 'AY_trans|GH_trans', 'CR_trans|DU_trans', 'AY_trans|FS_trans', 'AY_trans|EB_trans', 'CR_trans|FL_trans', 'AR_trans|EH_trans', 'BQ_trans|EL_trans', 'DF_trans|DU_trans', 'BQ_trans|GE_trans', 'DU_trans|GH_trans', 'AY_trans|BC_trans', 'DF_trans|GE_trans', 'AB_trans|AY_trans', 'AH_trans|EH_trans', 'AR_trans|BC_trans', 'AB_trans|EP_trans', 'AY_trans|BN_trans', 'DU_trans|GE_trans', 'AB_trans|EE_trans', 'AH_trans|FI_trans', 'AR_trans|CL_trans', 'AY_trans|FD_trans', 'AH_trans|FL_trans', 'BN_trans|EP_trans', 'AH_trans|CD_trans', 'BQ_trans|EP_trans', 'AR_trans|BP_trans', 'EE_trans|EP_trans', 'DL_trans|GE_trans', 'BZ_trans|EH_trans', 'AH_trans|AR_trans', 'BC_trans|BZ_trans', 'CW_trans|EP_trans', 'AB_trans|FL_trans', 'AH_trans|DA_trans', 'AH_trans|CW_trans', 'AB_trans|AF_trans', 'DH_trans|GE_trans', 'BZ_trans|GF_trans', 'AF_trans|DU_trans', 'AR_trans|DA_trans', 'AY_trans|DY_trans', 'AY_trans|FR_trans', 'FD_trans|FL_trans', 'DA_trans|EP_trans', 'BN_trans|FL_trans', 'CC_trans|DE_trans', 'AB_trans|FD_trans', 'AM_trans|AY_trans', 'AR_trans|EU_trans', 'BZ_trans|CW_trans', 'AY_trans|CF_trans', 'AH_trans|BC_trans', 'EP_trans|FR_trans', 'EL_trans|FL_trans', 'AR_trans|EG_trans', 'CD_trans|EP_trans', 'DE_trans|EP_trans', 'BQ_trans|DN_trans', 'AY_trans|CD_trans', 'BC_trans|EH_trans', 'BQ_trans|CC_trans', 'AB_trans|EL_trans', 'DA_trans|FL_trans', 'AF_trans|AR_trans', 'AY_trans|DF_trans', 'AB_trans|GE_trans', 'AY_trans|CW_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .1,
    ## Model details
    "xgboost_boosting_rounds" : 191,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05506720152999062 , 
        'max_depth': 3,
        'colsample_bytree': 0.10603410729840675 ,
        'subsample': 0.5182327340273497,
        'lambda':  8,
        'min_child_weight': 13,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.981475091036889
    },

    "final_features" : ['AB_trans', 'AH_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'AZ_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BR_trans', 'BZ_trans', 'CB_trans', 'CD_trans', 'CF_trans', 'CL_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'CW_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'EU_trans', 'FC_trans', 'FI_trans', 'FL_trans', 'GB_trans', 'GH_trans', 'GI_trans', 'GL_trans', 'CW * EL * GE_trans', 'AY * DU * EP_trans', 'AY * EP * GE_trans', 'BZ * EL * EP_trans', 'AB * AY * DU_trans', 'AY * DU * FD_trans', 'EL * EP_trans', 'AR * BZ_trans', 'BZ * DU_trans', 'AY * EL_trans', 'DU * FD_trans', 'AB * DU_trans', 'AY * CL_trans', 'AY * DU_trans', 'AH * BN_trans', 'AR * AY_trans', 'AH * EP_trans', 'EL * EU_trans', 'AH * EU_trans', 'AY * BQ_trans', 'AB * AH_trans', 'DE * DU_trans', 'BC * DU_trans', 'AH * AY_trans', 'EP * EU_trans', 'AF * AY_trans', 'BN * BZ_trans', 'EU * GE_trans', 'AM * GE_trans', 'DN * DU_trans', 'EB * EL_trans', 'AR * DI_trans', 'AF * BZ_trans', 'AY * CC_trans', 'AF * AH_trans', 'BZ * GE_trans', 'AH * BQ_trans', 'BQ * DU_trans', 'BZ * EB_trans', 'BQ * DY_trans', 'CD * DU_trans', 'EP * FS_trans', 'DU * EU_trans', 'AH * GE_trans', 'CC * DU_trans', 'AX * DU_trans', 'AY * EG_trans', 'AR * FL_trans', 'DU * FR_trans', 'AR * CD_trans', 'BQ * BZ_trans', 'EB * GE_trans', 'CL * EP_trans', 'BZ * EL_trans', 'DU * EG_trans', 'AR * FD_trans', 'AR * CR_trans', 'AR * FS_trans', 'CD * CL_trans', 'DU * FL_trans', 'BZ * FL_trans', 'DU * EE_trans', 'BZ * GH_trans', 'AR * GE_trans', 'FL * GE_trans', 'EH * FL_trans', 'AB * EH_trans', 'BZ * CR_trans', 'CR * GE_trans', 'AH * BZ_trans', 'AY * GH_trans', 'CR * DU_trans', 'AY * EB_trans', 'CR * FL_trans', 'BQ * EL_trans', 'DF * DU_trans', 'BQ * GE_trans', 'AY * BC_trans', 'DF * GE_trans', 'AB * AY_trans', 'AH * EH_trans', 'AR * BC_trans', 'AY * BN_trans', 'DU * GE_trans', 'AB * EE_trans', 'AH * FI_trans', 'AR * CL_trans', 'BN * EP_trans', 'AH * CD_trans', 'AR * BP_trans', 'EE * EP_trans', 'DL * GE_trans', 'BC * BZ_trans', 'CW * EP_trans', 'AB * FL_trans', 'AH * CW_trans', 'AB * AF_trans', 'DH * GE_trans', 'BZ * GF_trans', 'AY * DY_trans', 'AY * FR_trans', 'FD * FL_trans', 'DA * EP_trans', 'BN * FL_trans', 'CC * DE_trans', 'AB * FD_trans', 'AM * AY_trans', 'AR * EU_trans', 'AH * BC_trans', 'EP * FR_trans', 'AR * EG_trans', 'CD * EP_trans', 'DE * EP_trans', 'BC * EH_trans', 'BQ * CC_trans', 'AB * EL_trans', 'DA * FL_trans', 'AF * AR_trans', 'AY * DF_trans', 'AB * GE_trans']
}


test_neut_33 = {
    # # best from V33
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['DU_trans|EL_trans|FD_trans', 'DU_trans|EB_trans|FD_trans', 'AY_trans|DV_trans', 'DU_trans|FD_trans', 'DU_trans|DV_trans', 'EL_trans|EP_trans', 'AY_trans|DU_trans', 'DU_trans|EH_trans', 'AR_trans|FR_trans', 'CD_trans|DV_trans', 'CR_trans|DU_trans', 'AY_trans|FL_trans', 'DU_trans|EP_trans', 'AM_trans|DV_trans', 'AY_trans|EU_trans', 'BN_trans|DV_trans', 'DV_trans|EP_trans', 'BQ_trans|DV_trans', 'EL_trans|EU_trans', 'CF_trans|DV_trans', 'AZ_trans|DV_trans', 'AB_trans|DU_trans', 'GE_trans|GL_trans', 'EP_trans|GE_trans', 'EL_trans|GE_trans', 'CS_trans|DV_trans', 'AY_trans|CL_trans', 'AR_trans|AY_trans', 'AY_trans|GE_trans', 'DV_trans|FR_trans', 'DV_trans|FL_trans', 'CW_trans|DV_trans', 'AY_trans|EH_trans', 'DU_trans|EL_trans', 'AY_trans|EB_trans', 'DF_trans|DU_trans', 'FR_trans|GE_trans', 'AR_trans|DV_trans', 'DV_trans|FD_trans', 'CL_trans|DV_trans', 'DF_trans|FD_trans', 'AY_trans|CD_trans', 'DH_trans|DV_trans', 'BZ_trans|DV_trans', 'BN_trans|BZ_trans', 'DV_trans|GF_trans', 'BZ_trans|GE_trans', 'AH_trans|AY_trans', 'DV_trans|DY_trans', 'EP_trans|EU_trans', 'CC_trans|DV_trans', 'DL_trans|DV_trans', 'DU_trans|FI_trans', 'AY_trans|GH_trans', 'FD_trans|FL_trans', 'BQ_trans|GE_trans', 'DU_trans|GL_trans', 'DE_trans|DU_trans', 'DV_trans|EU_trans', 'EB_trans|EP_trans', 'BN_trans|EP_trans', 'BC_trans|DV_trans', 'AY_trans|CC_trans', 'AH_trans|DU_trans', 'CR_trans|DV_trans', 'DF_trans|FR_trans', 'DU_trans|FL_trans', 'DV_trans|FC_trans', 'DV_trans|GH_trans', 'DV_trans|GE_trans', 'BQ_trans|BZ_trans', 'BZ_trans|CR_trans', 'AR_trans|CR_trans', 'DV_trans|EG_trans', 'BQ_trans|FR_trans', 'AX_trans|DU_trans', 'AM_trans|AY_trans', 'AY_trans|FR_trans', 'AB_trans|DV_trans', 'DU_trans|FR_trans', 'AH_trans|DV_trans', 'AB_trans|AH_trans', 'BP_trans|DV_trans', 'DV_trans|EH_trans', 'DV_trans|GB_trans', 'DN_trans|DV_trans', 'AY_trans|DF_trans', 'AR_trans|FL_trans', 'AB_trans|FL_trans', 'AR_trans|EB_trans', 'EB_trans|EL_trans', 'AY_trans|BN_trans', 'AH_trans|EH_trans', 'AH_trans|FL_trans', 'DA_trans|FL_trans', 'BQ_trans|DU_trans', 'BZ_trans|EB_trans', 'AB_trans|AY_trans', 'BZ_trans|EU_trans', 'CR_trans|FL_trans', 'AY_trans|DA_trans', 'DA_trans|DV_trans', 'AH_trans|CD_trans', 'BZ_trans|CF_trans', 'BC_trans|BZ_trans', 'EL_trans|GL_trans', 'AR_trans|DU_trans', 'DV_trans|EL_trans', 'AY_trans|FI_trans', 'BQ_trans|DN_trans', 'AF_trans|DV_trans', 'BZ_trans|FR_trans', 'DA_trans|GE_trans', 'DU_trans|EE_trans', 'EH_trans|FL_trans', 'AY_trans|BP_trans', 'AM_trans|DU_trans', 'BN_trans|CL_trans', 'BN_trans|FD_trans', 'AY_trans|BQ_trans', 'EP_trans|FR_trans', 'CH_trans|DV_trans', 'AY_trans|EP_trans', 'AR_trans|EU_trans', 'AR_trans|EP_trans', 'DV_trans|EE_trans', 'DU_trans|EB_trans', 'BZ_trans|EE_trans', 'DE_trans|DV_trans', 'AR_trans|BQ_trans', 'AH_trans|BN_trans', 'AB_trans|EH_trans', 'DU_trans|EG_trans', 'CL_trans|GE_trans', 'AY_trans|FC_trans', 'DV_trans|FS_trans', 'AH_trans|EU_trans', 'DV_trans|EB_trans', 'BZ_trans|DU_trans', 'BN_trans|GE_trans', 'BZ_trans|CW_trans', 'FL_trans|GE_trans', 'DV_trans|GL_trans', 'DU_trans|GE_trans', 'BZ_trans|CD_trans', 'DF_trans|EH_trans', 'EB_trans|FR_trans', 'BQ_trans|DE_trans', 'DU_trans|FC_trans', 'AR_trans|FD_trans', 'AR_trans|EH_trans', 'BQ_trans|CC_trans', 'AR_trans|BR_trans', 'AR_trans|AZ_trans', 'AY_trans|CH_trans', 'AR_trans|DA_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 94,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.08117212810397016 , 
        'max_depth': 3,
        'colsample_bytree': 0.2698160300254714 ,
        'subsample': 0.4287922605472445,
        'lambda':  5,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.6290470497126806
    },
    "final_features" : ['AH_trans', 'AX_trans', 'BP_trans', 'DF_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'EE_trans', 'EG_trans', 'FI_trans', 'FL_trans', 'GF_trans', 'GH_trans', 'DU * EB * FD_trans', 'DU * FD_trans', 'CD * DV_trans', 'AB * DU_trans', 'DV * FL_trans', 'DF * FD_trans', 'DU * FI_trans', 'BQ * GE_trans', 'DU * GL_trans', 'DE * DU_trans', 'CR * DV_trans', 'DU * FL_trans', 'DV * GH_trans', 'BQ * BZ_trans', 'AX * DU_trans', 'AM * AY_trans', 'AB * DV_trans', 'AB * AH_trans', 'AR * EB_trans', 'AY * BN_trans', 'DA * DV_trans', 'AH * CD_trans', 'AR * DU_trans', 'DV * EL_trans', 'BQ * DN_trans', 'DA * GE_trans', 'DU * EE_trans', 'AM * DU_trans', 'DU * EB_trans', 'AB * EH_trans']
}


test_neut_34 = {
    # # best from V34
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['EL_trans|GE_trans|GL_trans', 'AY_trans|DV_trans', 'DU_trans|FD_trans', 'EL_trans|EP_trans', 'DU_trans|EH_trans', 'AY_trans|DU_trans', 'AY_trans|EU_trans', 'EL_trans|EU_trans', 'AR_trans|FR_trans', 'DV_trans|FR_trans', 'GE_trans|GL_trans', 'FR_trans|GL_trans', 'DU_trans|EP_trans', 'CF_trans|DV_trans', 'DV_trans|EU_trans', 'DU_trans|FR_trans', 'AM_trans|DV_trans', 'CS_trans|DV_trans', 'DV_trans|GE_trans', 'AY_trans|FL_trans', 'BN_trans|DV_trans', 'EP_trans|GE_trans', 'AY_trans|EH_trans', 'DV_trans|EP_trans', 'AZ_trans|DV_trans', 'CD_trans|DV_trans', 'EL_trans|GL_trans', 'CL_trans|DV_trans', 'AY_trans|GE_trans', 'AY_trans|EB_trans', 'AM_trans|AY_trans', 'DU_trans|DV_trans', 'BQ_trans|DV_trans', 'AY_trans|EP_trans', 'BN_trans|BZ_trans', 'DV_trans|FL_trans', 'AY_trans|CD_trans', 'AY_trans|BC_trans', 'DV_trans|GF_trans', 'EB_trans|EP_trans', 'AY_trans|FR_trans', 'AH_trans|AY_trans', 'FL_trans|FR_trans', 'EP_trans|EU_trans', 'AH_trans|DU_trans', 'CC_trans|DV_trans', 'AY_trans|CL_trans', 'DU_trans|FL_trans', 'DU_trans|EL_trans', 'BC_trans|DV_trans', 'BR_trans|DU_trans', 'EU_trans|GE_trans', 'CW_trans|DV_trans', 'DF_trans|FR_trans', 'DV_trans|FC_trans', 'DV_trans|FD_trans', 'DH_trans|DV_trans', 'DV_trans|GL_trans', 'AB_trans|DU_trans', 'DN_trans|DV_trans', 'FR_trans|GE_trans', 'AY_trans|BQ_trans', 'AY_trans|EL_trans', 'CL_trans|FR_trans', 'DV_trans|EL_trans', 'EL_trans|FR_trans', 'BZ_trans|DV_trans', 'DU_trans|GL_trans', 'AY_trans|GH_trans', 'AF_trans|DV_trans', 'DE_trans|DU_trans', 'DV_trans|EG_trans', 'AY_trans|CW_trans', 'DF_trans|DU_trans', 'AX_trans|DU_trans', 'AY_trans|GL_trans', 'CR_trans|DV_trans', 'EB_trans|FR_trans', 'AR_trans|DU_trans', 'AY_trans|BR_trans', 'AR_trans|EP_trans', 'AY_trans|AZ_trans', 'DV_trans|GH_trans', 'FD_trans|FL_trans', 'DV_trans|EB_trans', 'DU_trans|FI_trans', 'AB_trans|EH_trans', 'AY_trans|CC_trans', 'EH_trans|FL_trans', 'EB_trans|EL_trans', 'DA_trans|DV_trans', 'CC_trans|FR_trans', 'EB_trans|GE_trans', 'EP_trans|FR_trans', 'AR_trans|AY_trans', 'AH_trans|BQ_trans', 'AB_trans|DV_trans', 'AH_trans|DV_trans', 'DE_trans|DV_trans', 'CF_trans|FR_trans', 'DA_trans|GE_trans', 'BQ_trans|DU_trans', 'AY_trans|BP_trans', 'AY_trans|DH_trans', 'CB_trans|DV_trans', 'EU_trans|GL_trans', 'AR_trans|FL_trans', 'DV_trans|FI_trans', 'AB_trans|AY_trans', 'AM_trans|BN_trans', 'AM_trans|CD_trans', 'AR_trans|BP_trans', 'AY_trans|CF_trans', 'AR_trans|DV_trans', 'CL_trans|GE_trans', 'DF_trans|DV_trans', 'AF_trans|FR_trans', 'DV_trans|EH_trans', 'DE_trans|DF_trans', 'AR_trans|EU_trans', 'BQ_trans|GE_trans', 'DU_trans|GE_trans', 'AR_trans|BQ_trans', 'BN_trans|FR_trans', 'AR_trans|BR_trans', 'BR_trans|DV_trans', 'EP_trans|GL_trans', 'AY_trans|BZ_trans', 'DU_trans|EE_trans', 'AR_trans|FD_trans', 'BN_trans|DU_trans', 'AY_trans|DN_trans', 'BQ_trans|BZ_trans', 'DY_trans|FR_trans', 'CU_trans|DV_trans', 'CW_trans|FR_trans', 'EP_trans|FS_trans', 'EU_trans|FR_trans', 'BQ_trans|FR_trans', 'EH_trans|GE_trans', 'AH_trans|BZ_trans', 'AX_trans|AY_trans', 'AY_trans|BN_trans', 'CC_trans|DU_trans', 'DF_trans|EH_trans', 'EH_trans|FD_trans', 'CD_trans|FR_trans', 'CB_trans|FR_trans', 'AM_trans|DU_trans', 'CW_trans|DU_trans', 'BZ_trans|CR_trans', 'DV_trans|FS_trans', 'AH_trans|EH_trans', 'AR_trans|DA_trans', 'AB_trans|FR_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 195,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04296872804868865 , 
        'max_depth': 3,
        'colsample_bytree': 0.2569064003682511 ,
        'subsample': 0.5126294167996502,
        'lambda':  5,
        'min_child_weight': 14,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.238506577839498
    },
    "final_features" : ['AB_trans', 'BP_trans', 'DF_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'EE_trans', 'FD_trans', 'FI_trans', 'EL * GE * GL_trans', 'AY * DV_trans', 'DU * FD_trans', 'EL * EP_trans', 'DU * EH_trans', 'AM * DV_trans', 'CD * DV_trans', 'DU * DV_trans', 'BQ * DV_trans', 'DV * FL_trans', 'DU * FL_trans', 'DU * EL_trans', 'AY * BQ_trans', 'DE * DU_trans', 'AY * CW_trans', 'AR * DU_trans', 'AY * AZ_trans', 'DV * GH_trans', 'DV * EB_trans', 'DU * FI_trans', 'AB * EH_trans', 'AH * BQ_trans', 'DA * GE_trans', 'DV * FI_trans', 'AB * AY_trans', 'BQ * GE_trans', 'EP * GL_trans', 'DF * EH_trans']
}


test_neut_35 = {
    # # best from V35
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['BN_trans|BZ_trans|EL_trans', 'AB_trans|DU_trans|EH_trans', 'EL_trans|EP_trans|GE_trans', 'AB_trans|DU_trans|DV_trans', 'BZ_trans|EB_trans|EP_trans', 'AR_trans|DU_trans|EH_trans', 'AY_trans|EP_trans|GE_trans', 'DU_trans|DV_trans', 'AY_trans|DV_trans', 'EL_trans|EP_trans', 'DU_trans|EP_trans', 'DV_trans|EP_trans', 'DU_trans|EH_trans', 'EL_trans|GE_trans', 'DU_trans|FD_trans', 'AB_trans|DU_trans', 'AY_trans|DU_trans', 'CR_trans|DU_trans', 'EB_trans|EP_trans', 'BN_trans|DV_trans', 'CW_trans|DV_trans', 'AY_trans|GE_trans', 'DE_trans|DU_trans', 'EP_trans|EU_trans', 'DV_trans|FL_trans', 'DU_trans|EL_trans', 'EP_trans|GE_trans', 'BQ_trans|DV_trans', 'CR_trans|DV_trans', 'CD_trans|DV_trans', 'AY_trans|EP_trans', 'AY_trans|EU_trans', 'CL_trans|DV_trans', 'BN_trans|BZ_trans', 'EL_trans|EU_trans', 'AH_trans|GE_trans', 'AH_trans|BQ_trans', 'CF_trans|DV_trans', 'AZ_trans|DV_trans', 'AY_trans|CD_trans', 'DA_trans|DU_trans', 'BC_trans|DU_trans', 'BZ_trans|EL_trans', 'DV_trans|GH_trans', 'DV_trans|FS_trans', 'AH_trans|EU_trans', 'AH_trans|DU_trans', 'AR_trans|DV_trans', 'AY_trans|EL_trans', 'DU_trans|GE_trans', 'DV_trans|GF_trans', 'AX_trans|DU_trans', 'AM_trans|DV_trans', 'AY_trans|CL_trans', 'BZ_trans|GE_trans', 'AB_trans|DV_trans', 'AY_trans|FL_trans', 'BZ_trans|DV_trans', 'AY_trans|EB_trans', 'DV_trans|EB_trans', 'CS_trans|DV_trans', 'DV_trans|GE_trans', 'CC_trans|DV_trans', 'DL_trans|DV_trans', 'BP_trans|DV_trans', 'DV_trans|EL_trans', 'AH_trans|AY_trans', 'AH_trans|DV_trans', 'AY_trans|EH_trans', 'EB_trans|EL_trans', 'CW_trans|EL_trans', 'AY_trans|CC_trans', 'AM_trans|AY_trans', 'AB_trans|EH_trans', 'DF_trans|DU_trans', 'DV_trans|GL_trans', 'BQ_trans|DY_trans', 'FD_trans|FL_trans', 'AR_trans|AY_trans', 'DV_trans|EH_trans', 'DV_trans|FD_trans', 'DN_trans|DV_trans', 'BQ_trans|CR_trans', 'DA_trans|DV_trans', 'BN_trans|EL_trans', 'CD_trans|GE_trans', 'DU_trans|FR_trans', 'DV_trans|DY_trans', 'EB_trans|GE_trans', 'AR_trans|EH_trans', 'AY_trans|DY_trans', 'AY_trans|BQ_trans', 'DU_trans|EE_trans', 'AR_trans|EU_trans', 'DU_trans|FL_trans', 'CD_trans|FL_trans', 'BZ_trans|EB_trans', 'EP_trans|FL_trans', 'CD_trans|DU_trans', 'AB_trans|AH_trans', 'DV_trans|FR_trans', 'DV_trans|EE_trans', 'AY_trans|FR_trans', 'CC_trans|DU_trans', 'AB_trans|FL_trans', 'DV_trans|EG_trans', 'DU_trans|EB_trans', 'BQ_trans|BZ_trans', 'DV_trans|EU_trans', 'BQ_trans|FI_trans', 'BZ_trans|DU_trans', 'AR_trans|DU_trans', 'BZ_trans|DA_trans', 'AH_trans|FD_trans', 'AY_trans|EG_trans', 'DL_trans|GE_trans', 'AR_trans|GE_trans', 'AR_trans|FR_trans', 'DU_trans|FS_trans', 'BQ_trans|DN_trans', 'EH_trans|FL_trans', 'DU_trans|FI_trans', 'AY_trans|CR_trans', 'AB_trans|FD_trans', 'BQ_trans|GE_trans', 'DU_trans|GI_trans', 'BR_trans|DU_trans', 'CW_trans|EP_trans', 'BZ_trans|CD_trans', 'DF_trans|FR_trans', 'AH_trans|FL_trans', 'BC_trans|DV_trans', 'DV_trans|FC_trans', 'BQ_trans|EL_trans', 'BZ_trans|EU_trans', 'AY_trans|BN_trans', 'AB_trans|GE_trans', 'BC_trans|BZ_trans', 'AF_trans|BZ_trans', 'AR_trans|BP_trans', 'BZ_trans|FL_trans', 'CL_trans|DU_trans', 'DU_trans|FC_trans', 'AR_trans|EB_trans', 'BZ_trans|CW_trans', 'CB_trans|DV_trans', 'EL_trans|FL_trans', 'AF_trans|DV_trans', 'BN_trans|BQ_trans', 'BZ_trans|DE_trans', 'CL_trans|GE_trans', 'AZ_trans|BZ_trans', 'DH_trans|DV_trans', 'AF_trans|AH_trans', 'AR_trans|BQ_trans', 'DU_trans|EU_trans', 'AR_trans|FL_trans', 'AR_trans|EL_trans', 'AM_trans|GE_trans', 'AR_trans|DI_trans', 'AY_trans|BC_trans', 'EP_trans|FS_trans', 'AY_trans|CH_trans', 'DU_trans|EG_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .1,
    ## Model details
    "xgboost_boosting_rounds" : 245,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06075406078211678 , 
        'max_depth': 2,
        'colsample_bytree': 0.22708122684772516 ,
        'subsample': 0.6493282016198346,
        'lambda':  9,
        'min_child_weight': 13,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.309755825356123
    },
    "final_features" : ['AH_trans', 'AM_trans', 'AR_trans', 'BD_trans', 'BP_trans', 'CD_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'DA_trans', 'DF_trans', 'DL_trans', 'DN_trans', 'DV_trans', 'EE_trans', 'EU_trans', 'FC_trans', 'FI_trans', 'FL_trans', 'GB_trans', 'GL_trans', 'AB * DU_trans', 'CR * DU_trans', 'DE * DU_trans', 'DV * FL_trans', 'EP * GE_trans', 'CD * DV_trans', 'EL * EU_trans', 'AH * GE_trans', 'AH * BQ_trans', 'DV * GH_trans', 'DV * FS_trans', 'AR * DV_trans', 'AX * DU_trans', 'BZ * GE_trans', 'AB * DV_trans', 'AY * CC_trans', 'AB * EH_trans', 'BQ * DY_trans', 'FD * FL_trans', 'AR * AY_trans', 'DU * FR_trans', 'DV * DY_trans', 'AR * EU_trans', 'CD * FL_trans', 'BZ * EB_trans', 'AB * AH_trans', 'CC * DU_trans', 'BZ * DA_trans', 'DL * GE_trans', 'AR * GE_trans', 'EH * FL_trans', 'AB * FD_trans', 'CW * EP_trans', 'BZ * EU_trans', 'DU * FC_trans', 'AR * EB_trans', 'BN * BQ_trans', 'CL * GE_trans', 'DU * EU_trans', 'AR * FL_trans', 'AR * EL_trans', 'AM * GE_trans', 'AR * DI_trans', 'AY * BC_trans', 'EP * FS_trans']
}


test_neut_36 = {
    # # best from V36
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['AB_trans|DU_trans', 'EL_trans|EP_trans', 'DU_trans|EH_trans', 'AR_trans|BZ_trans', 'AY_trans|DU_trans', 'AY_trans|BQ_trans', 'AY_trans|EH_trans', 'DU_trans|FD_trans', 'BZ_trans|DU_trans', 'AH_trans|EH_trans', 'EL_trans|GE_trans', 'EL_trans|EU_trans', 'AR_trans|FR_trans', 'DU_trans|EP_trans', 'BN_trans|FR_trans', 'DU_trans|FR_trans', 'AY_trans|CL_trans', 'AH_trans|FD_trans', 'BN_trans|EP_trans', 'DF_trans|FD_trans', 'DE_trans|DU_trans', 'AY_trans|EU_trans', 'BZ_trans|EU_trans', 'EP_trans|FR_trans', 'EP_trans|EU_trans', 'AY_trans|EP_trans', 'FD_trans|FL_trans', 'DA_trans|DU_trans', 'DF_trans|FR_trans', 'AR_trans|CL_trans', 'AY_trans|GE_trans', 'DU_trans|GL_trans', 'AR_trans|CD_trans', 'AR_trans|AY_trans', 'BZ_trans|CL_trans', 'BZ_trans|GE_trans', 'AH_trans|EU_trans', 'CL_trans|DU_trans', 'AF_trans|CL_trans', 'FL_trans|FR_trans', 'AY_trans|EB_trans', 'AH_trans|BQ_trans', 'AY_trans|FL_trans', 'EH_trans|FL_trans', 'AM_trans|AY_trans', 'AH_trans|AY_trans', 'AR_trans|DI_trans', 'EB_trans|EL_trans', 'AH_trans|DU_trans', 'AR_trans|DU_trans', 'AR_trans|EU_trans', 'DU_trans|EU_trans', 'AH_trans|GE_trans', 'FR_trans|GE_trans', 'BC_trans|BZ_trans', 'AH_trans|FR_trans', 'CR_trans|DU_trans', 'AY_trans|BP_trans', 'AY_trans|CB_trans', 'AH_trans|AR_trans', 'AR_trans|BC_trans', 'DU_trans|EB_trans', 'AY_trans|EL_trans', 'AB_trans|AH_trans', 'AY_trans|FR_trans', 'EP_trans|GE_trans', 'AY_trans|BZ_trans', 'AY_trans|CF_trans', 'AR_trans|EP_trans', 'DU_trans|FL_trans', 'AH_trans|DA_trans', 'BQ_trans|FR_trans', 'EB_trans|EP_trans', 'AR_trans|FD_trans', 'AY_trans|CD_trans', 'CC_trans|DU_trans', 'EB_trans|FR_trans', 'AY_trans|CR_trans', 'AY_trans|DA_trans', 'AB_trans|FR_trans', 'BQ_trans|EH_trans', 'AR_trans|BQ_trans', 'AR_trans|EH_trans', 'AY_trans|EE_trans', 'AR_trans|FI_trans', 'EU_trans|GE_trans', 'AY_trans|FD_trans', 'DU_trans|EE_trans', 'EH_trans|FD_trans', 'DA_trans|DF_trans', 'EL_trans|GL_trans', 'BZ_trans|DF_trans', 'AY_trans|BC_trans', 'AF_trans|AH_trans', 'BZ_trans|CD_trans', 'AR_trans|FL_trans', 'EU_trans|FR_trans', 'BQ_trans|GE_trans', 'DF_trans|EH_trans', 'AY_trans|DF_trans', 'BZ_trans|FL_trans', 'BN_trans|BZ_trans', 'CD_trans|FR_trans', 'AY_trans|CW_trans', 'AR_trans|BN_trans', 'AY_trans|BN_trans', 'EP_trans|FS_trans', 'AR_trans|DA_trans', 'DU_trans|EL_trans', 'AY_trans|CC_trans', 'AF_trans|AY_trans', 'CD_trans|EP_trans', 'BZ_trans|EH_trans', 'AR_trans|BR_trans', 'AR_trans|GH_trans', 'AR_trans|EB_trans', 'BQ_trans|DE_trans', 'BZ_trans|FD_trans', 'DL_trans|DU_trans', 'EB_trans|GE_trans', 'AX_trans|DU_trans', 'FD_trans|GE_trans', 'CL_trans|EL_trans', 'BQ_trans|EL_trans', 'AF_trans|BZ_trans', 'EP_trans|FL_trans', 'AH_trans|DE_trans', 'DI_trans|DU_trans', 'CC_trans|GE_trans', 'BQ_trans|CR_trans', 'AB_trans|FL_trans', 'EP_trans|GL_trans', 'DF_trans|GE_trans', 'BZ_trans|EB_trans', 'AY_trans|DY_trans', 'DU_trans|GH_trans', 'DU_trans|GE_trans', 'DU_trans|FI_trans', 'DF_trans|DU_trans', 'BQ_trans|BZ_trans', 'BZ_trans|EP_trans', 'CW_trans|GE_trans', 'EP_trans|FD_trans', 'AR_trans|GE_trans', 'DU_trans|FE_trans', 'AH_trans|CD_trans', 'DE_trans|FL_trans', 'EH_trans|FR_trans', 'BN_trans|GE_trans', 'CR_trans|GE_trans', 'BQ_trans|EP_trans', 'BN_trans|EB_trans', 'AR_trans|GL_trans', 'FI_trans|FL_trans', 'BR_trans|DU_trans', 'AM_trans|GE_trans', 'FR_trans|GL_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 209,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.046634274630611997 , 
        'max_depth': 3,
        'colsample_bytree': 0.2943292467782303 ,
        'subsample': 0.3242484283235598,
        'lambda': 1 ,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.773268375722819
    },
    "final_features" : ['AB_trans', 'AM_trans', 'BN_trans', 'BP_trans', 'CD_trans', 'DN_trans', 'EE_trans', 'FI_trans', 'FL_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'AB * DU_trans', 'DU * FD_trans', 'DE * DU_trans', 'AY * GE_trans', 'DU * GL_trans', 'AH * BQ_trans', 'AY * FL_trans', 'AM * AY_trans', 'AR * DI_trans', 'AH * AR_trans', 'AB * AH_trans', 'DU * FL_trans', 'DU * EE_trans', 'EH * FD_trans', 'AR * FL_trans', 'BQ * GE_trans', 'BZ * FL_trans', 'AR * BN_trans', 'EP * FS_trans', 'CD * EP_trans', 'AR * EB_trans', 'BZ * FD_trans', 'DL * DU_trans', 'AX * DU_trans', 'BQ * EL_trans', 'AH * DE_trans', 'CC * GE_trans', 'DU * GH_trans', 'DU * FI_trans', 'DU * FE_trans', 'AH * CD_trans', 'DE * FL_trans', 'CR * GE_trans']
}


test_neut_37 = {
    # # best from V37
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['EL_trans|EP_trans|GL_trans', 'AR_trans|EU_trans|FR_trans', 'DU_trans|EU_trans|GL_trans', 'EU_trans|GF_trans|GL_trans', 'AY_trans|EP_trans|GE_trans', 'AY_trans|EP_trans|FL_trans', 'EL_trans|EU_trans|GL_trans', 'EL_trans|EP_trans|GE_trans', 'AR_trans|FL_trans|FR_trans', 'DU_trans|EL_trans|GL_trans', 'DU_trans|GF_trans|GL_trans', 'EL_trans|EP_trans|FR_trans', 'AR_trans|FR_trans', 'EL_trans|EP_trans', 'EL_trans|EU_trans', 'EU_trans|FR_trans', 'AY_trans|EU_trans', 'DU_trans|FR_trans', 'DU_trans|FD_trans', 'EP_trans|FR_trans', 'DU_trans|EH_trans', 'DU_trans|GL_trans', 'AY_trans|EP_trans', 'BN_trans|FR_trans', 'AY_trans|BQ_trans', 'AY_trans|CL_trans', 'AH_trans|EH_trans', 'AY_trans|DU_trans', 'AH_trans|FD_trans', 'AR_trans|BC_trans', 'AY_trans|EH_trans', 'DU_trans|EP_trans', 'EL_trans|GL_trans', 'EP_trans|GL_trans', 'EL_trans|GE_trans', 'BQ_trans|FR_trans', 'AB_trans|DU_trans', 'AH_trans|EP_trans', 'AY_trans|GE_trans', 'AR_trans|DU_trans', 'DF_trans|FD_trans', 'FL_trans|FR_trans', 'AY_trans|CF_trans', 'AH_trans|EU_trans', 'DF_trans|FR_trans', 'EP_trans|GE_trans', 'AH_trans|GE_trans', 'AY_trans|EB_trans', 'FD_trans|FL_trans', 'DU_trans|FL_trans', 'BN_trans|EP_trans', 'AM_trans|AY_trans', 'AY_trans|CD_trans', 'AY_trans|EL_trans', 'EU_trans|GL_trans', 'BZ_trans|FR_trans', 'AH_trans|DU_trans', 'AR_trans|AY_trans', 'AR_trans|BR_trans', 'CL_trans|DU_trans', 'BC_trans|GE_trans', 'AY_trans|FL_trans', 'EB_trans|FR_trans', 'BQ_trans|DY_trans', 'AR_trans|EH_trans', 'AH_trans|AY_trans', 'BZ_trans|DU_trans', 'AR_trans|CL_trans', 'AY_trans|BN_trans', 'BC_trans|FR_trans', 'AR_trans|FL_trans', 'CR_trans|EH_trans', 'FL_trans|GL_trans', 'EH_trans|FL_trans', 'BZ_trans|EU_trans', 'EP_trans|EU_trans', 'CC_trans|FR_trans', 'FR_trans|GE_trans', 'AY_trans|GL_trans', 'BZ_trans|FL_trans', 'DE_trans|FR_trans', 'EL_trans|FR_trans', 'EU_trans|GE_trans', 'BR_trans|DU_trans', 'CL_trans|FR_trans', 'GE_trans|GL_trans', 'EP_trans|FS_trans', 'AY_trans|BC_trans', 'EU_trans|FS_trans', 'DF_trans|EH_trans', 'CF_trans|FR_trans', 'BQ_trans|GE_trans', 'AY_trans|CC_trans', 'AR_trans|FD_trans', 'EB_trans|EP_trans', 'BP_trans|FR_trans', 'AR_trans|EU_trans', 'DE_trans|DU_trans', 'CW_trans|EL_trans', 'AH_trans|BN_trans', 'DU_trans|GE_trans', 'AY_trans|GH_trans', 'AH_trans|CD_trans', 'AY_trans|DF_trans', 'DF_trans|DU_trans', 'AY_trans|EE_trans', 'FR_trans|GL_trans', 'CD_trans|FR_trans', 'BC_trans|DU_trans', 'AH_trans|AZ_trans', 'BZ_trans|EB_trans', 'AH_trans|FR_trans', 'AY_trans|FR_trans', 'AY_trans|DA_trans', 'CC_trans|DU_trans', 'AR_trans|DA_trans', 'BN_trans|EL_trans', 'CL_trans|GE_trans', 'CL_trans|EL_trans', 'AY_trans|BR_trans', 'AF_trans|AY_trans', 'BZ_trans|EP_trans', 'AH_trans|BR_trans', 'AY_trans|FD_trans', 'CW_trans|GE_trans', 'CW_trans|FR_trans', 'AY_trans|FC_trans', 'BN_trans|BZ_trans', 'DU_trans|EU_trans', 'AY_trans|DY_trans', 'GF_trans|GL_trans', 'AY_trans|FS_trans', 'AR_trans|FS_trans', 'AR_trans|BQ_trans', 'FL_trans|GE_trans', 'BZ_trans|CD_trans', 'BN_trans|EH_trans', 'AR_trans|CR_trans', 'AR_trans|AZ_trans', 'EP_trans|FL_trans', 'AR_trans|GL_trans', 'BZ_trans|EH_trans', 'BN_trans|FC_trans', 'DU_trans|EL_trans', 'DU_trans|EB_trans', 'EB_trans|GE_trans', 'DU_trans|GH_trans', 'AM_trans|GE_trans', 'AY_trans|CW_trans', 'CD_trans|EP_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 138,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04756578626576859 , 
        'max_depth': 3,
        'colsample_bytree': 0.20317517488107223 ,
        'subsample': 0.6689554702948654,
        'lambda':  8,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 2.998075169687074
    },
    "final_features" : ['AB_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'BP_trans', 'BQ_trans', 'BZ_trans', 'CL_trans', 'DL_trans', 'DN_trans', 'DU_trans', 'EE_trans', 'EH_trans', 'FD_trans', 'FI_trans', 'EL * EP * FR_trans', 'DU * EH_trans', 'AY * BQ_trans', 'AR * BC_trans', 'AB * DU_trans', 'AH * EP_trans', 'AR * DU_trans', 'EP * GE_trans', 'DU * FL_trans', 'BZ * FR_trans', 'CL * DU_trans', 'BQ * DY_trans', 'BC * FR_trans', 'CL * FR_trans', 'EU * FS_trans', 'BQ * GE_trans', 'EB * EP_trans', 'DE * DU_trans', 'AY * GH_trans', 'AH * CD_trans', 'CL * EL_trans', 'AY * FC_trans', 'FL * GE_trans', 'DU * GH_trans', 'AY * CW_trans']
}


test_neut_39 = {
    # # best from V39
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['EL_trans|EP_trans|EU_trans', 'AY_trans|EL_trans|GE_trans', 'AY_trans|CW_trans|EL_trans', 'AY_trans|EL_trans|EP_trans', 'CW_trans|EL_trans|GE_trans', 'EL_trans|EP_trans|GE_trans', 'AY_trans|DU_trans|EP_trans', 'AY_trans|EP_trans|EU_trans', 'AY_trans|EP_trans|GE_trans', 'AR_trans|DU_trans|FD_trans', 'DU_trans|EL_trans|GE_trans', 'BC_trans|DU_trans|EH_trans', 'EB_trans|EL_trans|GE_trans', 'AY_trans|EU_trans|GE_trans', 'EL_trans|EU_trans|GE_trans', 'DU_trans|EL_trans|EP_trans', 'EU_trans|FS_trans|GE_trans', 'CW_trans|EL_trans|FS_trans', 'AY_trans|BN_trans|EP_trans', 'AM_trans|EL_trans|GE_trans', 'EL_trans|EP_trans', 'EL_trans|GE_trans', 'DU_trans|EP_trans', 'DU_trans|EH_trans', 'AY_trans|EP_trans', 'BZ_trans|DU_trans', 'EP_trans|GE_trans', 'AY_trans|EL_trans', 'DU_trans|FD_trans', 'AB_trans|DU_trans', 'AY_trans|CL_trans', 'AY_trans|DU_trans', 'AH_trans|BN_trans', 'AR_trans|DU_trans', 'AR_trans|AY_trans', 'AR_trans|EP_trans', 'AH_trans|EP_trans', 'AY_trans|GE_trans', 'EL_trans|EU_trans', 'AH_trans|EU_trans', 'EB_trans|EP_trans', 'AY_trans|BQ_trans', 'AY_trans|EU_trans', 'DU_trans|EL_trans', 'AB_trans|AH_trans', 'DA_trans|DU_trans', 'DE_trans|DU_trans', 'BC_trans|DU_trans', 'AH_trans|AY_trans', 'EP_trans|EU_trans', 'CW_trans|GE_trans', 'BQ_trans|EU_trans', 'AF_trans|AY_trans', 'BN_trans|BZ_trans', 'EU_trans|GE_trans', 'AM_trans|GE_trans', 'DN_trans|DU_trans', 'CW_trans|EL_trans', 'AH_trans|FD_trans', 'EB_trans|EL_trans', 'AR_trans|DI_trans', 'AF_trans|BZ_trans', 'AY_trans|CC_trans', 'AF_trans|AH_trans', 'BZ_trans|GE_trans', 'CW_trans|FS_trans', 'AH_trans|BQ_trans', 'BQ_trans|DU_trans', 'BZ_trans|EB_trans', 'AH_trans|EB_trans', 'AY_trans|FL_trans', 'BQ_trans|DY_trans', 'CD_trans|DU_trans', 'EP_trans|FS_trans', 'AH_trans|DU_trans', 'DU_trans|EU_trans', 'DU_trans|FS_trans', 'AH_trans|GE_trans', 'CC_trans|DU_trans', 'AX_trans|DU_trans', 'BQ_trans|FI_trans', 'AR_trans|FR_trans', 'AY_trans|EG_trans', 'AY_trans|EH_trans', 'BZ_trans|EP_trans', 'DU_trans|FR_trans', 'AR_trans|CD_trans', 'BQ_trans|BZ_trans', 'EB_trans|GE_trans', 'AY_trans|BZ_trans', 'AB_trans|BZ_trans', 'BZ_trans|EL_trans', 'DU_trans|EG_trans', 'AR_trans|FD_trans', 'AR_trans|FS_trans', 'CD_trans|CL_trans', 'DU_trans|FL_trans', 'BZ_trans|FL_trans', 'DU_trans|FI_trans', 'DU_trans|EE_trans', 'AR_trans|GE_trans', 'FL_trans|GE_trans', 'EH_trans|FL_trans', 'DU_trans|EB_trans', 'AB_trans|EH_trans', 'AB_trans|BN_trans', 'BZ_trans|CD_trans', 'BZ_trans|EU_trans', 'AF_trans|CL_trans', 'AR_trans|BQ_trans', 'BZ_trans|CR_trans', 'CR_trans|GE_trans', 'AH_trans|BZ_trans', 'BZ_trans|FS_trans', 'AY_trans|GH_trans', 'CR_trans|DU_trans', 'AY_trans|FS_trans', 'AY_trans|EB_trans', 'AR_trans|EH_trans', 'BQ_trans|EL_trans', 'BQ_trans|GE_trans', 'DF_trans|GE_trans', 'EU_trans|FS_trans', 'AH_trans|EH_trans', 'AB_trans|EP_trans', 'AY_trans|BN_trans', 'EP_trans|FL_trans', 'DU_trans|GE_trans', 'EB_trans|EU_trans', 'AH_trans|FI_trans', 'AY_trans|FD_trans', 'BN_trans|EP_trans', 'AR_trans|CW_trans', 'AY_trans|DN_trans', 'BQ_trans|EP_trans', 'EE_trans|EP_trans', 'DL_trans|GE_trans', 'CW_trans|EU_trans', 'CL_trans|EL_trans', 'CW_trans|EP_trans', 'AB_trans|FL_trans', 'AH_trans|CW_trans', 'DH_trans|GE_trans', 'AY_trans|AZ_trans', 'AR_trans|BN_trans', 'AY_trans|DY_trans', 'AB_trans|FR_trans', 'FD_trans|FL_trans', 'AR_trans|FC_trans', 'BN_trans|FL_trans', 'AH_trans|EE_trans', 'DU_trans|GL_trans', 'DF_trans|FR_trans', 'AB_trans|FD_trans', 'BN_trans|CD_trans', 'AF_trans|GE_trans', 'AR_trans|EU_trans', 'BZ_trans|CW_trans', 'AY_trans|CF_trans', 'EL_trans|FL_trans', 'CD_trans|EP_trans', 'BZ_trans|GB_trans', 'BQ_trans|DN_trans', 'AY_trans|CD_trans', 'BC_trans|EH_trans', 'AB_trans|EL_trans', 'CW_trans|DU_trans', 'AR_trans|EL_trans', 'AF_trans|AR_trans', 'AY_trans|DF_trans', 'BZ_trans|DE_trans', 'AY_trans|CW_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .1,
    ## Model details
    "xgboost_boosting_rounds" : 250,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04768996527977072 , 
        'max_depth': 2,
        'colsample_bytree': 0.21790379437063884 ,
        'subsample': 0.6092339704537837,
        'lambda': 10 ,
        'min_child_weight':10 ,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.984697452794376
    },
    "final_features" : ['AM_trans', 'AY_trans', 'BC_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BR_trans', 'BZ_trans', 'CD_trans', 'CS_trans', 'CU_trans', 'DF_trans', 'DL_trans', 'DN_trans', 'EE_trans', 'EL_trans', 'EU_trans', 'FI_trans', 'FL_trans', 'GF_trans', 'GH_trans', 'GI_trans', 'GL_trans', 'AY * CW * EL_trans', 'AY * EP * GE_trans', 'EL * EU * GE_trans', 'AM * EL * GE_trans', 'AB * DU_trans', 'AR * DU_trans', 'AR * AY_trans', 'AH * EP_trans', 'EL * EU_trans', 'AB * AH_trans', 'DE * DU_trans', 'AM * GE_trans', 'AR * DI_trans', 'AY * CC_trans', 'BZ * GE_trans', 'AH * BQ_trans', 'BQ * DU_trans', 'BZ * EB_trans', 'AH * EB_trans', 'BQ * DY_trans', 'CD * DU_trans', 'AH * GE_trans', 'CC * DU_trans', 'AX * DU_trans', 'AR * FR_trans', 'AY * EH_trans', 'DU * FR_trans', 'AR * CD_trans', 'BQ * BZ_trans', 'AY * BZ_trans', 'AB * BZ_trans', 'BZ * EL_trans', 'BZ * FL_trans', 'DU * EE_trans', 'FL * GE_trans', 'EH * FL_trans', 'BZ * CR_trans', 'CR * GE_trans', 'CR * DU_trans', 'DU * GE_trans', 'EB * EU_trans', 'AH * FI_trans', 'AY * DN_trans', 'EE * EP_trans', 'DL * GE_trans', 'CW * EP_trans', 'AH * CW_trans', 'AR * BN_trans', 'AY * DY_trans', 'AB * FR_trans', 'BN * FL_trans', 'DU * GL_trans', 'AB * FD_trans', 'BN * CD_trans', 'AR * EU_trans', 'CD * EP_trans', 'BZ * GB_trans', 'AB * EL_trans', 'AY * DF_trans']
}
test_neut_40 = {
    # # best from V40
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['CW_trans|EL_trans|GE_trans', 'AR_trans|CW_trans|GE_trans', 'AB_trans|CW_trans|GE_trans', 'AY_trans|EL_trans|GE_trans', 'BZ_trans|EB_trans|EL_trans', 'BZ_trans|CW_trans|EU_trans', 'AB_trans|DU_trans|FS_trans', 'DU_trans|EL_trans|GL_trans', 'BZ_trans|EU_trans|GE_trans', 'DU_trans|EL_trans|GE_trans', 'BN_trans|BZ_trans|EU_trans', 'AB_trans|BN_trans|DU_trans', 'AB_trans|DU_trans|EH_trans', 'AY_trans|CW_trans|EL_trans', 'AR_trans|AY_trans|CD_trans', 'AY_trans|EL_trans|EU_trans', 'AM_trans|EL_trans|GE_trans', 'AB_trans|DU_trans|FD_trans', 'AB_trans|DU_trans|GE_trans', 'CW_trans|EL_trans', 'BZ_trans|CW_trans', 'EL_trans|EU_trans', 'AY_trans|GE_trans', 'CW_trans|GE_trans', 'DU_trans|EH_trans', 'EL_trans|GE_trans', 'AR_trans|DI_trans', 'DU_trans|FD_trans', 'CW_trans|EU_trans', 'AB_trans|DU_trans', 'AY_trans|EG_trans', 'AB_trans|FL_trans', 'DU_trans|EL_trans', 'AH_trans|GE_trans', 'BN_trans|BZ_trans', 'AR_trans|AY_trans', 'EU_trans|GE_trans', 'BZ_trans|GE_trans', 'BZ_trans|EB_trans', 'AY_trans|BZ_trans', 'BZ_trans|EL_trans', 'AY_trans|CL_trans', 'AY_trans|EL_trans', 'AH_trans|CW_trans', 'AH_trans|EU_trans', 'AH_trans|EL_trans', 'AY_trans|BQ_trans', 'EB_trans|GE_trans', 'AY_trans|BN_trans', 'DL_trans|GE_trans', 'DU_trans|FI_trans', 'BZ_trans|CD_trans', 'EU_trans|FS_trans', 'AF_trans|BZ_trans', 'EB_trans|EL_trans', 'AR_trans|EL_trans', 'AR_trans|EU_trans', 'EL_trans|FL_trans', 'AH_trans|EB_trans', 'CR_trans|DU_trans', 'CW_trans|FS_trans', 'AB_trans|GE_trans', 'AR_trans|BZ_trans', 'AB_trans|AH_trans', 'BQ_trans|GE_trans', 'AY_trans|EB_trans', 'AB_trans|EL_trans', 'CD_trans|DU_trans', 'BQ_trans|DN_trans', 'FD_trans|FL_trans', 'AY_trans|DU_trans', 'CL_trans|GE_trans', 'AB_trans|EH_trans', 'AM_trans|GE_trans', 'DU_trans|EE_trans', 'AR_trans|EG_trans', 'AH_trans|DU_trans', 'AY_trans|DY_trans', 'AX_trans|DU_trans', 'AY_trans|CD_trans', 'CW_trans|DU_trans', 'BQ_trans|CR_trans', 'AB_trans|AY_trans', 'AH_trans|AY_trans', 'FL_trans|GE_trans', 'AB_trans|FD_trans', 'AR_trans|DU_trans', 'BZ_trans|GB_trans', 'AB_trans|AR_trans', 'AH_trans|BQ_trans', 'DU_trans|EG_trans', 'BZ_trans|DA_trans', 'DU_trans|FS_trans', 'BZ_trans|EU_trans', 'BZ_trans|DE_trans', 'BZ_trans|FL_trans', 'BP_trans|BZ_trans', 'AY_trans|BC_trans', 'AR_trans|FL_trans', 'BQ_trans|DU_trans', 'AH_trans|FS_trans', 'DU_trans|FE_trans', 'AR_trans|BQ_trans', 'AH_trans|BZ_trans', 'DE_trans|DU_trans', 'AR_trans|FD_trans', 'DA_trans|DU_trans', 'BQ_trans|BZ_trans', 'AY_trans|EU_trans', 'DU_trans|GE_trans', 'AY_trans|CW_trans', 'AB_trans|CR_trans', 'DH_trans|GE_trans', 'AH_trans|CD_trans', 'AR_trans|BN_trans', 'CW_trans|EB_trans', 'BZ_trans|DY_trans', 'BC_trans|DU_trans', 'BQ_trans|EL_trans', 'AY_trans|CC_trans', 'DF_trans|FI_trans', 'AY_trans|FS_trans', 'AR_trans|FR_trans', 'AR_trans|CR_trans', 'DU_trans|EU_trans', 'DF_trans|EL_trans', 'AH_trans|CL_trans', 'AF_trans|GE_trans', 'EB_trans|FS_trans', 'CR_trans|GE_trans', 'EU_trans|FL_trans', 'AH_trans|FD_trans', 'BZ_trans|CR_trans', 'GE_trans|GL_trans', 'BR_trans|DU_trans', 'BZ_trans|FR_trans', 'DF_trans|DU_trans', 'BQ_trans|DY_trans', 'EU_trans|FD_trans', 'EH_trans|GE_trans', 'CL_trans|CW_trans', 'AY_trans|FL_trans', 'BC_trans|BZ_trans', 'CC_trans|GE_trans', 'CR_trans|DF_trans', 'BZ_trans|FD_trans', 'DA_trans|FL_trans', 'DF_trans|GE_trans', 'BZ_trans|DU_trans', 'AY_trans|CR_trans', 'EH_trans|FL_trans', 'AY_trans|GH_trans', 'BQ_trans|FI_trans', 'AR_trans|CD_trans', 'CD_trans|FL_trans', 'AR_trans|CC_trans', 'BN_trans|EL_trans', 'CL_trans|DU_trans', 'EE_trans|GE_trans', 'BQ_trans|CC_trans', 'AY_trans|CF_trans', 'AY_trans|FD_trans', 'DU_trans|FR_trans', 'BZ_trans|CL_trans', 'DF_trans|FD_trans', 'AF_trans|BN_trans', 'AR_trans|EB_trans', 'AH_trans|FL_trans', 'FD_trans|GE_trans', 'DU_trans|GH_trans', 'DU_trans|FL_trans', 'AY_trans|EE_trans', 'AY_trans|AZ_trans', 'AR_trans|DA_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : .1,
    ## Model details
    "xgboost_boosting_rounds" : 208,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.0756905886236364 , 
        'max_depth': 2,
        'colsample_bytree': 0.18304661805776054 ,
        'subsample': 0.6458898372596313,
        'lambda':  9,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.2377128154363515
    },
    "final_features" : ['AH_trans', 'AX_trans', 'AY_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BR_trans', 'BZ_trans', 'CD_trans', 'CS_trans', 'CU_trans', 'DF_trans', 'DI_trans', 'DL_trans', 'DN_trans', 'EE_trans', 'EU_trans', 'FI_trans', 'FL_trans', 'GH_trans', 'GL_trans', 'DU * EL * GL_trans', 'BZ * EU * GE_trans', 'DU * EL * GE_trans', 'AB * BN * DU_trans', 'AY * EL * EU_trans', 'AM * EL * GE_trans', 'AB * DU * GE_trans', 'EL * EU_trans', 'AR * DI_trans', 'AB * DU_trans', 'AH * GE_trans', 'AR * AY_trans', 'BZ * GE_trans', 'BZ * EB_trans', 'AY * BZ_trans', 'AY * EL_trans', 'EB * GE_trans', 'DL * GE_trans', 'EU * FS_trans', 'AR * EU_trans', 'AH * EB_trans', 'CR * DU_trans', 'CW * FS_trans', 'AR * BZ_trans', 'AB * AH_trans', 'AB * EL_trans', 'FD * FL_trans', 'CL * GE_trans', 'AB * EH_trans', 'AM * GE_trans', 'DU * EE_trans', 'AY * DY_trans', 'AX * DU_trans', 'AB * FD_trans', 'BZ * GB_trans', 'AB * AR_trans', 'DU * EG_trans', 'BZ * DA_trans', 'BZ * FL_trans', 'AY * BC_trans', 'AR * FL_trans', 'BQ * DU_trans', 'DU * FE_trans', 'DE * DU_trans', 'BQ * BZ_trans', 'DU * GE_trans', 'AH * CD_trans', 'AR * BN_trans', 'CW * EB_trans', 'BZ * DY_trans', 'AY * CC_trans', 'DU * EU_trans', 'DF * EL_trans', 'AH * CL_trans', 'CR * GE_trans', 'GE * GL_trans', 'BQ * DY_trans', 'CL * CW_trans', 'EH * FL_trans', 'AR * CC_trans', 'CL * DU_trans', 'AY * FD_trans', 'DU * FR_trans', 'DF * FD_trans', 'AR * EB_trans', 'AR * DA_trans']
}
test_neut_41 = {
    # # best from V41 (kinda scuffed)
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['CW_trans|EL_trans|GL_trans', 'EL_trans|EU_trans|GL_trans', 'CW_trans|GE_trans|GL_trans', 'AR_trans|EU_trans|FR_trans', 'CW_trans|EL_trans|GE_trans', 'AY_trans|EL_trans|GE_trans', 'AY_trans|EL_trans|GL_trans', 'DU_trans|EU_trans|GL_trans', 'EL_trans|EU_trans|GE_trans', 'AY_trans|BN_trans|EL_trans', 'EL_trans|GE_trans|GL_trans', 'DU_trans|EL_trans|GL_trans', 'EU_trans|FR_trans|GL_trans', 'AY_trans|EL_trans|EU_trans', 'EU_trans|GE_trans|GL_trans', 'DE_trans|DU_trans|GL_trans', 'DU_trans|EL_trans|GE_trans', 'AY_trans|DY_trans|EU_trans', 'AR_trans|AY_trans|FR_trans', 'CW_trans|FR_trans|GE_trans', 'AM_trans|AY_trans|GE_trans', 'AY_trans|EB_trans|EL_trans', 'AY_trans|EU_trans|GL_trans', 'AR_trans|BC_trans|FR_trans', 'AY_trans|FS_trans|GE_trans', 'EL_trans|EU_trans|FR_trans', 'AR_trans|CL_trans|FR_trans', 'CW_trans|EL_trans|FR_trans', 'DU_trans|FD_trans|GL_trans', 'EU_trans|FR_trans|GE_trans', 'BN_trans|EL_trans|FR_trans', 'AY_trans|CW_trans|EL_trans', 'EB_trans|FR_trans|GE_trans', 'DF_trans|DU_trans|FD_trans', 'AR_trans|DU_trans|FR_trans', 'AY_trans|BQ_trans|DN_trans', 'DU_trans|EU_trans|FD_trans', 'EB_trans|EL_trans|GL_trans', 'EL_trans|EU_trans', 'EL_trans|GL_trans', 'CW_trans|GL_trans', 'AY_trans|GE_trans', 'DU_trans|FD_trans', 'CW_trans|EL_trans', 'AR_trans|FR_trans', 'DU_trans|GL_trans', 'AY_trans|BN_trans', 'EL_trans|GE_trans', 'EU_trans|FR_trans', 'CW_trans|GE_trans', 'GE_trans|GL_trans', 'DU_trans|EH_trans', 'BN_trans|BZ_trans', 'AY_trans|EL_trans', 'AM_trans|AY_trans', 'AY_trans|EU_trans', 'EU_trans|GE_trans', 'FR_trans|GE_trans', 'AY_trans|DU_trans', 'AY_trans|BQ_trans', 'BZ_trans|GE_trans', 'AY_trans|EG_trans', 'FD_trans|FL_trans', 'FL_trans|FR_trans', 'EL_trans|FR_trans', 'AH_trans|GE_trans', 'AY_trans|FR_trans', 'CW_trans|FR_trans', 'AB_trans|DU_trans', 'AY_trans|EB_trans', 'DU_trans|EU_trans', 'DU_trans|EL_trans', 'AY_trans|GL_trans', 'AH_trans|EH_trans', 'DU_trans|FI_trans', 'DU_trans|FR_trans', 'EU_trans|GL_trans', 'DU_trans|GE_trans', 'BN_trans|FR_trans', 'DF_trans|FR_trans', 'AY_trans|CL_trans', 'AH_trans|AY_trans', 'EB_trans|EL_trans', 'EB_trans|FR_trans', 'EU_trans|FS_trans', 'AY_trans|FL_trans', 'AY_trans|BR_trans', 'AH_trans|EU_trans', 'BZ_trans|EU_trans', 'CF_trans|FR_trans', 'CR_trans|DU_trans', 'AY_trans|CC_trans', 'CD_trans|FR_trans', 'AY_trans|CD_trans', 'AB_trans|FR_trans', 'CL_trans|FR_trans', 'BZ_trans|EB_trans', 'AR_trans|AY_trans', 'DE_trans|GL_trans', 'AB_trans|AY_trans', 'AY_trans|BP_trans', 'AR_trans|EU_trans', 'AY_trans|DY_trans', 'AY_trans|FS_trans', 'AY_trans|BZ_trans', 'FR_trans|GL_trans', 'CC_trans|DU_trans', 'AY_trans|GF_trans', 'DU_trans|FS_trans', 'DF_trans|DU_trans', 'AM_trans|CD_trans', 'DE_trans|DU_trans', 'CL_trans|GE_trans', 'AY_trans|FD_trans', 'FS_trans|GE_trans', 'CW_trans|EU_trans', 'AY_trans|CW_trans', 'BC_trans|FR_trans', 'EB_trans|GE_trans', 'BQ_trans|FR_trans', 'CR_trans|GE_trans', 'EH_trans|FR_trans', 'AY_trans|DN_trans', 'AR_trans|CD_trans', 'FL_trans|GL_trans', 'EU_trans|FL_trans', 'EE_trans|FR_trans', 'EH_trans|FL_trans', 'AH_trans|FD_trans', 'AY_trans|EH_trans', 'AR_trans|DU_trans', 'FR_trans|FS_trans', 'DL_trans|FR_trans', 'AM_trans|GE_trans', 'DL_trans|GE_trans', 'DA_trans|DU_trans', 'BC_trans|DU_trans', 'BP_trans|FR_trans', 'DU_trans|FL_trans', 'CL_trans|FD_trans', 'DF_trans|FD_trans', 'AR_trans|EL_trans', 'DU_trans|EB_trans', 'AH_trans|FR_trans', 'AY_trans|AZ_trans', 'AB_trans|EH_trans', 'AY_trans|DA_trans', 'AB_trans|FD_trans', 'DY_trans|FR_trans', 'AR_trans|GE_trans', 'AF_trans|AY_trans', 'AR_trans|BQ_trans', 'CC_trans|FR_trans', 'CC_trans|GE_trans', 'AY_trans|CF_trans', 'CL_trans|DU_trans', 'AY_trans|BC_trans', 'BZ_trans|FL_trans', 'AH_trans|FL_trans', 'BZ_trans|CL_trans', 'AB_trans|AH_trans', 'DU_trans|GH_trans', 'BN_trans|DU_trans', 'AM_trans|DU_trans', 'BN_trans|EL_trans', 'DE_trans|EU_trans', 'BR_trans|GE_trans', 'AH_trans|BN_trans', 'BR_trans|DF_trans', 'BN_trans|EB_trans', 'CD_trans|GL_trans', 'DF_trans|FI_trans', 'EH_trans|GL_trans', 'FE_trans|FR_trans', 'CL_trans|CW_trans', 'AM_trans|EB_trans', 'BZ_trans|FR_trans', 'CW_trans|EB_trans', 'AR_trans|CL_trans', 'CL_trans|EU_trans', 'AY_trans|DL_trans', 'AB_trans|FL_trans', 'AF_trans|FR_trans', 'AR_trans|AZ_trans', 'CD_trans|DN_trans', 'CD_trans|DU_trans', 'AH_trans|DU_trans', 'AY_trans|FC_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : .5,
    ## Model details
    "xgboost_boosting_rounds" : 230,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.02925615866566594 , 
        'max_depth': 3,
        'colsample_bytree': 0.2618548438418499 ,
        'subsample': 0.3886860892096441,
        'lambda': 1 ,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 3.8503250422082975
    },
    "final_features" : ['AB_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'BC_trans', 'BP_trans', 'BQ_trans', 'CD_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'FD_trans', 'FI_trans', 'FL_trans', 'GH_trans', 'AY * EL * GL_trans', 'DU * EL * GE_trans', 'AR * CL * FR_trans', 'EU * FR * GE_trans', 'AY * BQ * DN_trans', 'DU * FD_trans', 'AY * BN_trans', 'AY * BQ_trans', 'BZ * GE_trans', 'EL * FR_trans', 'AH * EU_trans', 'AB * AY_trans', 'BC * FR_trans', 'CR * GE_trans', 'AR * CD_trans', 'AR * DU_trans', 'DU * FL_trans', 'DU * EB_trans', 'AB * FD_trans', 'DU * GH_trans', 'EH * GL_trans', 'BZ * FR_trans']
}
test_neut_38 = {
    # # best from V38
    "interactions" : False,
    "custom_interactions_ind" : True,
    "custom_interactions": ['EU_trans|FD_trans|FL_trans', 'AR_trans|FR_trans', 'AH_trans|AY_trans', 'AY_trans|EL_trans', 'AY_trans|EU_trans', 'DU_trans|FD_trans', 'DU_trans|EH_trans', 'AY_trans|DU_trans', 'FD_trans|FL_trans', 'AR_trans|AY_trans', 'DU_trans|FR_trans', 'AH_trans|FR_trans', 'EL_trans|GE_trans', 'AY_trans|FD_trans', 'CR_trans|DU_trans', 'DE_trans|DU_trans', 'EL_trans|EU_trans', 'AY_trans|EH_trans', 'EB_trans|EL_trans', 'AY_trans|GE_trans', 'AY_trans|CD_trans', 'DU_trans|FI_trans', 'AY_trans|DF_trans', 'BZ_trans|FD_trans', 'AY_trans|EB_trans', 'AB_trans|DU_trans', 'FR_trans|GE_trans', 'DU_trans|GL_trans', 'AH_trans|FL_trans', 'DA_trans|DU_trans', 'AY_trans|FR_trans', 'AB_trans|AY_trans', 'EU_trans|GE_trans', 'AY_trans|BQ_trans', 'BN_trans|BZ_trans', 'DF_trans|FR_trans', 'BZ_trans|CR_trans', 'AY_trans|FI_trans', 'DU_trans|EE_trans', 'BR_trans|DU_trans', 'BZ_trans|EU_trans', 'BQ_trans|BZ_trans', 'AR_trans|DU_trans', 'DF_trans|DU_trans', 'AF_trans|BZ_trans', 'AH_trans|BZ_trans', 'AH_trans|EH_trans', 'EH_trans|FL_trans', 'AY_trans|BZ_trans', 'DU_trans|EL_trans', 'BQ_trans|GE_trans', 'BN_trans|FR_trans', 'CL_trans|DU_trans', 'GE_trans|GL_trans', 'BQ_trans|DY_trans', 'DU_trans|FL_trans', 'AR_trans|DA_trans', 'AX_trans|DU_trans', 'AY_trans|CC_trans', 'CL_trans|GE_trans', 'AY_trans|DY_trans', 'AR_trans|FD_trans', 'AY_trans|CW_trans', 'AH_trans|DU_trans', 'AB_trans|FR_trans', 'EB_trans|FR_trans', 'AF_trans|AR_trans', 'CD_trans|FR_trans', 'AY_trans|BP_trans', 'AR_trans|EU_trans', 'BZ_trans|FS_trans', 'DF_trans|EH_trans', 'AY_trans|DE_trans', 'BQ_trans|CR_trans', 'BQ_trans|FI_trans', 'AY_trans|GH_trans', 'AY_trans|DA_trans', 'BZ_trans|GE_trans', 'CW_trans|GE_trans', 'AR_trans|BP_trans', 'AH_trans|BQ_trans', 'AY_trans|FL_trans', 'BZ_trans|FR_trans', 'EL_trans|GL_trans', 'BQ_trans|FR_trans', 'CW_trans|FR_trans', 'BN_trans|BQ_trans', 'AM_trans|AY_trans', 'AR_trans|CD_trans', 'DU_trans|EG_trans', 'AM_trans|GE_trans', 'DA_trans|GE_trans', 'AR_trans|FI_trans', 'AF_trans|AH_trans', 'BZ_trans|FL_trans', 'AR_trans|BZ_trans', 'AY_trans|CS_trans', 'EU_trans|FR_trans', 'BN_trans|EL_trans', 'AB_trans|GE_trans', 'CD_trans|DF_trans', 'AY_trans|FS_trans', 'CC_trans|DF_trans', 'AR_trans|DI_trans', 'DU_trans|EB_trans', 'AB_trans|AR_trans', 'DU_trans|FS_trans', 'EH_trans|FD_trans', 'FL_trans|FR_trans', 'FD_trans|FI_trans', 'DF_trans|FD_trans', 'CC_trans|DU_trans', 'AB_trans|AH_trans', 'DF_trans|GE_trans', 'FD_trans|GE_trans', 'CC_trans|FR_trans', 'BZ_trans|DU_trans', 'AF_trans|FR_trans', 'BN_trans|EB_trans', 'AM_trans|CD_trans', 'AH_trans|EU_trans', 'AH_trans|FD_trans', 'AB_trans|FL_trans', 'DA_trans|FL_trans', 'AH_trans|GE_trans', 'AR_trans|EH_trans', 'EB_trans|GE_trans', 'DU_trans|EU_trans', 'AH_trans|AR_trans', 'DU_trans|GH_trans', 'DH_trans|GE_trans', 'AR_trans|FL_trans', 'AY_trans|CL_trans', 'AY_trans|GI_trans', 'BZ_trans|GL_trans', 'AB_trans|FD_trans', 'AR_trans|CW_trans', 'BP_trans|FR_trans', 'AR_trans|BQ_trans', 'AY_trans|BN_trans', 'BZ_trans|CW_trans', 'BZ_trans|CF_trans', 'BN_trans|GE_trans', 'BP_trans|DF_trans', 'AR_trans|BN_trans', 'DF_trans|EU_trans', 'BQ_trans|EL_trans', 'AR_trans|CB_trans', 'AR_trans|FC_trans', 'CD_trans|DU_trans'],
    "neutralize" : True,
    "feature_transformation" : True,
    "GMM_features" : False,
    "removed" : False,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : .25,
    ## Model details
    "xgboost_boosting_rounds" : 178,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.04429378137181147 , 
        'max_depth': 3,
        'colsample_bytree': 0.3608750043707109 ,
        'subsample': 0.6645539102524314,
        'lambda': 4 ,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.7161287857839795
    },
    "final_features" : ['AH_trans', 'DL_trans', 'DN_trans', 'EB_trans', 'EE_trans', 'FI_trans', 'FL_trans', 'GH_trans', 'AY * FD_trans', 'DE * DU_trans', 'BZ * FD_trans', 'AB * DU_trans', 'DU * GL_trans', 'DU * EE_trans', 'BQ * BZ_trans', 'DF * DU_trans', 'BQ * GE_trans', 'CL * DU_trans', 'BQ * DY_trans', 'DU * FL_trans', 'AX * DU_trans', 'CL * GE_trans', 'BZ * FS_trans', 'AH * BQ_trans', 'BN * BQ_trans', 'AM * AY_trans', 'BZ * FL_trans', 'AY * CS_trans', 'CD * DF_trans', 'CC * DF_trans', 'AR * DI_trans', 'EH * FD_trans', 'DF * FD_trans', 'AB * AH_trans', 'DF * GE_trans', 'DU * GH_trans', 'BN * GE_trans']
}



# tab_test = {
#     # # best from V31
#     "interactions" : False,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : False,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :1.0,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AF', 'AH', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CF', 'CH', 'CL', 
#                       'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DH', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',"EJ",
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FR', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] #+ ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']
#     # with feature transformation and interactions and no EJ best score is:     0.36725960046833145

# }

# tab_neut_2_test_1 = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :True,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AH', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CF', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DH', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FR', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_a = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AH', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DH', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FR', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_b = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AH', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DH', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_c = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AH', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_d = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                       'BD', 'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_e = {
#     # # best from V31
#     "interactions" : True,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : ['AB', 'AF', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                        'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL'] + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']

# }
# tab_neut_2_test_removal_h = {
#     "interactions" : False,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.4,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : list(set(['AB', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                        'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL']) - set(["GF","BR","FC","BZ","AX","AR","CL","DY","FI"]))
# }
# tab_neut_2_test_removal_i = {
#     # Just h with lower proportion
#     "interactions" : False,
#     "custom_interactions_ind" : False,
#     "custom_interactions": [],
#     "neutralize" : True,
#     "feature_transformation" : False,
#     "GMM_features" : False,
#     "removed" :False,
#     "quantiles" : 100,
#     ## Neutralizer details
#     "proportion" :.25,
#     ## Model details
#     "ensemble" : 32,
#     "final_features" : list(set(['AB', 'AM', 'AR', 'AX', 'AY', 'AZ', 'BC', 
#                        'BN', 'BP', 'BQ', 'BR', 'BZ',
#                       'CB', 'CC', 'CD', 'CH', 'CL', 
#                       'CR', 'CS', 'CU', 'CW',
#                       'DA', 'DE', 'DF', 'DI', 'DL', 'DN', 'DU', 'DV', 'DY',
#                       'EB', 'EE', 'EG', 'EH', 'EL', 'EP', 'EU',
#                       'FC', 'FD', 'FE', 'FI', 'FL', 'FS',
#                       'GB', 'GE', 'GF', 'GH', 'GI', 'GL']) - set(["GF","BR","FC","BZ","AX","AR","CL","DY","FI"]))
# }


# LGB 
class LGBModelRunner():
    def __init__(self,cfg: object):
        self.cfg = cfg
        seed_everything(cfg.seed)
    ## main functions 
    def main(self):
        self.load_in_data()
        self.run_fe(self.cfg.interactions,self.cfg.custom_interactions_ind,self.cfg.neutralize,self.cfg.feature_transformation)
        self.build_cv()
        self.run_cv(self.cfg.GMM_features)
    
    def load_in_data(self):
        self.train_df = preprocess_df(pd.read_csv(self.cfg.DATA_PATH / 'train.csv'))

        self.train_df['bias'] = 1
        

        self.greeks_df = pd.read_csv(self.cfg.DATA_PATH / 'greeks.csv')

        
        self.features = define_features()
    def run_fe(self,interactions=True,custom_interactions=False,neutralize=True,feature_transformation=True):
        if interactions:
            self.train_df, new_feats = self.get_interactions(self.train_df)
            self.features += new_feats
        if custom_interactions and not neutralize:
            for feat in self.cfg.custom_interactions:
                if feat.count("|") == 1:
                    temp_feats = feat.split("|")
                    new_feat = f"{temp_feats[0]} * {temp_feats[1]}"
                    self.train_df[new_feat] = self.train_df[temp_feats[0]] * self.train_df[temp_feats[1]]
                if feat.count("|") == 2:
                    temp_feats = feat.split("|")
                    new_feat = f"{temp_feats[0]} * {temp_feats[1]} * {temp_feats[2]}" 
                    self.train_df[new_feat] = self.train_df[temp_feats[0]] * self.train_df[temp_feats[1]] * self.train_df[temp_feats[2]]
                self.features.append(new_feat)
            skewed_vars = self.features
            replace_vars = {}
            quantile_transformers = {}
            for skewed_var in skewed_vars:
                qt = QuantileTransformer(n_quantiles=self.cfg.quantiles,random_state=self.cfg.seed, output_distribution='normal')
                self.train_df[skewed_var + "_trans"] = qt.fit_transform(self.train_df[skewed_var].to_numpy().reshape(-1,1))
                replace_vars[skewed_var] = skewed_var + "_trans"
                quantile_transformers[skewed_var] = qt
                
            self.quantile_transformers = quantile_transformers
            self.features = [replace_vars.get(feature,feature)  for feature in self.features]
            
        if feature_transformation and not neutralize and not custom_interactions:
            if self.cfg.all_feature_transformation:
                skewed_vars = self.features
            else:
                skewed_vars = self.train_df[self.features].skew().sort_values(ascending=False)[self.train_df.skew().sort_values(ascending=False) > 1].index.tolist()
            replace_vars = {}
            quantile_transformers = {}
            for skewed_var in skewed_vars:
                qt = QuantileTransformer(n_quantiles=self.cfg.quantiles,random_state=self.cfg.seed, output_distribution='normal')
                self.train_df[skewed_var + "_trans"] = qt.fit_transform(self.train_df[skewed_var].to_numpy().reshape(-1,1))
                replace_vars[skewed_var] = skewed_var + "_trans"
                quantile_transformers[skewed_var] = qt
                
            self.quantile_transformers = quantile_transformers
            self.features = [replace_vars.get(feature,feature)  for feature in self.features]
            self.features = variance_threshold_selector(self.train_df[self.features]).columns.tolist()
            
        if set(self.cfg.final_features) != self.features and not neutralize:
            for feat in list(set(self.cfg.final_features) - set(self.features)):
                if feat.count("*") == 1:
                    temp_feats = feat.split(" * ")
                    self.train_df[feat] = self.train_df[temp_feats[0]] * self.train_df[temp_feats[1]]
                if feat.count("*") == 2:
                    temp_feats = feat.split(" * ")
                    self.train_df[feat] = self.train_df[temp_feats[0]] * self.train_df[temp_feats[1]] * self.train_df[temp_feats[2]]
            
            self.features = self.cfg.final_features
#             skewed_vars = self.train_df[self.features].skew().sort_values(ascending=False)[self.train_df.skew().sort_values(ascending=False) > 1].index.tolist()
#             replace_vars = {}
#             quantile_transformers = {}
#             for skewed_var in skewed_vars:
#                 qt = QuantileTransformer(n_quantiles=self.cfg.quantiles,random_state=self.cfg.seed, output_distribution='normal')
#                 self.train_df[skewed_var + "_2_trans"] = qt.fit_transform(self.train_df[skewed_var].to_numpy().reshape(-1,1))
#                 replace_vars[skewed_var] = skewed_var + "_2_trans"
#                 quantile_transformers[skewed_var] = qt
#             self.features = [replace_vars.get(feature,feature)  for feature in self.features]

    def build_cv(self):
        self.train_df = self.greeks_df.merge(self.train_df,on='Id')
        
            
        positives = self.train_df[self.train_df['Class'] == 1]
        negatives = self.train_df[self.train_df['Class'] == 0]

        positives_splits = np.array_split(positives, self.cfg.n_folds)
        negatives_splits = np.array_split(negatives, self.cfg.n_folds)

        data_holder_split_class = DataHolder( [pd.concat([positives_splits[i],negatives_splits[i]]) for i in range(self.cfg.n_folds)]
                                       )

        data_holder_split_alpha = self.split_on_column("Alpha")
        data_holder_split_gamma = self.split_on_column("Gamma")
        
        
        self.cv_holders = [data_holder_split_class,data_holder_split_alpha,data_holder_split_gamma]
        
        
        
    def run_cv(self,GMM_features=False):
        cv_strat_scores = []
        feat_importances = []
        models = []
        fold_log_losses = []
        outer_y_preds = []
        for cv_strat in tqdm(self.cv_holders):
            fold_scores = []
            temp_feat_importances = []
            temp_models = []
            temp_fold_log_losses = []
            inner_y_preds = []
            for idx,fold_number in enumerate(range(self.cfg.n_folds)):
                test_idx = idx + 1 
                if idx == self.cfg.n_folds -1:
                    test_idx = 0
                temp_data = cv_strat.folds.copy()
                test = temp_data[test_idx].copy()
                valid = temp_data[idx].copy()
                if test_idx < idx:
                    del temp_data[idx]
                    del temp_data[test_idx]
                else:
                    del temp_data[test_idx]
                    del temp_data[idx]
                
                train = pd.concat(temp_data)
                if self.cfg.neutralize:
                    temp_train = pd.concat([train,valid])
                #####################################################################################################
                    proportion = self.cfg.proportion
                    temp_train['bias'] = 1.0
                    if self.cfg.interactions:
                        current_features = define_features() + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']
                    else:
                        current_features = define_features()

                    temp_train = temp_train.fillna(temp_train.median())
                    neutralizer = self.build_neutralizer(temp_train, current_features, proportion)
                    temp_train[current_features] = self.neutralize_array(temp_train[current_features+['bias']].values, neutralizer)

                    if self.cfg.custom_interactions_ind:
                        temp_train,current_features = self.make_custom_interactions(temp_train,current_features)
                        skewed_vars = current_features
                    elif self.cfg.all_feature_transformation:
                        skewed_vars = define_features()
                    else:
                        skewed_vars = ['FR', 'AB + FR_', 'AY', 'FD', 'BZ', 'FS', 'BR', 'EH', 'BC', 'BC + DU_', 'EU', 'DU', 'DF + DU_', 'DV', 'DF', 'AR', 'CL', 'FC', 'BD', 'AH', 'EG', 'CF', 'EP', 'EB', 'CB', 'AB * GL_', 'CS', 'FL', 'BP', 'CH', 'AB', 'AM', 'CC', 'BQ + FE_', 'FE', 'GE', 'AX', 'DI', 'AB * EL_', 'CD', 'AF', 'GB', 'GF', 'CR', 'CC + CR_', 'BQ * DN_', 'EE', 'DE', 'DY', 'DA', 'FI', 'BQ + EB_', 'AB + BQ_', 'BQ', 'AB + DL_', 'DL', 'GI', 'CR * GL_']#temp_train[current_features].skew().sort_values(ascending=False)[temp_train.skew().sort_values(ascending=False) > 1].index.tolist()
                    replace_vars = {}
                    quantile_transformers = {}
                    for skewed_var in skewed_vars:
                        qt = QuantileTransformer(n_quantiles=self.cfg.quantiles,random_state=self.cfg.seed, output_distribution='normal')
                        temp_train[skewed_var + "_trans"] = qt.fit_transform(temp_train[skewed_var].to_numpy().reshape(-1,1))
                        replace_vars[skewed_var] = skewed_var + "_trans"
                        quantile_transformers[skewed_var] = qt



                    train = temp_train.loc[train.index]
                    valid = temp_train.loc[valid.index]
            ##################        
                    if self.cfg.interactions:
                        current_features = define_features() + ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_','BC + DU_','BQ + EB_','AB * EL_','CC + CR_']
                    else:
                        current_features = define_features()
                        
                    test = test.fillna(temp_train.median())
                    rows = []
                    for idx,row in test.iterrows():
                        rows.append(self.neutralize_array(np.asarray(row[current_features].tolist() + [1.0]),neutralizer))

                    test[current_features] = rows

                    if self.cfg.custom_interactions_ind:
                        test, current_features = self.make_custom_interactions(test,current_features)
                        
                    for skewed_var in quantile_transformers.keys():
                        test[skewed_var + "_trans"] = quantile_transformers[skewed_var].transform(test[skewed_var].to_numpy().reshape(-1,1))


                    current_features = None#[replace_vars.get(feature,feature)  for feature in current_features]
                    self.features = None#current_features
            #####################################################################################################      

                
                if self.cfg.removed:
                    for ele in self.cfg.removed_elements:
                        if ele in train.index:
                            train = train.drop([ele])
                        elif ele in valid.index:
                            valid = valid.drop([ele])
                            
                x_train = train[self.cfg.final_features]
                y_train = train['Class']
                x_valid = valid[self.cfg.final_features]
                y_valid = valid['Class']

                x_test = test[self.cfg.final_features]
                y_test = test['Class']
                
                

                model = lightgbm_training(self.cfg.lgb_params,x_train, y_train, x_valid, y_valid, self.cfg.final_features, self.cfg.lgboost_boosting_rounds)

                y_pred =  model.predict(x_test)
    


                score,log_loss_0,log_loss_1 = balanced_log_loss(y_test, y_pred,return_all=True)


                fold_scores.append(score)
                temp_fold_log_losses.append([log_loss_0,log_loss_1])
#                 temp_feat_importances.append(model.get_score(importance_type='gain'))
                temp_models.append(model)
                inner_y_preds.append({x_test.index[i] : y_pred[i] for i in range(len(x_test))})
            cv_strat_scores.append(fold_scores)
#             feat_importances.append(temp_feat_importances)
            models.append(temp_models)
            fold_log_losses.append(temp_fold_log_losses)
            outer_y_preds.append(inner_y_preds)
        
        self.cv_strat_scores = cv_strat_scores
        self.feat_importances = None
        self.models = models
        self.fold_log_losses = fold_log_losses
        self.outer_y_preds = outer_y_preds
        
            
    
    
    def get_cv_results(self):
        frame_scores = pd.DataFrame(self.cv_strat_scores,columns=[f"fold_{i}" for i in range(self.cfg.n_folds)],index=['Class','Alpha','Gamma'])
        log_loss_mean_details = pd.DataFrame(np.mean(self.fold_log_losses,axis=1),columns=["mean_log_loss0","mean_log_loss1" ],index=['Class','Alpha','Gamma'])
        log_loss_std_details = pd.DataFrame(np.std(self.fold_log_losses,axis=1),columns=["std_log_loss0","std_log_loss1" ],index=['Class','Alpha','Gamma'])
        display(frame_scores)
        display(frame_scores.agg([np.mean,np.std],axis=1).join(log_loss_mean_details).join(log_loss_std_details)[['mean','std','mean_log_loss0','std_log_loss0','mean_log_loss1','std_log_loss1']])
        print(frame_scores.mean().mean())
#         means = pd.DataFrame([pd.DataFrame(feat_importance).mean() for feat_importance in self.feat_importances]).mean()
#         stds = pd.DataFrame([pd.DataFrame(feat_importance).std() for feat_importance in self.feat_importances]).mean()
#         total_included = pd.DataFrame([pd.DataFrame(feat_importance).count() for feat_importance in self.feat_importances]).sum()
#         self.feature_summaries = pd.DataFrame([means,stds,total_included],index=["Mean","Std","total"]).T.sort_values(["total","Mean","Std"],ascending=False).reset_index()
    
    def get_oof_preds(self,cv=0):
        from collections import ChainMap
        temp_preds = pd.DataFrame(dict(ChainMap(*self.outer_y_preds[cv])),index=['Predictions']).T.sort_index()
        temp_preds['GT'] = self.train_df['Class']
        temp_preds.reset_index(inplace=True,drop=True)
        return temp_preds
    ## cv helper functions 
        
    def split_on_column(self,column):
        train_group = [self.train_df[self.train_df['Id'].isin(self.greeks_df[self.greeks_df[column] == letter]['Id'])] for letter in self.greeks_df[column].unique()]

        grouped_splits = [np.array_split(grouped,self.cfg.n_folds) for grouped in train_group]

        data_holder_split = DataHolder( [pd.concat([split[i] for split in grouped_splits]) for i in range(self.cfg.n_folds)]
                                       )
        return data_holder_split

    

            
            
    ## FE helper functions
        
    def get_interactions(self,df):
        df['AB * GL_'] = df['AB'] * df['GL'] 
        df['DF + DU_'] = df['DF'] + df['DU'] 
        df['BQ + FE_'] = df['BQ'] + df['FE'] 
        df['AB + FR_'] = df['AB'] + df['FR'] 
        df['AB + DL_'] = df['AB'] + df['DL'] 
        df['AB + BQ_'] = df['AB'] + df['BQ'] 
        df['CR * GL_'] = df['CR'] * df['GL'] 
        df['BQ * DN_'] = df['BQ'] * df['DN'] 
        df['BC + DU_'] = df['BC'] + df['DU'] 
        df['BQ + EB_'] = df['BQ'] + df['EB'] 
        df['AB * EL_'] = df['AB'] * df['EL'] 
        df['CC + CR_'] = df['CC'] + df['CR'] 

        return df, ['AB * GL_','DF + DU_','BQ + FE_','AB + FR_','AB + DL_','AB + BQ_','CR * GL_','BQ * DN_',
                    'BC + DU_','BQ + EB_','AB * EL_','CC + CR_']
    
    
    def build_neutralizer(self,df,features,proportion):
        """
                            
                    
        Builds neutralzied features, then trains a linear model to predict neutralized features from original
        features and return the coeffs of that model.
        """
        self.train_df['bias'] = 1.0
        neutralizer = {}
        neutralized_features = np.zeros((df.shape[0], len(features)))
        target = df[['Class', 'bias']].values
        for i, f in enumerate(features):
            # obtain corrected feature
            feature = df[f].values.reshape(-1, 1)
            coeffs = np.linalg.lstsq(target, feature)[0]
            neutralized_features[:, i] = (feature - (proportion * target.dot(coeffs))).squeeze()

        # train model to predict corrected features
        neutralizer = np.linalg.lstsq(df[features+['bias']].values, neutralized_features)[0]
        
        return neutralizer

    def neutralize_array(self,array, neutralizer):
        neutralized_array = array.dot(neutralizer)
        return neutralized_array

    def make_custom_interactions(self,df,features):
        normal_interactions = [x.replace("_trans","") for x in self.cfg.custom_interactions]
        new_features = []
        for feat in normal_interactions:
            if feat.count("|") == 1:
                temp_feats = feat.split("|")
                new_feat = f"{temp_feats[0]} * {temp_feats[1]}"
                df[new_feat] = df[temp_feats[0]] * df[temp_feats[1]]
            if feat.count("|") == 2:
                temp_feats = feat.split("|")
                new_feat = f"{temp_feats[0]} * {temp_feats[1]} * {temp_feats[2]}" 
                df[new_feat] = df[temp_feats[0]] * df[temp_feats[1]] * df[temp_feats[2]]
            new_features.append(new_feat)
    
        return df, features + new_features
    
default_LGB = {
    "interactions" : False,
    'custom_interactions_ind' : False,
    "custom_interactions": [],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : False,
    "removed_elements": [193],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 447,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.025441154506772434, 
        'num_leaves': 6,
        'feature_fraction': 0.34038226547168243,
        'bagging_fraction': 0.42453347568047684,
        'min_data_in_leaf': 23,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : [x + "_trans" for x in define_features()]
}
lgb_v16_early = {
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 446,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.018793232352954117, 
        'num_leaves': 6,
        'feature_fraction': 0.22459770971290233,
        'bagging_fraction': 0.5780969977773874,
        'min_data_in_leaf': 15,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AZ_trans', 'BP_trans', 'CB_trans', 'DA_trans', 'DI_trans', 'EB_trans', 'EE_trans', 'FD_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'CR * AM_trans', 'BC * AM_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'EP * DU_trans', 'EP * FI_trans', 'AF * FI_trans', 'BQ * DY_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'EE * FD * GL_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}

lgb_v6_a = {
    # Trial 179
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 483,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.015913740962077295, 
        'num_leaves': 7,
        'feature_fraction': 0.36405101847212407,
        'bagging_fraction': 0.5966403143213,
        'min_data_in_leaf': 16,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AZ_trans', 'BP_trans', 'CB_trans', 'DA_trans', 'DI_trans', 'EB_trans', 'EE_trans', 'FD_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'CR * AM_trans', 'BC * AM_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'EP * DU_trans', 'EP * FI_trans', 'AF * FI_trans', 'BQ * DY_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'EE * FD * GL_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}
lgb_v6_b = {
    # Trial 344
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 426,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.01699016793697315, 
        'num_leaves': 7,
        'feature_fraction': 0.39687477261154486,
        'bagging_fraction': 0.4883720383454509,
        'min_data_in_leaf': 12,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AZ_trans', 'BP_trans', 'CB_trans', 'DA_trans', 'DI_trans', 'EB_trans', 'EE_trans', 'FD_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'CR * AM_trans', 'BC * AM_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'EP * DU_trans', 'EP * FI_trans', 'AF * FI_trans', 'BQ * DY_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'EE * FD * GL_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}

lgb_v5_a = {
    # Trial 296
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 323,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.019399673118913448, 
        'num_leaves': 8,
        'feature_fraction': 0.3660286985523148,
        'bagging_fraction': 0.6078541712716982,
        'min_data_in_leaf': 13,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AF_trans', 'AR_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CB_trans', 'CF_trans', 'DA_trans', 'DI_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'FD_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'DU * EP_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'CR * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'AF * CS_trans', 'CR * AM_trans', 'BC * AM_trans', 'CR * FD_trans', 'BQ * GF_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'BQ * CR_trans', 'EP * DU_trans', 'EP * FI_trans', 'AY * FS_trans', 'AF * FI_trans', 'DN * DI_trans', 'BQ * DY_trans', 'AF * CR_trans', 'EU * FD_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'DN * EL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'CR * EB_trans', 'BQ * GL * EU_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * AF * AB_trans', 'AF * BQ * AB_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'DE * DU * DE_trans', 'EE * FD * GL_trans', 'AF * CS * CS_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CC * EL * FL_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}


lgb_v5_b = {
    # Trial 301
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 444,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.013954534426329296, 
        'num_leaves': 8,
        'feature_fraction': 0.39419193493336385,
        'bagging_fraction': 0.3610979641042329,
        'min_data_in_leaf': 12,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AF_trans', 'AR_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CB_trans', 'CF_trans', 'DA_trans', 'DI_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'FD_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'DU * EP_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'CR * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'AF * CS_trans', 'CR * AM_trans', 'BC * AM_trans', 'CR * FD_trans', 'BQ * GF_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'BQ * CR_trans', 'EP * DU_trans', 'EP * FI_trans', 'AY * FS_trans', 'AF * FI_trans', 'DN * DI_trans', 'BQ * DY_trans', 'AF * CR_trans', 'EU * FD_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'DN * EL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'CR * EB_trans', 'BQ * GL * EU_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * AF * AB_trans', 'AF * BQ * AB_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'DE * DU * DE_trans', 'EE * FD * GL_trans', 'AF * CS * CS_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CC * EL * FL_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}
lgb_v5_c = {
    # Trial 301
    "interactions" : False,
    'custom_interactions_ind' : True,
    "custom_interactions": ['GL|CR', 'AB|DA', 'BQ|GL', 'BQ|AB', 'DA|EB', 'BQ|CD', 'BQ|AF', 'AF|BQ', 'BQ|DL', 'CD|FI', 'CR|GL', 'DU|EP', 'DU|FC', 'DL|FL', 'AB|CR', 'DL|DN', 'DU|BQ', 'CR|BQ', 'EE|GL', 'BQ|DU', 'BN|CU', 'DE|DU', 'AF|CC', 'AF|DL', 'CD|DY', 'FI|EB', 'EE|FD', 'DA|DU', 'EE|DU', 'CR|DI', 'AF|CS', 'DE|EB', 'DI|BC', 'DU|DE', 'AF|EL', 'CC|EL', 'CR|AM', 'BC|AM', 'CR|FD', 'BQ|GF', 'GL|DE', 'DI|CD', 'BQ|DA', 'DE|AY', 'AB|BQ', 'DL|BN', 'CC|EG', 'BN|CL', 'CC|DI', 'DA|AM', 'DA|FL', 'CF|DE', 'DL|AB', 'BQ|EL', 'BQ|FL', 'CD|DU', 'BQ|CR', 'DA|DN', 'AM|EH', 'CC|EU', 'FL|AH', 'EP|DU', 'EB|FE', 'CF|BQ', 'EP|FI', 'DY|EB', 'GL|GL', 'DU|GB', 'GE|DA', 'AY|FS', 'AF|FI', 'CS|DY', 'DN|DI', 'FI|BR', 'BQ|DY', 'AF|CR', 'EL|DE', 'EU|FD', 'BQ|DN', 'BC|CB', 'BC|FS', 'DN|BR', 'DN|AY', 'CD|FL', 'FI|DY', 'CU|DU', 'DL|CB', 'DN|EL', 'GL|AF', 'CD|CR', 'EP|BD', 'CR|BP', 'CC|GL', 'DU|CU', 'BQ|FI', 'CC|CS', 'FL|CU', 'CR|CH', 'DL|FE', 'CR|EB', 'GL|CR|CD', 'AB|DA|AM', 'BQ|GL|EU', 'BQ|AB|EH', 'BQ|AB|AF', 'DA|EB|FE', 'DA|EB|BP', 'BQ|CD|FL', 'BQ|GL|AB', 'BQ|AF|EB', 'BQ|AF|AB', 'AF|BQ|AB', 'BQ|DL|AX', 'CD|FI|CD', 'CR|GL|GI', 'CR|GL|AB', 'AB|CR|AM', 'CR|BQ|FL', 'CR|BQ|DY', 'EE|GL|DA', 'BQ|DU|BC', 'BN|CU|GI', 'DE|DU|AF', 'DE|DU|DE', 'AF|CC|CL', 'AF|DL|CC', 'CD|DY|DN', 'AF|CC|BP', 'FI|EB|CU', 'EE|FD|GL', 'DA|DU|CH', 'EE|DU|BQ', 'CR|DI|GL', 'AF|CS|CS', 'AF|CS|GH', 'AF|CC|BC', 'DI|BC|EH', 'DI|BC|DL', 'AF|EL|EE', 'CC|EL|FL', 'CR|AM|GL', 'CR|FD|CD', 'CR|FD|GL', 'EE|DU|DL', 'BQ|GF|FI', 'GL|DE|DU', 'DI|CD|GL', 'BQ|DA|DU', 'DE|AY|DU', 'AB|BQ|CR'],
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "GMM_features" : False,
    "removed" : True,
    "removed_elements": [509,313],
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "lgboost_boosting_rounds" : 493,
    "lgb_params" :{
        'objective': 'binary',
        'eval_metric': 'binary_logloss',
        'boosting': "Goss",
        'learning_rate': 0.016466321198354505, 
        'num_leaves': 5,
        'feature_fraction': 0.42490541863342113,
        'bagging_fraction': 0.4898900964258783,
        'min_data_in_leaf': 15,
        'seed': mainCFG.seed,
        'is_unbalance':True, 
        
    },    
    "final_features" : ['AB_trans', 'AF_trans', 'AR_trans', 'AZ_trans', 'BD_trans', 'BP_trans', 'BQ_trans', 'BR_trans', 'CB_trans', 'CF_trans', 'DA_trans', 'DI_trans', 'DY_trans', 'EB_trans', 'EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'FD_trans', 'FL_trans', 'FS_trans', 'GE_trans', 'GF_trans', 'GH_trans', 'GL * CR_trans', 'BQ * CD_trans', 'BQ * DL_trans', 'CR * GL_trans', 'DU * EP_trans', 'AB * CR_trans', 'DL * DN_trans', 'DU * BQ_trans', 'CR * BQ_trans', 'EE * GL_trans', 'CD * DY_trans', 'EE * FD_trans', 'DA * DU_trans', 'EE * DU_trans', 'AF * CS_trans', 'CR * AM_trans', 'BC * AM_trans', 'CR * FD_trans', 'BQ * GF_trans', 'DI * CD_trans', 'CC * EG_trans', 'DA * AM_trans', 'CD * DU_trans', 'BQ * CR_trans', 'EP * DU_trans', 'EP * FI_trans', 'AY * FS_trans', 'AF * FI_trans', 'DN * DI_trans', 'BQ * DY_trans', 'AF * CR_trans', 'EU * FD_trans', 'BQ * DN_trans', 'BC * CB_trans', 'CD * FL_trans', 'DN * EL_trans', 'BQ * FI_trans', 'CC * CS_trans', 'CR * CH_trans', 'DL * FE_trans', 'CR * EB_trans', 'BQ * GL * EU_trans', 'BQ * AB * EH_trans', 'BQ * AB * AF_trans', 'DA * EB * BP_trans', 'BQ * AF * AB_trans', 'AF * BQ * AB_trans', 'BQ * DL * AX_trans', 'CR * GL * AB_trans', 'AB * CR * AM_trans', 'BQ * DU * BC_trans', 'BN * CU * GI_trans', 'DE * DU * AF_trans', 'DE * DU * DE_trans', 'EE * FD * GL_trans', 'AF * CS * CS_trans', 'AF * CC * BC_trans', 'DI * BC * EH_trans', 'CC * EL * FL_trans', 'CR * FD * CD_trans', 'CR * FD * GL_trans', 'BQ * GF * FI_trans', 'DI * CD * GL_trans', 'AB * BQ * CR_trans']
}

# VAE

class VAE_XGB_ModelRunner():
    def __init__(self,cfg: object):
        self.cfg = cfg
        seed_everything(cfg.seed)
    ## main functions 
    def main(self):
        self.load_in_data()
        self.run_fe(self.cfg.neutralize,self.cfg.feature_transformation)
        self.build_cv()
        self.run_cv()
    
    def load_in_data(self):
        self.train_df = preprocess_df(pd.read_csv(self.cfg.DATA_PATH / 'train.csv'))
        
        self.ae_train_df = preprocess_df(pd.read_csv(self.cfg.DATA_PATH / 'train.csv'))
        self.ae_train_df = self.ae_train_df.fillna(self.ae_train_df.median())
        self.ae_feature_list = list(set(self.ae_train_df.columns) - set(['Id','Class']))
        
        self.train_df['bias'] = 1
        

        self.greeks_df = pd.read_csv(self.cfg.DATA_PATH / 'greeks.csv')

        
        self.features = define_features()
    def run_fe(self,neutralize=True,feature_transformation=True):  
        if feature_transformation:
            if self.cfg.all_feature_transformation:
                skewed_vars = self.features
            else:
                skewed_vars = self.train_df[self.features].skew().sort_values(ascending=False)[self.train_df.skew().sort_values(ascending=False) > 1].index.tolist()
            replace_vars = {}
            quantile_transformers = {}
            for skewed_var in skewed_vars:
                qt = QuantileTransformer(n_quantiles=self.cfg.quantiles,random_state=self.cfg.seed, output_distribution='normal')
                self.train_df[skewed_var + "_trans"] = qt.fit_transform(self.train_df[skewed_var].to_numpy().reshape(-1,1))
                replace_vars[skewed_var] = skewed_var + "_trans"
                quantile_transformers[skewed_var] = qt
                
            self.quantile_transformers = quantile_transformers
            self.features = [replace_vars.get(feature,feature)  for feature in self.features]
            self.features = variance_threshold_selector(self.train_df[self.features]).columns.tolist()

    def build_cv(self):
        self.train_df = self.greeks_df.merge(self.train_df,on='Id')
        
            
        positives = self.train_df[self.train_df['Class'] == 1]
        negatives = self.train_df[self.train_df['Class'] == 0]

        positives_splits = np.array_split(positives, self.cfg.n_folds)
        negatives_splits = np.array_split(negatives, self.cfg.n_folds)

        data_holder_split_class = DataHolder( [pd.concat([positives_splits[i],negatives_splits[i]]) for i in range(self.cfg.n_folds)]
                                       )

        data_holder_split_alpha = self.split_on_column("Alpha")
        data_holder_split_gamma = self.split_on_column("Gamma")
        
        
        self.cv_holders = [data_holder_split_class,data_holder_split_alpha,data_holder_split_gamma]
        
        
        
    def run_cv(self):
        cv_strat_scores = []
        feat_importances = []
        models = []
        fold_log_losses = []
        outer_y_preds = []
        for cv_strat in tqdm(self.cv_holders):
            fold_scores = []
            temp_feat_importances = []
            temp_models = []
            temp_fold_log_losses = []
            inner_y_preds = []
            for idx,fold_number in enumerate(range(self.cfg.n_folds)):
                test_idx = idx + 1 
                if idx == self.cfg.n_folds -1:
                    test_idx = 0
                temp_data = cv_strat.folds.copy()
                test = temp_data[test_idx].copy()
                valid = temp_data[idx].copy()
                if test_idx < idx:
                    del temp_data[idx]
                    del temp_data[test_idx]
                else:
                    del temp_data[test_idx]
                    del temp_data[idx]
                
                train = pd.concat(temp_data)
                
            #####################################################################################################    
                if self.cfg.neutralize:
                    self.ae_train_df['bias'] = 1.0
                    ae_train = copy.deepcopy(self.ae_train_df.loc[train.index])
                    ae_valid = copy.deepcopy(self.ae_train_df.loc[valid.index])
                    ae_test = copy.deepcopy(self.ae_train_df.loc[test.index])

                    ae_neut_temp = pd.concat([ae_train,ae_valid])

                    neutralizer = self.build_neutralizer(ae_neut_temp, self.ae_feature_list, self.cfg.proportion)
                    ae_neut_temp[self.ae_feature_list] = self.neutralize_array(ae_neut_temp[self.ae_feature_list+['bias']].values, neutralizer)

                    rows = []
                    for idx,row in ae_test.iterrows():
                        rows.append(self.neutralize_array(np.asarray(row[self.ae_feature_list].tolist() + [1.0]),neutralizer))
                    ae_test[self.ae_feature_list] = rows

                    ae_train = ae_neut_temp.loc[train.index]
                    ae_valid = ae_neut_temp.loc[valid.index]
            #####################################################################################################            
                else:
                    ae_train = self.ae_train_df.loc[train.index]
                    ae_valid = self.ae_train_df.loc[valid.index]
                    ae_test = self.ae_train_df.loc[test.index]

                optimizer = Adam(learning_rate=self.cfg.ae_lr)
                BATCH_SIZE = self.cfg.batch_size
                
                model = self.create_prose_model(len(self.ae_feature_list),optimizer,self.cfg.layer_size)


                train_ds = tf.data.Dataset.from_tensor_slices(  (ae_train[self.ae_feature_list].to_numpy(),  (ae_train[self.ae_feature_list].to_numpy()) ) ).batch(BATCH_SIZE)
                valid_ds = tf.data.Dataset.from_tensor_slices(  (ae_valid[self.ae_feature_list].to_numpy(),  (ae_valid[self.ae_feature_list].to_numpy()) ) ).batch(BATCH_SIZE)
                test_x_ds = tf.data.Dataset.from_tensor_slices(ae_test[self.ae_feature_list].to_numpy()).batch(BATCH_SIZE)


                # Train the main model using the selected model's weights
                model.fit(train_ds,
                          validation_data=(valid_ds),
                          epochs=self.cfg.epochs,
                          verbose=0
                         )

                predicted_features_train= model.predict(tf.data.Dataset.from_tensor_slices(  (ae_train[self.ae_feature_list].to_numpy() ) ).batch(BATCH_SIZE))[1]
                predicted_features_valid= model.predict(tf.data.Dataset.from_tensor_slices(  (ae_valid[self.ae_feature_list].to_numpy() ) ).batch(BATCH_SIZE))[1]
                predicted_features_test = model.predict(test_x_ds)[1]


            
                x_train = pd.concat([train[self.features],pd.DataFrame(predicted_features_train,index=train.index,columns=[f'f{x}' for x in range(self.cfg.layer_size)])],axis=1)
                x_valid = pd.concat([valid[self.features],pd.DataFrame(predicted_features_valid,index=valid.index,columns=[f'f{x}' for x in range(self.cfg.layer_size)])],axis=1)
                x_test = pd.concat([test[self.features],pd.DataFrame(predicted_features_test,index=test.index,columns=[f'f{x}' for x in range(self.cfg.layer_size)])],axis=1)
                
                
            #####################################################################################################          
                            
                x_train = x_train[self.cfg.final_features]
                x_valid = x_valid[self.cfg.final_features]
                x_test = x_test[self.cfg.final_features]
                
                y_train = train['Class']
                y_valid = valid['Class']
                y_test = test['Class']
                

                model = xgboost_training(self.cfg.xgb_params,x_train, y_train, x_valid, y_valid, self.cfg.final_features,self.cfg.xgboost_boosting_rounds)
#                 model = tab_training(x_train, y_train,32)

#                 y_pred = pp_prob( model.predict_proba(x_test) )
                y_pred = model.predict(xgb.DMatrix(x_test))


                score,log_loss_0,log_loss_1 = balanced_log_loss(y_test, y_pred,return_all=True)


                fold_scores.append(score)
                temp_fold_log_losses.append([log_loss_0,log_loss_1])
                temp_feat_importances.append(model.get_score(importance_type='gain'))
#                 temp_models.append(model)
                inner_y_preds.append({x_test.index[i] : y_pred[i] for i in range(len(x_test))})
                del model 
                gc.collect()
            cv_strat_scores.append(fold_scores)
            feat_importances.append(temp_feat_importances)
#             models.append(temp_models)
            fold_log_losses.append(temp_fold_log_losses)
            outer_y_preds.append(inner_y_preds)
        
        self.cv_strat_scores = cv_strat_scores
        self.feat_importances = feat_importances
#         self.models = models
        self.fold_log_losses = fold_log_losses
        self.outer_y_preds = outer_y_preds
        
            
    
    
    def get_cv_results(self):
        frame_scores = pd.DataFrame(self.cv_strat_scores,columns=[f"fold_{i}" for i in range(self.cfg.n_folds)],index=['Class','Alpha','Gamma'])
        log_loss_mean_details = pd.DataFrame(np.mean(self.fold_log_losses,axis=1),columns=["mean_log_loss0","mean_log_loss1" ],index=['Class','Alpha','Gamma'])
        log_loss_std_details = pd.DataFrame(np.std(self.fold_log_losses,axis=1),columns=["std_log_loss0","std_log_loss1" ],index=['Class','Alpha','Gamma'])
        display(frame_scores)
        display(frame_scores.agg([np.mean,np.std],axis=1).join(log_loss_mean_details).join(log_loss_std_details)[['mean','std','mean_log_loss0','std_log_loss0','mean_log_loss1','std_log_loss1']])
        print(frame_scores.mean().mean())
        means = pd.DataFrame([pd.DataFrame(feat_importance).mean() for feat_importance in self.feat_importances]).mean()
        stds = pd.DataFrame([pd.DataFrame(feat_importance).std() for feat_importance in self.feat_importances]).mean()
        total_included = pd.DataFrame([pd.DataFrame(feat_importance).count() for feat_importance in self.feat_importances]).sum()
        self.feature_summaries = pd.DataFrame([means,stds,total_included],index=["Mean","Std","total"]).T.sort_values(["total","Mean","Std"],ascending=False).reset_index()
    
    def get_oof_preds(self,cv=0):
        from collections import ChainMap
        temp_preds = pd.DataFrame(dict(ChainMap(*self.outer_y_preds[cv])),index=['Predictions']).T.sort_index()
        temp_preds['GT'] = self.train_df['Class']
        temp_preds.reset_index(inplace=True,drop=True)
        return temp_preds
    ## cv helper functions 
        
    def split_on_column(self,column):
        train_group = [self.train_df[self.train_df['Id'].isin(self.greeks_df[self.greeks_df[column] == letter]['Id'])] for letter in self.greeks_df[column].unique()]

        grouped_splits = [np.array_split(grouped,self.cfg.n_folds) for grouped in train_group]

        data_holder_split = DataHolder( [pd.concat([split[i] for split in grouped_splits]) for i in range(self.cfg.n_folds)]
                                       )
        return data_holder_split

    

            
            
    
    def build_neutralizer(self,df,features,proportion):
        """
                            
                    
        Builds neutralzied features, then trains a linear model to predict neutralized features from original
        features and return the coeffs of that model.
        """
        self.train_df['bias'] = 1.0
        neutralizer = {}
        neutralized_features = np.zeros((df.shape[0], len(features)))
        target = df[['Class', 'bias']].values
        for i, f in enumerate(features):
            # obtain corrected feature
            feature = df[f].values.reshape(-1, 1)
            coeffs = np.linalg.lstsq(target, feature)[0]
            neutralized_features[:, i] = (feature - (proportion * target.dot(coeffs))).squeeze()

        # train model to predict corrected features
        neutralizer = np.linalg.lstsq(df[features+['bias']].values, neutralized_features)[0]
        
        return neutralizer

    def neutralize_array(self,array, neutralizer):
        neutralized_array = array.dot(neutralizer)
        return neutralized_array

    def create_prose_model(self,n_inputs,optimizer,layer_size):
        inp = tf.keras.layers.Input(shape = (n_inputs, ))
        x0 = tf.keras.layers.BatchNormalization()(inp)

        encoder = tf.keras.layers.Dense(layer_size)(x0)
        encoder = tf.keras.layers.BatchNormalization()(encoder)
        encoder = tf.keras.layers.Activation('swish')(encoder)

        decoder = tf.keras.layers.Dense(n_inputs, name = 'decoder')(encoder)

        # Combine the outputs

        model = Model(inputs=inp, outputs=[decoder,encoder])
        loss = {'decoder': tf.keras.losses.MeanSquaredError()},
        model.compile(optimizer=optimizer, loss=loss)

        return model
    
non_neut_VAE_v6 = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 241,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.06272536148116327, 
        'max_depth': 4,
        'colsample_bytree': 0.4335019242367885,
        'subsample': 0.684789213286131,
        'lambda': 3,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.866299309575079
    },
    ## VAE paramerters
    "batch_size" : 64,
    "ae_lr" : 0.007601883559513039,
    "epochs" : 56,
    "layer_size": 28,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(28)]
}
non_neut_VAE_v26 = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 221,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07720920047400176, 
        'max_depth': 5,
        'colsample_bytree': 0.4429078835657256,
        'subsample': 0.6373351974226807,
        'lambda': 7,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.85207502659666
    },
    ## VAE paramerters
    "batch_size" : 64,
    "ae_lr" : 0.008009372776878012,
    "epochs" : 56,
    "layer_size": 25,
    "final_features" : ['AB_trans', 'AF_trans', 'AH_trans', 'AM_trans', 'AX_trans', 'AY_trans','BC_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BQ_trans', 'BR_trans','CB_trans', 'CC_trans', 'CD_trans', 'CF_trans', 'CH_trans', 'CR_trans','CS_trans', 'DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DI_trans','DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans','EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'FC_trans','FD_trans', 'FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GE_trans','GF_trans', 'GH_trans', 'GL_trans'] + [f"f{i}" for i in range(25)]
        
}
non_neut_VAE_v24 = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 238,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.0711358214519404, 
        'max_depth': 3,
        'colsample_bytree': 0.4855569368070125,
        'subsample': 0.690272361460206,
        'lambda': 7,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.348202959843748
    },
    ## VAE paramerters
    "batch_size" : 64,
    "ae_lr" : 0.0036061914638400054,
    "epochs" : 110,
    "layer_size": 27,
    "final_features" : ['AB_trans', 'AF_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'BD_trans','BP_trans', 'BQ_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CF_trans','CH_trans', 'CR_trans', 'DA_trans', 'DE_trans', 'DH_trans', 'DI_trans','DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans','EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'FC_trans', 'FD_trans','FI_trans', 'FL_trans', 'GE_trans', 'GH_trans', 'GL_trans']+ [f"f{i}" for i in range(27)]
 
}

non_neut_VAE_v27 = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 232,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.061502292897857525, 
        'max_depth': 5,
        'colsample_bytree': 0.5634818906618715,
        'subsample': 0.6530982220956619,
        'lambda': 3,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.376531854553758
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.0035576304032851258,
    "epochs" : 97,
    "layer_size": 26,
    "final_features" : ['AB_trans', 'AF_trans', 'AH_trans', 'AM_trans', 'AR_trans', 'AX_trans','AY_trans', 'BC_trans', 'BD_trans', 'BN_trans', 'BP_trans', 'BQ_trans','BR_trans', 'BZ_trans', 'CB_trans', 'CC_trans', 'CD_trans', 'CF_trans','CH_trans', 'CL_trans', 'CR_trans', 'CS_trans', 'CU_trans', 'CW_trans','DA_trans', 'DE_trans', 'DF_trans', 'DH_trans', 'DI_trans', 'DL_trans','DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans', 'EE_trans','EG_trans', 'EH_trans', 'EL_trans', 'EP_trans', 'FC_trans', 'FD_trans','FI_trans', 'FL_trans', 'FR_trans', 'GB_trans', 'GE_trans', 'GF_trans','GH_trans', 'GL_trans']+ [f"f{i}" for i in range(26)]
 
}


non_neut_VAE_v28 = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 50,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 250,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05937165805594688, 
        'max_depth': 3,
        'colsample_bytree': 0.5431939466289109,
        'subsample': 0.600472076370022,
        'lambda': 9,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.67036700494553
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.009613416610150763,
    "epochs" : 143,
    "layer_size": 18,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(18)]
}





non_neut_VAE_v30_a = {
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 236,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07992306176165795, 
        'max_depth': 5,
        'colsample_bytree': 0.6399131042152362,
        'subsample': 0.6597133298036869,
        'lambda': 7,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.895251745644047
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.008703174415116116,
    "epochs" : 244,
    "layer_size": 16,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(16)]
}
non_neut_VAE_v30_b = {
    #trial 81
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 224,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07918375373822, 
        'max_depth': 3,
        'colsample_bytree': 0.6440336595018764,
        'subsample': 0.6614751489473121,
        'lambda': 8,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.907137660770371
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.008152489952022918,
    "epochs" : 110,
    "layer_size": 17,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(17)]
}

non_neut_VAE_v30_c = {
    #trial 91
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 245,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07835248328467416, 
        'max_depth': 2,
        'colsample_bytree': 0.6793151096605894,
        'subsample': 0.6898962444171542,
        'lambda': 7,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.865299031861664
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.009233842385418238,
    "epochs" : 240,
    "layer_size": 24,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(24)]
}
non_neut_VAE_v30_d = {
    #trial 76
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 75,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 214,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07841775229256912, 
        'max_depth': 5,
        'colsample_bytree': 0.6126979705581157,
        'subsample': 0.6766690394027048,
        'lambda': 8,
        'min_child_weight': 14,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.846991650427588
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.00915485510397763,
    "epochs" : 209,
    "layer_size": 23,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(23)]
}

non_neut_VAE_v31_a = {
    #best
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 234,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.050354859354719624, 
        'max_depth': 4,
        'colsample_bytree': 0.6953817130384682,
        'subsample': 0.6443217907190804,
        'lambda': 2,
        'min_child_weight': 12,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.996747037607181
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.008186171130614988,
    "epochs" : 126,
    "layer_size": 35,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(35)]
}

non_neut_VAE_v31_b = {
    #best
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 233,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.05368901739784408, 
        'max_depth': 4,
        'colsample_bytree': 0.6953817130384682,
        'subsample': 0.6829791325138594,
        'lambda': 1,
        'min_child_weight': 13,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.772622829187376
    },
    ## VAE paramerters
    "batch_size" : 128,
    "ae_lr" : 0.008597133906581922,
    "epochs" : 141,
    "layer_size": 41,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(41)]
}

non_neut_VAE_v34_a = {
    #best
    "neutralize" : False,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 373,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.041097223757061804, 
        'max_depth': 3,
        'colsample_bytree': 0.6227219864676656,
        'subsample': 0.6309936816416141,
        'lambda': 5,
        'min_child_weight': 11,
        'seed': mainCFG.seed,
        'scale_pos_weight': 5.7812035826824335
    },
    ## VAE paramerters
    "batch_size" : 32,
    "ae_lr" : 0.0031468246615051743,
    "epochs" : 134,
    "layer_size": 21,
    "final_features" : ['AB_trans', 'AF_trans', 'AM_trans', 'AX_trans', 'AY_trans', 'BD_trans','BP_trans', 'BQ_trans', 'BR_trans', 'CC_trans', 'CD_trans', 'CF_trans','CH_trans', 'CR_trans', 'DA_trans', 'DE_trans', 'DH_trans', 'DI_trans','DL_trans', 'DN_trans', 'DU_trans', 'DV_trans', 'DY_trans', 'EB_trans','EE_trans', 'EG_trans', 'EH_trans', 'EL_trans', 'FC_trans', 'FD_trans','FI_trans', 'FL_trans', 'GE_trans', 'GH_trans', 'GL_trans'] + [f"f{i}" for i in range(21)]
}

neut_VAE_v35_a = {
    #best
    "neutralize" : True,
    "feature_transformation": True,
    "all_feature_transformation": True,
    "quantiles" : 100,
    ## Neutralizer details
    "proportion" : 0.25,
    ## Model details
    "xgboost_boosting_rounds" : 342,
    "xgb_params" :{
        'objective': 'binary:logistic',
        'eval_metric': 'logloss',
        'learning_rate': 0.07497185743258862, 
        'max_depth': 4,
        'colsample_bytree': 0.5146836688930008,
        'subsample': 0.5243075996256485,
        'lambda': 10,
        'min_child_weight': 10,
        'seed': mainCFG.seed,
        'scale_pos_weight': 4.634360483608185
    },
    ## VAE paramerters
    "batch_size" : 32,
    "ae_lr" : 0.0048668390711844815,
    "epochs" : 86,
    "layer_size": 10,
    "final_features" : [x +"_trans" for x in define_features()] + [f"f{i}" for i in range(10)]
}
